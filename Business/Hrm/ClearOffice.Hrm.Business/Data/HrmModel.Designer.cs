//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HrmModel", "fk_job_comp_reference_competen", "competency_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.CompetencyType), "job_competency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.JobCompetency), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_job_comp_reference_job", "job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Job), "job_competency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.JobCompetency), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_job_func_reference_job", "job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Job), "job_function", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.JobFunction), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_job_skil_reference_job", "job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Job), "job_skill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.JobSkill), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_benefit_", "benefit_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.BenefitType), "employee_benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeBenefit), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_contact__reference_person", "person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Person), "contact_address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.ContactAddress), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_person_reference_country", "country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Country), "person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Person), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_custom_f", "custom_field", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.CustomField), "employee_custom_field_value", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeCustomFieldValue), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_dependan", "dependant_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.DependantType), "employee_dependant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeDependant), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_educatio", "education_level", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.EducationLevel), "employee_educational_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeEducationalHistory), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_edu_t_educatio", "education_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.EducationType), "employee_educational_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeEducationalHistory), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_emergenc_reference_person", "person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Person), "emergency_contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmergencyContact), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_fk_emp_de_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_dependant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeDependant), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Job), "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Employee), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_organization", "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Organization), "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Employee), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_a_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_accident", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeAccident), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_b_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeBenefit), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_c_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_custom_field_value", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeCustomFieldValue), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_d_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_disciplinary_measure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeDisciplinaryMeasure), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_e_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_educational_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeEducationalHistory), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_m_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_medical_record", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeMedicalRecord), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_s_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_skill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeSkill), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_w_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_work_experiance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeWorkExperiance), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emplo_employee", "employee_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.EmployeeStatus), "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Employee), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_insur_employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_insurance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeInsurance), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_person", "person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Person), "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Employee), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_language_ref_lang__employee", "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "language_skill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.language_skill), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_measure_", "measure_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.MeasureType), "employee_disciplinary_measure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeDisciplinaryMeasure), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_ref_emp_i_insuranc", "insurance_policy_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.InsurancePolicyType), "employee_insurance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeInsurance), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_insuranc", "insurance_company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.InsuranceCompany), "employee_insurance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeInsurance), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_employee_reference_employee", "employee_skill_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.EmployeeSkillType), "employee_skill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeSkill), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_person_reference_ethnicit", "ethnicity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Ethnicity), "person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Person), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_job_reference_organiza", "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Organization), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Job), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_job_skil_reference_job_skil", "job_skill_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.JobSkillType), "JobSkill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.JobSkill), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_language_reference_language", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Language), "language_skill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.language_skill), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_person_reference_marital_", "marital_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.MaritalStatus), "person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Person), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_person_reference_national", "nationality", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Nationality), "person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Person), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_organiza_reference_organiza", "organization_node_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.OrganizationNodeType), "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Organization), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "fk_person_reference_religion", "religion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Religion), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Person), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_employee_type", "EmployeeType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.EmployeeType), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Employee), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_transfer_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeTransfer), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_promotion_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_promotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePromotion), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_termination_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "EmployeeTermination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeTermination), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_training_attendance_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "training_attendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.TrainingAttendance), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_training_attendance_training", "training", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Training), "training_attendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.TrainingAttendance), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_training_feedback_training", "training", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Training), "training_feedback", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.TrainingFeedback), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_training_training_request", "training_request", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.TrainingRequest), "Training", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.Training), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_training_request_training_category", "TrainingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.TrainingCategory), "training_request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.TrainingRequest), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_pto_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_pto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePto), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_pto_transaction_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_pto_transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePtoTransaction), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_warning_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "EmployeeWarning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeWarning), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_promotion_job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Job), "EmployeePromotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePromotion), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_promotion_job1", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Job), "EmployeePromotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePromotion), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_transfer_job", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Hrm.Business.Data.Job), "EmployeeTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeTransfer), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_transfer_job1", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Hrm.Business.Data.Job), "EmployeeTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeTransfer), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_leave_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_leave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeLeave), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_pto_status_employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Employee), "employee_pto_status", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePtoStatus), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_leave_leave_type", "leave_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.LeaveType), "employee_leave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeLeave), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_promotion_organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Organization), "EmployeePromotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePromotion), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_promotion_organization1", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.Organization), "EmployeePromotion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeePromotion), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_transfer_organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Hrm.Business.Data.Organization), "EmployeeTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeTransfer), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_transfer_organization1", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Hrm.Business.Data.Organization), "EmployeeTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeTransfer), true)]
[assembly: EdmRelationshipAttribute("HrmModel", "FK_employee_warning_warning_type", "warning_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Hrm.Business.Data.WarningType), "EmployeeWarning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Hrm.Business.Data.EmployeeWarning), true)]

#endregion

namespace ClearOffice.Hrm.Business.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HrmEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HrmEntities object using the connection string found in the 'HrmEntities' section of the application configuration file.
        /// </summary>
        public HrmEntities() : base("name=HrmEntities", "HrmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HrmEntities object.
        /// </summary>
        public HrmEntities(string connectionString) : base(connectionString, "HrmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HrmEntities object.
        /// </summary>
        public HrmEntities(EntityConnection connection) : base(connection, "HrmEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetencyType> CompetencyTypes
        {
            get
            {
                if ((_CompetencyTypes == null))
                {
                    _CompetencyTypes = base.CreateObjectSet<CompetencyType>("CompetencyTypes");
                }
                return _CompetencyTypes;
            }
        }
        private ObjectSet<CompetencyType> _CompetencyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobCompetency> JobCompetencies
        {
            get
            {
                if ((_JobCompetencies == null))
                {
                    _JobCompetencies = base.CreateObjectSet<JobCompetency>("JobCompetencies");
                }
                return _JobCompetencies;
            }
        }
        private ObjectSet<JobCompetency> _JobCompetencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobFunction> JobFunctions
        {
            get
            {
                if ((_JobFunctions == null))
                {
                    _JobFunctions = base.CreateObjectSet<JobFunction>("JobFunctions");
                }
                return _JobFunctions;
            }
        }
        private ObjectSet<JobFunction> _JobFunctions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobSkill> JobSkills
        {
            get
            {
                if ((_JobSkills == null))
                {
                    _JobSkills = base.CreateObjectSet<JobSkill>("JobSkills");
                }
                return _JobSkills;
            }
        }
        private ObjectSet<JobSkill> _JobSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitType> BenefitTypes
        {
            get
            {
                if ((_BenefitTypes == null))
                {
                    _BenefitTypes = base.CreateObjectSet<BenefitType>("BenefitTypes");
                }
                return _BenefitTypes;
            }
        }
        private ObjectSet<BenefitType> _BenefitTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactAddress> ContactAddresses
        {
            get
            {
                if ((_ContactAddresses == null))
                {
                    _ContactAddresses = base.CreateObjectSet<ContactAddress>("ContactAddresses");
                }
                return _ContactAddresses;
            }
        }
        private ObjectSet<ContactAddress> _ContactAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomField> CustomFields
        {
            get
            {
                if ((_CustomFields == null))
                {
                    _CustomFields = base.CreateObjectSet<CustomField>("CustomFields");
                }
                return _CustomFields;
            }
        }
        private ObjectSet<CustomField> _CustomFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DependantType> DependantTypes
        {
            get
            {
                if ((_DependantTypes == null))
                {
                    _DependantTypes = base.CreateObjectSet<DependantType>("DependantTypes");
                }
                return _DependantTypes;
            }
        }
        private ObjectSet<DependantType> _DependantTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EducationLevel> EducationLevels
        {
            get
            {
                if ((_EducationLevels == null))
                {
                    _EducationLevels = base.CreateObjectSet<EducationLevel>("EducationLevels");
                }
                return _EducationLevels;
            }
        }
        private ObjectSet<EducationLevel> _EducationLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EducationType> EducationTypes
        {
            get
            {
                if ((_EducationTypes == null))
                {
                    _EducationTypes = base.CreateObjectSet<EducationType>("EducationTypes");
                }
                return _EducationTypes;
            }
        }
        private ObjectSet<EducationType> _EducationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmergencyContact> EmergencyContacts
        {
            get
            {
                if ((_EmergencyContacts == null))
                {
                    _EmergencyContacts = base.CreateObjectSet<EmergencyContact>("EmergencyContacts");
                }
                return _EmergencyContacts;
            }
        }
        private ObjectSet<EmergencyContact> _EmergencyContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeAccident> EmployeeAccidents
        {
            get
            {
                if ((_EmployeeAccidents == null))
                {
                    _EmployeeAccidents = base.CreateObjectSet<EmployeeAccident>("EmployeeAccidents");
                }
                return _EmployeeAccidents;
            }
        }
        private ObjectSet<EmployeeAccident> _EmployeeAccidents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeActingPromotion> EmployeeActingPromotions
        {
            get
            {
                if ((_EmployeeActingPromotions == null))
                {
                    _EmployeeActingPromotions = base.CreateObjectSet<EmployeeActingPromotion>("EmployeeActingPromotions");
                }
                return _EmployeeActingPromotions;
            }
        }
        private ObjectSet<EmployeeActingPromotion> _EmployeeActingPromotions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeBenefit> EmployeeBenefits
        {
            get
            {
                if ((_EmployeeBenefits == null))
                {
                    _EmployeeBenefits = base.CreateObjectSet<EmployeeBenefit>("EmployeeBenefits");
                }
                return _EmployeeBenefits;
            }
        }
        private ObjectSet<EmployeeBenefit> _EmployeeBenefits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeCustomFieldValue> EmployeeCustomFieldValues
        {
            get
            {
                if ((_EmployeeCustomFieldValues == null))
                {
                    _EmployeeCustomFieldValues = base.CreateObjectSet<EmployeeCustomFieldValue>("EmployeeCustomFieldValues");
                }
                return _EmployeeCustomFieldValues;
            }
        }
        private ObjectSet<EmployeeCustomFieldValue> _EmployeeCustomFieldValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeDependant> EmployeeDependants
        {
            get
            {
                if ((_EmployeeDependants == null))
                {
                    _EmployeeDependants = base.CreateObjectSet<EmployeeDependant>("EmployeeDependants");
                }
                return _EmployeeDependants;
            }
        }
        private ObjectSet<EmployeeDependant> _EmployeeDependants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeDisciplinaryMeasure> EmployeeDisciplinaryMeasures
        {
            get
            {
                if ((_EmployeeDisciplinaryMeasures == null))
                {
                    _EmployeeDisciplinaryMeasures = base.CreateObjectSet<EmployeeDisciplinaryMeasure>("EmployeeDisciplinaryMeasures");
                }
                return _EmployeeDisciplinaryMeasures;
            }
        }
        private ObjectSet<EmployeeDisciplinaryMeasure> _EmployeeDisciplinaryMeasures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeEducationalHistory> EmployeeEducationalHistories
        {
            get
            {
                if ((_EmployeeEducationalHistories == null))
                {
                    _EmployeeEducationalHistories = base.CreateObjectSet<EmployeeEducationalHistory>("EmployeeEducationalHistories");
                }
                return _EmployeeEducationalHistories;
            }
        }
        private ObjectSet<EmployeeEducationalHistory> _EmployeeEducationalHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeInsurance> EmployeeInsurances
        {
            get
            {
                if ((_EmployeeInsurances == null))
                {
                    _EmployeeInsurances = base.CreateObjectSet<EmployeeInsurance>("EmployeeInsurances");
                }
                return _EmployeeInsurances;
            }
        }
        private ObjectSet<EmployeeInsurance> _EmployeeInsurances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeMedicalRecord> EmployeeMedicalRecords
        {
            get
            {
                if ((_EmployeeMedicalRecords == null))
                {
                    _EmployeeMedicalRecords = base.CreateObjectSet<EmployeeMedicalRecord>("EmployeeMedicalRecords");
                }
                return _EmployeeMedicalRecords;
            }
        }
        private ObjectSet<EmployeeMedicalRecord> _EmployeeMedicalRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeSkill> EmployeeSkills
        {
            get
            {
                if ((_EmployeeSkills == null))
                {
                    _EmployeeSkills = base.CreateObjectSet<EmployeeSkill>("EmployeeSkills");
                }
                return _EmployeeSkills;
            }
        }
        private ObjectSet<EmployeeSkill> _EmployeeSkills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeSkillType> EmployeeSkillTypes
        {
            get
            {
                if ((_EmployeeSkillTypes == null))
                {
                    _EmployeeSkillTypes = base.CreateObjectSet<EmployeeSkillType>("EmployeeSkillTypes");
                }
                return _EmployeeSkillTypes;
            }
        }
        private ObjectSet<EmployeeSkillType> _EmployeeSkillTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeStatus> EmployeeStatus
        {
            get
            {
                if ((_EmployeeStatus == null))
                {
                    _EmployeeStatus = base.CreateObjectSet<EmployeeStatus>("EmployeeStatus");
                }
                return _EmployeeStatus;
            }
        }
        private ObjectSet<EmployeeStatus> _EmployeeStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTraining> EmployeeTrainings
        {
            get
            {
                if ((_EmployeeTrainings == null))
                {
                    _EmployeeTrainings = base.CreateObjectSet<EmployeeTraining>("EmployeeTrainings");
                }
                return _EmployeeTrainings;
            }
        }
        private ObjectSet<EmployeeTraining> _EmployeeTrainings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeType> EmployeeTypes
        {
            get
            {
                if ((_EmployeeTypes == null))
                {
                    _EmployeeTypes = base.CreateObjectSet<EmployeeType>("EmployeeTypes");
                }
                return _EmployeeTypes;
            }
        }
        private ObjectSet<EmployeeType> _EmployeeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeWorkExperiance> EmployeeWorkExperiances
        {
            get
            {
                if ((_EmployeeWorkExperiances == null))
                {
                    _EmployeeWorkExperiances = base.CreateObjectSet<EmployeeWorkExperiance>("EmployeeWorkExperiances");
                }
                return _EmployeeWorkExperiances;
            }
        }
        private ObjectSet<EmployeeWorkExperiance> _EmployeeWorkExperiances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ethnicity> Ethnicities
        {
            get
            {
                if ((_Ethnicities == null))
                {
                    _Ethnicities = base.CreateObjectSet<Ethnicity>("Ethnicities");
                }
                return _Ethnicities;
            }
        }
        private ObjectSet<Ethnicity> _Ethnicities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceCompany> InsuranceCompanies
        {
            get
            {
                if ((_InsuranceCompanies == null))
                {
                    _InsuranceCompanies = base.CreateObjectSet<InsuranceCompany>("InsuranceCompanies");
                }
                return _InsuranceCompanies;
            }
        }
        private ObjectSet<InsuranceCompany> _InsuranceCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsurancePolicyType> InsurancePolicyTypes
        {
            get
            {
                if ((_InsurancePolicyTypes == null))
                {
                    _InsurancePolicyTypes = base.CreateObjectSet<InsurancePolicyType>("InsurancePolicyTypes");
                }
                return _InsurancePolicyTypes;
            }
        }
        private ObjectSet<InsurancePolicyType> _InsurancePolicyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobSkillType> JobSkillTypes
        {
            get
            {
                if ((_JobSkillTypes == null))
                {
                    _JobSkillTypes = base.CreateObjectSet<JobSkillType>("JobSkillTypes");
                }
                return _JobSkillTypes;
            }
        }
        private ObjectSet<JobSkillType> _JobSkillTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<language_skill> language_skill
        {
            get
            {
                if ((_language_skill == null))
                {
                    _language_skill = base.CreateObjectSet<language_skill>("language_skill");
                }
                return _language_skill;
            }
        }
        private ObjectSet<language_skill> _language_skill;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations1
        {
            get
            {
                if ((_Locations1 == null))
                {
                    _Locations1 = base.CreateObjectSet<Location>("Locations1");
                }
                return _Locations1;
            }
        }
        private ObjectSet<Location> _Locations1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaritalStatus> MaritalStatuses
        {
            get
            {
                if ((_MaritalStatuses == null))
                {
                    _MaritalStatuses = base.CreateObjectSet<MaritalStatus>("MaritalStatuses");
                }
                return _MaritalStatuses;
            }
        }
        private ObjectSet<MaritalStatus> _MaritalStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasureType> MeasureTypes
        {
            get
            {
                if ((_MeasureTypes == null))
                {
                    _MeasureTypes = base.CreateObjectSet<MeasureType>("MeasureTypes");
                }
                return _MeasureTypes;
            }
        }
        private ObjectSet<MeasureType> _MeasureTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Nationality> Nationalities
        {
            get
            {
                if ((_Nationalities == null))
                {
                    _Nationalities = base.CreateObjectSet<Nationality>("Nationalities");
                }
                return _Nationalities;
            }
        }
        private ObjectSet<Nationality> _Nationalities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationNodeType> OrganizationNodeTypes
        {
            get
            {
                if ((_OrganizationNodeTypes == null))
                {
                    _OrganizationNodeTypes = base.CreateObjectSet<OrganizationNodeType>("OrganizationNodeTypes");
                }
                return _OrganizationNodeTypes;
            }
        }
        private ObjectSet<OrganizationNodeType> _OrganizationNodeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyInformation> CompanyInformations
        {
            get
            {
                if ((_CompanyInformations == null))
                {
                    _CompanyInformations = base.CreateObjectSet<CompanyInformation>("CompanyInformations");
                }
                return _CompanyInformations;
            }
        }
        private ObjectSet<CompanyInformation> _CompanyInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankBranch> BankBranches
        {
            get
            {
                if ((_BankBranches == null))
                {
                    _BankBranches = base.CreateObjectSet<BankBranch>("BankBranches");
                }
                return _BankBranches;
            }
        }
        private ObjectSet<BankBranch> _BankBranches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeductionCondition> DeductionConditions
        {
            get
            {
                if ((_DeductionConditions == null))
                {
                    _DeductionConditions = base.CreateObjectSet<DeductionCondition>("DeductionConditions");
                }
                return _DeductionConditions;
            }
        }
        private ObjectSet<DeductionCondition> _DeductionConditions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Religion> Religions
        {
            get
            {
                if ((_Religions == null))
                {
                    _Religions = base.CreateObjectSet<Religion>("Religions");
                }
                return _Religions;
            }
        }
        private ObjectSet<Religion> _Religions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeInfo> EmployeeInfoes
        {
            get
            {
                if ((_EmployeeInfoes == null))
                {
                    _EmployeeInfoes = base.CreateObjectSet<EmployeeInfo>("EmployeeInfoes");
                }
                return _EmployeeInfoes;
            }
        }
        private ObjectSet<EmployeeInfo> _EmployeeInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobInfo> JobInfoes
        {
            get
            {
                if ((_JobInfoes == null))
                {
                    _JobInfoes = base.CreateObjectSet<JobInfo>("JobInfoes");
                }
                return _JobInfoes;
            }
        }
        private ObjectSet<JobInfo> _JobInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTransfer> EmployeeTransfers
        {
            get
            {
                if ((_EmployeeTransfers == null))
                {
                    _EmployeeTransfers = base.CreateObjectSet<EmployeeTransfer>("EmployeeTransfers");
                }
                return _EmployeeTransfers;
            }
        }
        private ObjectSet<EmployeeTransfer> _EmployeeTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTermination> EmployeeTerminations
        {
            get
            {
                if ((_EmployeeTerminations == null))
                {
                    _EmployeeTerminations = base.CreateObjectSet<EmployeeTermination>("EmployeeTerminations");
                }
                return _EmployeeTerminations;
            }
        }
        private ObjectSet<EmployeeTermination> _EmployeeTerminations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePromotion> EmployeePromotions
        {
            get
            {
                if ((_EmployeePromotions == null))
                {
                    _EmployeePromotions = base.CreateObjectSet<EmployeePromotion>("EmployeePromotions");
                }
                return _EmployeePromotions;
            }
        }
        private ObjectSet<EmployeePromotion> _EmployeePromotions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Training> Trainings
        {
            get
            {
                if ((_Trainings == null))
                {
                    _Trainings = base.CreateObjectSet<Training>("Trainings");
                }
                return _Trainings;
            }
        }
        private ObjectSet<Training> _Trainings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingAttendance> TrainingAttendances
        {
            get
            {
                if ((_TrainingAttendances == null))
                {
                    _TrainingAttendances = base.CreateObjectSet<TrainingAttendance>("TrainingAttendances");
                }
                return _TrainingAttendances;
            }
        }
        private ObjectSet<TrainingAttendance> _TrainingAttendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingCategory> TrainingCategories
        {
            get
            {
                if ((_TrainingCategories == null))
                {
                    _TrainingCategories = base.CreateObjectSet<TrainingCategory>("TrainingCategories");
                }
                return _TrainingCategories;
            }
        }
        private ObjectSet<TrainingCategory> _TrainingCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingFeedback> TrainingFeedbacks
        {
            get
            {
                if ((_TrainingFeedbacks == null))
                {
                    _TrainingFeedbacks = base.CreateObjectSet<TrainingFeedback>("TrainingFeedbacks");
                }
                return _TrainingFeedbacks;
            }
        }
        private ObjectSet<TrainingFeedback> _TrainingFeedbacks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingRequest> TrainingRequests
        {
            get
            {
                if ((_TrainingRequests == null))
                {
                    _TrainingRequests = base.CreateObjectSet<TrainingRequest>("TrainingRequests");
                }
                return _TrainingRequests;
            }
        }
        private ObjectSet<TrainingRequest> _TrainingRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingAttendanceInfo> TrainingAttendanceInfoes
        {
            get
            {
                if ((_TrainingAttendanceInfoes == null))
                {
                    _TrainingAttendanceInfoes = base.CreateObjectSet<TrainingAttendanceInfo>("TrainingAttendanceInfoes");
                }
                return _TrainingAttendanceInfoes;
            }
        }
        private ObjectSet<TrainingAttendanceInfo> _TrainingAttendanceInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeInfoTraining> EmployeeInfoTrainings
        {
            get
            {
                if ((_EmployeeInfoTrainings == null))
                {
                    _EmployeeInfoTrainings = base.CreateObjectSet<EmployeeInfoTraining>("EmployeeInfoTrainings");
                }
                return _EmployeeInfoTrainings;
            }
        }
        private ObjectSet<EmployeeInfoTraining> _EmployeeInfoTrainings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingInfo> TrainingInfoes
        {
            get
            {
                if ((_TrainingInfoes == null))
                {
                    _TrainingInfoes = base.CreateObjectSet<TrainingInfo>("TrainingInfoes");
                }
                return _TrainingInfoes;
            }
        }
        private ObjectSet<TrainingInfo> _TrainingInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeWarning> EmployeeWarnings
        {
            get
            {
                if ((_EmployeeWarnings == null))
                {
                    _EmployeeWarnings = base.CreateObjectSet<EmployeeWarning>("EmployeeWarnings");
                }
                return _EmployeeWarnings;
            }
        }
        private ObjectSet<EmployeeWarning> _EmployeeWarnings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePto> EmployeePtoes
        {
            get
            {
                if ((_EmployeePtoes == null))
                {
                    _EmployeePtoes = base.CreateObjectSet<EmployeePto>("EmployeePtoes");
                }
                return _EmployeePtoes;
            }
        }
        private ObjectSet<EmployeePto> _EmployeePtoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePtoTransaction> EmployeePtoTransactions
        {
            get
            {
                if ((_EmployeePtoTransactions == null))
                {
                    _EmployeePtoTransactions = base.CreateObjectSet<EmployeePtoTransaction>("EmployeePtoTransactions");
                }
                return _EmployeePtoTransactions;
            }
        }
        private ObjectSet<EmployeePtoTransaction> _EmployeePtoTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePtoInfo> EmployeePtoInfoes
        {
            get
            {
                if ((_EmployeePtoInfoes == null))
                {
                    _EmployeePtoInfoes = base.CreateObjectSet<EmployeePtoInfo>("EmployeePtoInfoes");
                }
                return _EmployeePtoInfoes;
            }
        }
        private ObjectSet<EmployeePtoInfo> _EmployeePtoInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeLeave> EmployeeLeaves
        {
            get
            {
                if ((_EmployeeLeaves == null))
                {
                    _EmployeeLeaves = base.CreateObjectSet<EmployeeLeave>("EmployeeLeaves");
                }
                return _EmployeeLeaves;
            }
        }
        private ObjectSet<EmployeeLeave> _EmployeeLeaves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePtoStatus> EmployeePtoStatus
        {
            get
            {
                if ((_EmployeePtoStatus == null))
                {
                    _EmployeePtoStatus = base.CreateObjectSet<EmployeePtoStatus>("EmployeePtoStatus");
                }
                return _EmployeePtoStatus;
            }
        }
        private ObjectSet<EmployeePtoStatus> _EmployeePtoStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaveType> LeaveTypes
        {
            get
            {
                if ((_LeaveTypes == null))
                {
                    _LeaveTypes = base.CreateObjectSet<LeaveType>("LeaveTypes");
                }
                return _LeaveTypes;
            }
        }
        private ObjectSet<LeaveType> _LeaveTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePtoStatusInfo> EmployeePtoStatusInfoes
        {
            get
            {
                if ((_EmployeePtoStatusInfoes == null))
                {
                    _EmployeePtoStatusInfoes = base.CreateObjectSet<EmployeePtoStatusInfo>("EmployeePtoStatusInfoes");
                }
                return _EmployeePtoStatusInfoes;
            }
        }
        private ObjectSet<EmployeePtoStatusInfo> _EmployeePtoStatusInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeePtoTransactionInfo> EmployeePtoTransactionInfoes
        {
            get
            {
                if ((_EmployeePtoTransactionInfoes == null))
                {
                    _EmployeePtoTransactionInfoes = base.CreateObjectSet<EmployeePtoTransactionInfo>("EmployeePtoTransactionInfoes");
                }
                return _EmployeePtoTransactionInfoes;
            }
        }
        private ObjectSet<EmployeePtoTransactionInfo> _EmployeePtoTransactionInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarningType> WarningTypes
        {
            get
            {
                if ((_WarningTypes == null))
                {
                    _WarningTypes = base.CreateObjectSet<WarningType>("WarningTypes");
                }
                return _WarningTypes;
            }
        }
        private ObjectSet<WarningType> _WarningTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetencyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetencyTypes(CompetencyType competencyType)
        {
            base.AddObject("CompetencyTypes", competencyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobCompetencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobCompetencies(JobCompetency jobCompetency)
        {
            base.AddObject("JobCompetencies", jobCompetency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobFunctions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobFunctions(JobFunction jobFunction)
        {
            base.AddObject("JobFunctions", jobFunction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobSkills(JobSkill jobSkill)
        {
            base.AddObject("JobSkills", jobSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitTypes(BenefitType benefitType)
        {
            base.AddObject("BenefitTypes", benefitType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactAddresses(ContactAddress contactAddress)
        {
            base.AddObject("ContactAddresses", contactAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomFields(CustomField customField)
        {
            base.AddObject("CustomFields", customField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DependantTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDependantTypes(DependantType dependantType)
        {
            base.AddObject("DependantTypes", dependantType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EducationLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducationLevels(EducationLevel educationLevel)
        {
            base.AddObject("EducationLevels", educationLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EducationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEducationTypes(EducationType educationType)
        {
            base.AddObject("EducationTypes", educationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmergencyContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmergencyContacts(EmergencyContact emergencyContact)
        {
            base.AddObject("EmergencyContacts", emergencyContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeAccidents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeAccidents(EmployeeAccident employeeAccident)
        {
            base.AddObject("EmployeeAccidents", employeeAccident);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeActingPromotions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeActingPromotions(EmployeeActingPromotion employeeActingPromotion)
        {
            base.AddObject("EmployeeActingPromotions", employeeActingPromotion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeBenefits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeBenefits(EmployeeBenefit employeeBenefit)
        {
            base.AddObject("EmployeeBenefits", employeeBenefit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeCustomFieldValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeCustomFieldValues(EmployeeCustomFieldValue employeeCustomFieldValue)
        {
            base.AddObject("EmployeeCustomFieldValues", employeeCustomFieldValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeDependants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeDependants(EmployeeDependant employeeDependant)
        {
            base.AddObject("EmployeeDependants", employeeDependant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeDisciplinaryMeasures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeDisciplinaryMeasures(EmployeeDisciplinaryMeasure employeeDisciplinaryMeasure)
        {
            base.AddObject("EmployeeDisciplinaryMeasures", employeeDisciplinaryMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeEducationalHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeEducationalHistories(EmployeeEducationalHistory employeeEducationalHistory)
        {
            base.AddObject("EmployeeEducationalHistories", employeeEducationalHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeInsurances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeInsurances(EmployeeInsurance employeeInsurance)
        {
            base.AddObject("EmployeeInsurances", employeeInsurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeMedicalRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeMedicalRecords(EmployeeMedicalRecord employeeMedicalRecord)
        {
            base.AddObject("EmployeeMedicalRecords", employeeMedicalRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeSkills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeSkills(EmployeeSkill employeeSkill)
        {
            base.AddObject("EmployeeSkills", employeeSkill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeSkillTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeSkillTypes(EmployeeSkillType employeeSkillType)
        {
            base.AddObject("EmployeeSkillTypes", employeeSkillType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeStatus(EmployeeStatus employeeStatus)
        {
            base.AddObject("EmployeeStatus", employeeStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTrainings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTrainings(EmployeeTraining employeeTraining)
        {
            base.AddObject("EmployeeTrainings", employeeTraining);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTypes(EmployeeType employeeType)
        {
            base.AddObject("EmployeeTypes", employeeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeWorkExperiances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeWorkExperiances(EmployeeWorkExperiance employeeWorkExperiance)
        {
            base.AddObject("EmployeeWorkExperiances", employeeWorkExperiance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ethnicities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEthnicities(Ethnicity ethnicity)
        {
            base.AddObject("Ethnicities", ethnicity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceCompanies(InsuranceCompany insuranceCompany)
        {
            base.AddObject("InsuranceCompanies", insuranceCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsurancePolicyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsurancePolicyTypes(InsurancePolicyType insurancePolicyType)
        {
            base.AddObject("InsurancePolicyTypes", insurancePolicyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobSkillTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobSkillTypes(JobSkillType jobSkillType)
        {
            base.AddObject("JobSkillTypes", jobSkillType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the language_skill EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolanguage_skill(language_skill language_skill)
        {
            base.AddObject("language_skill", language_skill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations1(Location location)
        {
            base.AddObject("Locations1", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaritalStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaritalStatuses(MaritalStatus maritalStatus)
        {
            base.AddObject("MaritalStatuses", maritalStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasureTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasureTypes(MeasureType measureType)
        {
            base.AddObject("MeasureTypes", measureType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Nationalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNationalities(Nationality nationality)
        {
            base.AddObject("Nationalities", nationality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationNodeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationNodeTypes(OrganizationNodeType organizationNodeType)
        {
            base.AddObject("OrganizationNodeTypes", organizationNodeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyInformations(CompanyInformation companyInformation)
        {
            base.AddObject("CompanyInformations", companyInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankBranches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankBranches(BankBranch bankBranch)
        {
            base.AddObject("BankBranches", bankBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeductionConditions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeductionConditions(DeductionCondition deductionCondition)
        {
            base.AddObject("DeductionConditions", deductionCondition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Religions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReligions(Religion religion)
        {
            base.AddObject("Religions", religion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeInfoes(EmployeeInfo employeeInfo)
        {
            base.AddObject("EmployeeInfoes", employeeInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobInfoes(JobInfo jobInfo)
        {
            base.AddObject("JobInfoes", jobInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTransfers(EmployeeTransfer employeeTransfer)
        {
            base.AddObject("EmployeeTransfers", employeeTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTerminations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTerminations(EmployeeTermination employeeTermination)
        {
            base.AddObject("EmployeeTerminations", employeeTermination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePromotions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePromotions(EmployeePromotion employeePromotion)
        {
            base.AddObject("EmployeePromotions", employeePromotion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trainings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainings(Training training)
        {
            base.AddObject("Trainings", training);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingAttendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingAttendances(TrainingAttendance trainingAttendance)
        {
            base.AddObject("TrainingAttendances", trainingAttendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingCategories(TrainingCategory trainingCategory)
        {
            base.AddObject("TrainingCategories", trainingCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingFeedbacks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingFeedbacks(TrainingFeedback trainingFeedback)
        {
            base.AddObject("TrainingFeedbacks", trainingFeedback);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingRequests(TrainingRequest trainingRequest)
        {
            base.AddObject("TrainingRequests", trainingRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingAttendanceInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingAttendanceInfoes(TrainingAttendanceInfo trainingAttendanceInfo)
        {
            base.AddObject("TrainingAttendanceInfoes", trainingAttendanceInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeInfoTrainings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeInfoTrainings(EmployeeInfoTraining employeeInfoTraining)
        {
            base.AddObject("EmployeeInfoTrainings", employeeInfoTraining);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingInfoes(TrainingInfo trainingInfo)
        {
            base.AddObject("TrainingInfoes", trainingInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeWarnings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeWarnings(EmployeeWarning employeeWarning)
        {
            base.AddObject("EmployeeWarnings", employeeWarning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePtoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePtoes(EmployeePto employeePto)
        {
            base.AddObject("EmployeePtoes", employeePto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePtoTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePtoTransactions(EmployeePtoTransaction employeePtoTransaction)
        {
            base.AddObject("EmployeePtoTransactions", employeePtoTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePtoInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePtoInfoes(EmployeePtoInfo employeePtoInfo)
        {
            base.AddObject("EmployeePtoInfoes", employeePtoInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeLeaves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeLeaves(EmployeeLeave employeeLeave)
        {
            base.AddObject("EmployeeLeaves", employeeLeave);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePtoStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePtoStatus(EmployeePtoStatus employeePtoStatus)
        {
            base.AddObject("EmployeePtoStatus", employeePtoStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaveTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaveTypes(LeaveType leaveType)
        {
            base.AddObject("LeaveTypes", leaveType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePtoStatusInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePtoStatusInfoes(EmployeePtoStatusInfo employeePtoStatusInfo)
        {
            base.AddObject("EmployeePtoStatusInfoes", employeePtoStatusInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeePtoTransactionInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeePtoTransactionInfoes(EmployeePtoTransactionInfo employeePtoTransactionInfo)
        {
            base.AddObject("EmployeePtoTransactionInfoes", employeePtoTransactionInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarningTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarningTypes(WarningType warningType)
        {
            base.AddObject("WarningTypes", warningType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="BankBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankBranch object.
        /// </summary>
        /// <param name="bankBranchId">Initial value of the BankBranchId property.</param>
        public static BankBranch CreateBankBranch(global::System.Int32 bankBranchId)
        {
            BankBranch bankBranch = new BankBranch();
            bankBranch.BankBranchId = bankBranchId;
            return bankBranch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankBranchId
        {
            get
            {
                return _BankBranchId;
            }
            set
            {
                if (_BankBranchId != value)
                {
                    OnBankBranchIdChanging(value);
                    ReportPropertyChanging("BankBranchId");
                    _BankBranchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankBranchId");
                    OnBankBranchIdChanged();
                }
            }
        }
        private global::System.Int32 _BankBranchId;
        partial void OnBankBranchIdChanging(global::System.Int32 value);
        partial void OnBankBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BranchName
        {
            get
            {
                return _BranchName;
            }
            set
            {
                OnBranchNameChanging(value);
                ReportPropertyChanging("BranchName");
                _BranchName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BranchName");
                OnBranchNameChanged();
            }
        }
        private global::System.String _BranchName;
        partial void OnBranchNameChanging(global::System.String value);
        partial void OnBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="BenefitType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitType object.
        /// </summary>
        /// <param name="benefitTypeId">Initial value of the BenefitTypeId property.</param>
        public static BenefitType CreateBenefitType(global::System.Int32 benefitTypeId)
        {
            BenefitType benefitType = new BenefitType();
            benefitType.BenefitTypeId = benefitTypeId;
            return benefitType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitTypeId
        {
            get
            {
                return _BenefitTypeId;
            }
            set
            {
                if (_BenefitTypeId != value)
                {
                    OnBenefitTypeIdChanging(value);
                    ReportPropertyChanging("BenefitTypeId");
                    _BenefitTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenefitTypeId");
                    OnBenefitTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _BenefitTypeId;
        partial void OnBenefitTypeIdChanging(global::System.Int32 value);
        partial void OnBenefitTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BenefitName
        {
            get
            {
                return _BenefitName;
            }
            set
            {
                OnBenefitNameChanging(value);
                ReportPropertyChanging("BenefitName");
                _BenefitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BenefitName");
                OnBenefitNameChanged();
            }
        }
        private global::System.String _BenefitName;
        partial void OnBenefitNameChanging(global::System.String value);
        partial void OnBenefitNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_benefit_", "employee_benefit")]
        public EntityCollection<EmployeeBenefit> EmployeeBenefit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeBenefit>("HrmModel.fk_employee_reference_benefit_", "employee_benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeBenefit>("HrmModel.fk_employee_reference_benefit_", "employee_benefit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="CompanyInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyInformation object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static CompanyInformation CreateCompanyInformation(global::System.Int32 companyId)
        {
            CompanyInformation companyInformation = new CompanyInformation();
            companyInformation.CompanyId = companyId;
            return companyInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Emial
        {
            get
            {
                return _Emial;
            }
            set
            {
                OnEmialChanging(value);
                ReportPropertyChanging("Emial");
                _Emial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Emial");
                OnEmialChanged();
            }
        }
        private global::System.String _Emial;
        partial void OnEmialChanging(global::System.String value);
        partial void OnEmialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="CompetencyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetencyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetencyType object.
        /// </summary>
        /// <param name="competencyTypeId">Initial value of the CompetencyTypeId property.</param>
        public static CompetencyType CreateCompetencyType(global::System.Int32 competencyTypeId)
        {
            CompetencyType competencyType = new CompetencyType();
            competencyType.CompetencyTypeId = competencyTypeId;
            return competencyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetencyTypeId
        {
            get
            {
                return _CompetencyTypeId;
            }
            set
            {
                if (_CompetencyTypeId != value)
                {
                    OnCompetencyTypeIdChanging(value);
                    ReportPropertyChanging("CompetencyTypeId");
                    _CompetencyTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetencyTypeId");
                    OnCompetencyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _CompetencyTypeId;
        partial void OnCompetencyTypeIdChanging(global::System.Int32 value);
        partial void OnCompetencyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_comp_reference_competen", "job_competency")]
        public EntityCollection<JobCompetency> JobCompetency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobCompetency>("HrmModel.fk_job_comp_reference_competen", "job_competency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobCompetency>("HrmModel.fk_job_comp_reference_competen", "job_competency", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="ContactAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactAddress object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        public static ContactAddress CreateContactAddress(global::System.Int32 addressId)
        {
            ContactAddress contactAddress = new ContactAddress();
            contactAddress.AddressId = addressId;
            return contactAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Int32> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pobox
        {
            get
            {
                return _Pobox;
            }
            set
            {
                OnPoboxChanging(value);
                ReportPropertyChanging("Pobox");
                _Pobox = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pobox");
                OnPoboxChanged();
            }
        }
        private global::System.String _Pobox;
        partial void OnPoboxChanging(global::System.String value);
        partial void OnPoboxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kebele
        {
            get
            {
                return _Kebele;
            }
            set
            {
                OnKebeleChanging(value);
                ReportPropertyChanging("Kebele");
                _Kebele = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kebele");
                OnKebeleChanged();
            }
        }
        private global::System.String _Kebele;
        partial void OnKebeleChanging(global::System.String value);
        partial void OnKebeleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subcity
        {
            get
            {
                return _Subcity;
            }
            set
            {
                OnSubcityChanging(value);
                ReportPropertyChanging("Subcity");
                _Subcity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subcity");
                OnSubcityChanged();
            }
        }
        private global::System.String _Subcity;
        partial void OnSubcityChanging(global::System.String value);
        partial void OnSubcityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private global::System.String _HouseNumber;
        partial void OnHouseNumberChanging(global::System.String value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNumber
        {
            get
            {
                return _MobileNumber;
            }
            set
            {
                OnMobileNumberChanging(value);
                ReportPropertyChanging("MobileNumber");
                _MobileNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNumber");
                OnMobileNumberChanged();
            }
        }
        private global::System.String _MobileNumber;
        partial void OnMobileNumberChanging(global::System.String value);
        partial void OnMobileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomeNumber
        {
            get
            {
                return _HomeNumber;
            }
            set
            {
                OnHomeNumberChanging(value);
                ReportPropertyChanging("HomeNumber");
                _HomeNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomeNumber");
                OnHomeNumberChanged();
            }
        }
        private global::System.String _HomeNumber;
        partial void OnHomeNumberChanging(global::System.String value);
        partial void OnHomeNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficeNumber
        {
            get
            {
                return _OfficeNumber;
            }
            set
            {
                OnOfficeNumberChanging(value);
                ReportPropertyChanging("OfficeNumber");
                _OfficeNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficeNumber");
                OnOfficeNumberChanged();
            }
        }
        private global::System.String _OfficeNumber;
        partial void OnOfficeNumberChanging(global::System.String value);
        partial void OnOfficeNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_contact__reference_person", "person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_contact__reference_person", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_contact__reference_person", "person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_contact__reference_person", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("HrmModel.fk_contact__reference_person", "person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String name)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.Name = name;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_country", "person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("HrmModel.fk_person_reference_country", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("HrmModel.fk_person_reference_country", "person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="CustomField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomField object.
        /// </summary>
        /// <param name="customFieldId">Initial value of the CustomFieldId property.</param>
        public static CustomField CreateCustomField(global::System.Int32 customFieldId)
        {
            CustomField customField = new CustomField();
            customField.CustomFieldId = customFieldId;
            return customField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldId
        {
            get
            {
                return _CustomFieldId;
            }
            set
            {
                if (_CustomFieldId != value)
                {
                    OnCustomFieldIdChanging(value);
                    ReportPropertyChanging("CustomFieldId");
                    _CustomFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomFieldId");
                    OnCustomFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomFieldId;
        partial void OnCustomFieldIdChanging(global::System.Int32 value);
        partial void OnCustomFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldType
        {
            get
            {
                return _FieldType;
            }
            set
            {
                OnFieldTypeChanging(value);
                ReportPropertyChanging("FieldType");
                _FieldType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldType");
                OnFieldTypeChanged();
            }
        }
        private global::System.String _FieldType;
        partial void OnFieldTypeChanging(global::System.String value);
        partial void OnFieldTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldValue
        {
            get
            {
                return _FieldValue;
            }
            set
            {
                OnFieldValueChanging(value);
                ReportPropertyChanging("FieldValue");
                _FieldValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldValue");
                OnFieldValueChanged();
            }
        }
        private global::System.String _FieldValue;
        partial void OnFieldValueChanging(global::System.String value);
        partial void OnFieldValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HelpText
        {
            get
            {
                return _HelpText;
            }
            set
            {
                OnHelpTextChanging(value);
                ReportPropertyChanging("HelpText");
                _HelpText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HelpText");
                OnHelpTextChanged();
            }
        }
        private global::System.String _HelpText;
        partial void OnHelpTextChanging(global::System.String value);
        partial void OnHelpTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_custom_f", "employee_custom_field_value")]
        public EntityCollection<EmployeeCustomFieldValue> EmployeeCustomFieldValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeCustomFieldValue>("HrmModel.fk_employee_reference_custom_f", "employee_custom_field_value");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeCustomFieldValue>("HrmModel.fk_employee_reference_custom_f", "employee_custom_field_value", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="DeductionCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeductionCondition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeductionCondition object.
        /// </summary>
        /// <param name="conditionId">Initial value of the ConditionId property.</param>
        public static DeductionCondition CreateDeductionCondition(global::System.Int32 conditionId)
        {
            DeductionCondition deductionCondition = new DeductionCondition();
            deductionCondition.ConditionId = conditionId;
            return deductionCondition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConditionId
        {
            get
            {
                return _ConditionId;
            }
            set
            {
                if (_ConditionId != value)
                {
                    OnConditionIdChanging(value);
                    ReportPropertyChanging("ConditionId");
                    _ConditionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConditionId");
                    OnConditionIdChanged();
                }
            }
        }
        private global::System.Int32 _ConditionId;
        partial void OnConditionIdChanging(global::System.Int32 value);
        partial void OnConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConditionName
        {
            get
            {
                return _ConditionName;
            }
            set
            {
                OnConditionNameChanging(value);
                ReportPropertyChanging("ConditionName");
                _ConditionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConditionName");
                OnConditionNameChanged();
            }
        }
        private global::System.String _ConditionName;
        partial void OnConditionNameChanging(global::System.String value);
        partial void OnConditionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentId)
        {
            Department department = new Department();
            department.DepartmentId = departmentId;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                if (_DepartmentId != value)
                {
                    OnDepartmentIdChanging(value);
                    ReportPropertyChanging("DepartmentId");
                    _DepartmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentId");
                    OnDepartmentIdChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="DependantType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DependantType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DependantType object.
        /// </summary>
        /// <param name="dependantTypeId">Initial value of the DependantTypeId property.</param>
        public static DependantType CreateDependantType(global::System.Int32 dependantTypeId)
        {
            DependantType dependantType = new DependantType();
            dependantType.DependantTypeId = dependantTypeId;
            return dependantType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DependantTypeId
        {
            get
            {
                return _DependantTypeId;
            }
            set
            {
                if (_DependantTypeId != value)
                {
                    OnDependantTypeIdChanging(value);
                    ReportPropertyChanging("DependantTypeId");
                    _DependantTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DependantTypeId");
                    OnDependantTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DependantTypeId;
        partial void OnDependantTypeIdChanging(global::System.Int32 value);
        partial void OnDependantTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DependantTypeName
        {
            get
            {
                return _DependantTypeName;
            }
            set
            {
                OnDependantTypeNameChanging(value);
                ReportPropertyChanging("DependantTypeName");
                _DependantTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DependantTypeName");
                OnDependantTypeNameChanged();
            }
        }
        private global::System.String _DependantTypeName;
        partial void OnDependantTypeNameChanging(global::System.String value);
        partial void OnDependantTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_dependan", "employee_dependant")]
        public EntityCollection<EmployeeDependant> EmployeeDependant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeDependant>("HrmModel.fk_employee_reference_dependan", "employee_dependant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeDependant>("HrmModel.fk_employee_reference_dependan", "employee_dependant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EducationLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EducationLevel object.
        /// </summary>
        /// <param name="educationLevelId">Initial value of the EducationLevelId property.</param>
        /// <param name="educationLevelName">Initial value of the EducationLevelName property.</param>
        public static EducationLevel CreateEducationLevel(global::System.Int32 educationLevelId, global::System.String educationLevelName)
        {
            EducationLevel educationLevel = new EducationLevel();
            educationLevel.EducationLevelId = educationLevelId;
            educationLevel.EducationLevelName = educationLevelName;
            return educationLevel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationLevelId
        {
            get
            {
                return _EducationLevelId;
            }
            set
            {
                if (_EducationLevelId != value)
                {
                    OnEducationLevelIdChanging(value);
                    ReportPropertyChanging("EducationLevelId");
                    _EducationLevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EducationLevelId");
                    OnEducationLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _EducationLevelId;
        partial void OnEducationLevelIdChanging(global::System.Int32 value);
        partial void OnEducationLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EducationLevelName
        {
            get
            {
                return _EducationLevelName;
            }
            set
            {
                OnEducationLevelNameChanging(value);
                ReportPropertyChanging("EducationLevelName");
                _EducationLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EducationLevelName");
                OnEducationLevelNameChanged();
            }
        }
        private global::System.String _EducationLevelName;
        partial void OnEducationLevelNameChanging(global::System.String value);
        partial void OnEducationLevelNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_educatio", "employee_educational_history")]
        public EntityCollection<EmployeeEducationalHistory> EmployeeEducationalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeEducationalHistory>("HrmModel.fk_employee_reference_educatio", "employee_educational_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeEducationalHistory>("HrmModel.fk_employee_reference_educatio", "employee_educational_history", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EducationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EducationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EducationType object.
        /// </summary>
        /// <param name="educationTypeId">Initial value of the EducationTypeId property.</param>
        /// <param name="educationTypeName">Initial value of the EducationTypeName property.</param>
        public static EducationType CreateEducationType(global::System.Int32 educationTypeId, global::System.String educationTypeName)
        {
            EducationType educationType = new EducationType();
            educationType.EducationTypeId = educationTypeId;
            educationType.EducationTypeName = educationTypeName;
            return educationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationTypeId
        {
            get
            {
                return _EducationTypeId;
            }
            set
            {
                if (_EducationTypeId != value)
                {
                    OnEducationTypeIdChanging(value);
                    ReportPropertyChanging("EducationTypeId");
                    _EducationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EducationTypeId");
                    OnEducationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EducationTypeId;
        partial void OnEducationTypeIdChanging(global::System.Int32 value);
        partial void OnEducationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EducationTypeName
        {
            get
            {
                return _EducationTypeName;
            }
            set
            {
                OnEducationTypeNameChanging(value);
                ReportPropertyChanging("EducationTypeName");
                _EducationTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EducationTypeName");
                OnEducationTypeNameChanged();
            }
        }
        private global::System.String _EducationTypeName;
        partial void OnEducationTypeNameChanging(global::System.String value);
        partial void OnEducationTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_edu_t_educatio", "employee_educational_history")]
        public EntityCollection<EmployeeEducationalHistory> EmployeeEducationalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeEducationalHistory>("HrmModel.fk_employee_ref_edu_t_educatio", "employee_educational_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeEducationalHistory>("HrmModel.fk_employee_ref_edu_t_educatio", "employee_educational_history", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmergencyContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmergencyContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmergencyContact object.
        /// </summary>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EmergencyContact CreateEmergencyContact(global::System.Int32 contactId, global::System.String name)
        {
            EmergencyContact emergencyContact = new EmergencyContact();
            emergencyContact.ContactId = contactId;
            emergencyContact.Name = name;
            return emergencyContact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                if (_ContactId != value)
                {
                    OnContactIdChanging(value);
                    ReportPropertyChanging("ContactId");
                    _ContactId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactId");
                    OnContactIdChanged();
                }
            }
        }
        private global::System.Int32 _ContactId;
        partial void OnContactIdChanging(global::System.Int32 value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Int32> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Relation
        {
            get
            {
                return _Relation;
            }
            set
            {
                OnRelationChanging(value);
                ReportPropertyChanging("Relation");
                _Relation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Relation");
                OnRelationChanged();
            }
        }
        private global::System.String _Relation;
        partial void OnRelationChanging(global::System.String value);
        partial void OnRelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Information
        {
            get
            {
                return _Information;
            }
            set
            {
                OnInformationChanging(value);
                ReportPropertyChanging("Information");
                _Information = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Information");
                OnInformationChanged();
            }
        }
        private global::System.String _Information;
        partial void OnInformationChanging(global::System.String value);
        partial void OnInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pobox
        {
            get
            {
                return _Pobox;
            }
            set
            {
                OnPoboxChanging(value);
                ReportPropertyChanging("Pobox");
                _Pobox = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pobox");
                OnPoboxChanged();
            }
        }
        private global::System.String _Pobox;
        partial void OnPoboxChanging(global::System.String value);
        partial void OnPoboxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NightTimeTel
        {
            get
            {
                return _NightTimeTel;
            }
            set
            {
                OnNightTimeTelChanging(value);
                ReportPropertyChanging("NightTimeTel");
                _NightTimeTel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NightTimeTel");
                OnNightTimeTelChanged();
            }
        }
        private global::System.String _NightTimeTel;
        partial void OnNightTimeTelChanging(global::System.String value);
        partial void OnNightTimeTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DayTimeTel
        {
            get
            {
                return _DayTimeTel;
            }
            set
            {
                OnDayTimeTelChanging(value);
                ReportPropertyChanging("DayTimeTel");
                _DayTimeTel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DayTimeTel");
                OnDayTimeTelChanged();
            }
        }
        private global::System.String _DayTimeTel;
        partial void OnDayTimeTelChanging(global::System.String value);
        partial void OnDayTimeTelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_emergenc_reference_person", "person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_emergenc_reference_person", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_emergenc_reference_person", "person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_emergenc_reference_person", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("HrmModel.fk_emergenc_reference_person", "person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="employeeNo">Initial value of the EmployeeNo property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId, global::System.String employeeNo, global::System.Decimal salary)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.EmployeeNo = employeeNo;
            employee.Salary = salary;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonId;
        partial void OnPersonIdChanging(Nullable<global::System.Int32> value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                OnEmployeeNoChanging(value);
                ReportPropertyChanging("EmployeeNo");
                _EmployeeNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeNo");
                OnEmployeeNoChanged();
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Decimal _Salary;
        partial void OnSalaryChanging(global::System.Decimal value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BackPay
        {
            get
            {
                return _BackPay;
            }
            set
            {
                OnBackPayChanging(value);
                ReportPropertyChanging("BackPay");
                _BackPay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackPay");
                OnBackPayChanged();
            }
        }
        private Nullable<global::System.Decimal> _BackPay;
        partial void OnBackPayChanging(Nullable<global::System.Decimal> value);
        partial void OnBackPayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PFAamount
        {
            get
            {
                return _PFAamount;
            }
            set
            {
                OnPFAamountChanging(value);
                ReportPropertyChanging("PFAamount");
                _PFAamount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PFAamount");
                OnPFAamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PFAamount;
        partial void OnPFAamountChanging(Nullable<global::System.Decimal> value);
        partial void OnPFAamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MedicalDeposit
        {
            get
            {
                return _MedicalDeposit;
            }
            set
            {
                OnMedicalDepositChanging(value);
                ReportPropertyChanging("MedicalDeposit");
                _MedicalDeposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalDeposit");
                OnMedicalDepositChanged();
            }
        }
        private Nullable<global::System.Decimal> _MedicalDeposit;
        partial void OnMedicalDepositChanging(Nullable<global::System.Decimal> value);
        partial void OnMedicalDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AccruedLeave
        {
            get
            {
                return _AccruedLeave;
            }
            set
            {
                OnAccruedLeaveChanging(value);
                ReportPropertyChanging("AccruedLeave");
                _AccruedLeave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccruedLeave");
                OnAccruedLeaveChanged();
            }
        }
        private Nullable<global::System.Decimal> _AccruedLeave;
        partial void OnAccruedLeaveChanging(Nullable<global::System.Decimal> value);
        partial void OnAccruedLeaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GradeId
        {
            get
            {
                return _GradeId;
            }
            set
            {
                OnGradeIdChanging(value);
                ReportPropertyChanging("GradeId");
                _GradeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GradeId");
                OnGradeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GradeId;
        partial void OnGradeIdChanging(Nullable<global::System.Int32> value);
        partial void OnGradeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNo
        {
            get
            {
                return _AccountNo;
            }
            set
            {
                OnAccountNoChanging(value);
                ReportPropertyChanging("AccountNo");
                _AccountNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNo");
                OnAccountNoChanged();
            }
        }
        private global::System.String _AccountNo;
        partial void OnAccountNoChanging(global::System.String value);
        partial void OnAccountNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsManagment
        {
            get
            {
                return _IsManagment;
            }
            set
            {
                OnIsManagmentChanging(value);
                ReportPropertyChanging("IsManagment");
                _IsManagment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManagment");
                OnIsManagmentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsManagment;
        partial void OnIsManagmentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsManagmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrentLeaveDays
        {
            get
            {
                return _CurrentLeaveDays;
            }
            set
            {
                OnCurrentLeaveDaysChanging(value);
                ReportPropertyChanging("CurrentLeaveDays");
                _CurrentLeaveDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentLeaveDays");
                OnCurrentLeaveDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrentLeaveDays;
        partial void OnCurrentLeaveDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrentLeaveDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractExpireDate
        {
            get
            {
                return _ContractExpireDate;
            }
            set
            {
                OnContractExpireDateChanging(value);
                ReportPropertyChanging("ContractExpireDate");
                _ContractExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractExpireDate");
                OnContractExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractExpireDate;
        partial void OnContractExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnContractExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearCount
        {
            get
            {
                return _YearCount;
            }
            set
            {
                OnYearCountChanging(value);
                ReportPropertyChanging("YearCount");
                _YearCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearCount");
                OnYearCountChanged();
            }
        }
        private Nullable<global::System.Int32> _YearCount;
        partial void OnYearCountChanging(Nullable<global::System.Int32> value);
        partial void OnYearCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenceExpireDate
        {
            get
            {
                return _LicenceExpireDate;
            }
            set
            {
                OnLicenceExpireDateChanging(value);
                ReportPropertyChanging("LicenceExpireDate");
                _LicenceExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenceExpireDate");
                OnLicenceExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenceExpireDate;
        partial void OnLicenceExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenceExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PFAccountNo
        {
            get
            {
                return _PFAccountNo;
            }
            set
            {
                OnPFAccountNoChanging(value);
                ReportPropertyChanging("PFAccountNo");
                _PFAccountNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PFAccountNo");
                OnPFAccountNoChanged();
            }
        }
        private global::System.String _PFAccountNo;
        partial void OnPFAccountNoChanging(global::System.String value);
        partial void OnPFAccountNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BankBranchId
        {
            get
            {
                return _BankBranchId;
            }
            set
            {
                OnBankBranchIdChanging(value);
                ReportPropertyChanging("BankBranchId");
                _BankBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankBranchId");
                OnBankBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BankBranchId;
        partial void OnBankBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBankBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                OnNodeIdChanging(value);
                ReportPropertyChanging("NodeId");
                _NodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeId");
                OnNodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeId;
        partial void OnNodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeType
        {
            get
            {
                return _EmployeeType;
            }
            set
            {
                OnEmployeeTypeChanging(value);
                ReportPropertyChanging("EmployeeType");
                _EmployeeType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeType");
                OnEmployeeTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeType;
        partial void OnEmployeeTypeChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_fk_emp_de_employee", "employee_dependant")]
        public EntityCollection<EmployeeDependant> Dependants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeDependant>("HrmModel.fk_employee_fk_emp_de_employee", "employee_dependant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeDependant>("HrmModel.fk_employee_fk_emp_de_employee", "employee_dependant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_job", "Job")]
        public Job JobDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.FK_employee_job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_organization", "organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_organization", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_organization", "organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_organization", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("HrmModel.FK_employee_organization", "organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_a_employee", "employee_accident")]
        public EntityCollection<EmployeeAccident> Accidents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeAccident>("HrmModel.fk_employee_ref_emp_a_employee", "employee_accident");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeAccident>("HrmModel.fk_employee_ref_emp_a_employee", "employee_accident", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_b_employee", "employee_benefit")]
        public EntityCollection<EmployeeBenefit> Benefits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeBenefit>("HrmModel.fk_employee_ref_emp_b_employee", "employee_benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeBenefit>("HrmModel.fk_employee_ref_emp_b_employee", "employee_benefit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_c_employee", "employee_custom_field_value")]
        public EntityCollection<EmployeeCustomFieldValue> CustomFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeCustomFieldValue>("HrmModel.fk_employee_ref_emp_c_employee", "employee_custom_field_value");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeCustomFieldValue>("HrmModel.fk_employee_ref_emp_c_employee", "employee_custom_field_value", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_d_employee", "employee_disciplinary_measure")]
        public EntityCollection<EmployeeDisciplinaryMeasure> DisciplinaryMeasures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeDisciplinaryMeasure>("HrmModel.fk_employee_ref_emp_d_employee", "employee_disciplinary_measure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeDisciplinaryMeasure>("HrmModel.fk_employee_ref_emp_d_employee", "employee_disciplinary_measure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_e_employee", "employee_educational_history")]
        public EntityCollection<EmployeeEducationalHistory> EducationalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeEducationalHistory>("HrmModel.fk_employee_ref_emp_e_employee", "employee_educational_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeEducationalHistory>("HrmModel.fk_employee_ref_emp_e_employee", "employee_educational_history", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_m_employee", "employee_medical_record")]
        public EntityCollection<EmployeeMedicalRecord> MedicalRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeMedicalRecord>("HrmModel.fk_employee_ref_emp_m_employee", "employee_medical_record");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeMedicalRecord>("HrmModel.fk_employee_ref_emp_m_employee", "employee_medical_record", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_s_employee", "employee_skill")]
        public EntityCollection<EmployeeSkill> Skills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeSkill>("HrmModel.fk_employee_ref_emp_s_employee", "employee_skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeSkill>("HrmModel.fk_employee_ref_emp_s_employee", "employee_skill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_w_employee", "employee_work_experiance")]
        public EntityCollection<EmployeeWorkExperiance> WorkExperiances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWorkExperiance>("HrmModel.fk_employee_ref_emp_w_employee", "employee_work_experiance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWorkExperiance>("HrmModel.fk_employee_ref_emp_w_employee", "employee_work_experiance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emplo_employee", "employee_status")]
        public EmployeeStatus Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeStatus>("HrmModel.fk_employee_ref_emplo_employee", "employee_status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeStatus>("HrmModel.fk_employee_ref_emplo_employee", "employee_status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeStatus> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeStatus>("HrmModel.fk_employee_ref_emplo_employee", "employee_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeStatus>("HrmModel.fk_employee_ref_emplo_employee", "employee_status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_insur_employee", "employee_insurance")]
        public EntityCollection<EmployeeInsurance> Insurances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeInsurance>("HrmModel.fk_employee_ref_insur_employee", "employee_insurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeInsurance>("HrmModel.fk_employee_ref_insur_employee", "employee_insurance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_person", "person")]
        public Person PersonalDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_employee_reference_person", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_employee_reference_person", "person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonalDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("HrmModel.fk_employee_reference_person", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("HrmModel.fk_employee_reference_person", "person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_language_ref_lang__employee", "language_skill")]
        public EntityCollection<language_skill> LanguageSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<language_skill>("HrmModel.fk_language_ref_lang__employee", "language_skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<language_skill>("HrmModel.fk_language_ref_lang__employee", "language_skill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_employee_type", "EmployeeType")]
        public EmployeeType employee_type1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("HrmModel.FK_employee_employee_type", "EmployeeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("HrmModel.FK_employee_employee_type", "EmployeeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeType> employee_type1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("HrmModel.FK_employee_employee_type", "EmployeeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeType>("HrmModel.FK_employee_employee_type", "EmployeeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_employee", "employee_transfer")]
        public EntityCollection<EmployeeTransfer> employee_transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_employee", "employee_transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_employee", "employee_transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_employee", "employee_promotion")]
        public EntityCollection<EmployeePromotion> employee_promotion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_employee", "employee_promotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_employee", "employee_promotion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_termination_employee", "EmployeeTermination")]
        public EntityCollection<EmployeeTermination> employee_termination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTermination>("HrmModel.FK_employee_termination_employee", "EmployeeTermination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTermination>("HrmModel.FK_employee_termination_employee", "EmployeeTermination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_attendance_employee", "training_attendance")]
        public EntityCollection<TrainingAttendance> training_attendance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingAttendance>("HrmModel.FK_training_attendance_employee", "training_attendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingAttendance>("HrmModel.FK_training_attendance_employee", "training_attendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_pto_employee", "employee_pto")]
        public EntityCollection<EmployeePto> EmployeePto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePto>("HrmModel.FK_employee_pto_employee", "employee_pto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePto>("HrmModel.FK_employee_pto_employee", "employee_pto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_pto_transaction_employee", "employee_pto_transaction")]
        public EntityCollection<EmployeePtoTransaction> EmployeePtoTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePtoTransaction>("HrmModel.FK_employee_pto_transaction_employee", "employee_pto_transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePtoTransaction>("HrmModel.FK_employee_pto_transaction_employee", "employee_pto_transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_warning_employee", "EmployeeWarning")]
        public EntityCollection<EmployeeWarning> employee_warning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWarning>("HrmModel.FK_employee_warning_employee", "EmployeeWarning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWarning>("HrmModel.FK_employee_warning_employee", "EmployeeWarning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_leave_employee", "employee_leave")]
        public EntityCollection<EmployeeLeave> EmployeeLeave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeLeave>("HrmModel.FK_employee_leave_employee", "employee_leave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeLeave>("HrmModel.FK_employee_leave_employee", "employee_leave", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_pto_status_employee", "employee_pto_status")]
        public EntityCollection<EmployeePtoStatus> employee_pto_status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePtoStatus>("HrmModel.FK_employee_pto_status_employee", "employee_pto_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePtoStatus>("HrmModel.FK_employee_pto_status_employee", "employee_pto_status", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeAccident")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeAccident : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeAccident object.
        /// </summary>
        /// <param name="accidentId">Initial value of the AccidentId property.</param>
        /// <param name="accidentDate">Initial value of the AccidentDate property.</param>
        public static EmployeeAccident CreateEmployeeAccident(global::System.Int32 accidentId, global::System.DateTime accidentDate)
        {
            EmployeeAccident employeeAccident = new EmployeeAccident();
            employeeAccident.AccidentId = accidentId;
            employeeAccident.AccidentDate = accidentDate;
            return employeeAccident;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccidentId
        {
            get
            {
                return _AccidentId;
            }
            set
            {
                if (_AccidentId != value)
                {
                    OnAccidentIdChanging(value);
                    ReportPropertyChanging("AccidentId");
                    _AccidentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccidentId");
                    OnAccidentIdChanged();
                }
            }
        }
        private global::System.Int32 _AccidentId;
        partial void OnAccidentIdChanging(global::System.Int32 value);
        partial void OnAccidentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AccidentDate
        {
            get
            {
                return _AccidentDate;
            }
            set
            {
                OnAccidentDateChanging(value);
                ReportPropertyChanging("AccidentDate");
                _AccidentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccidentDate");
                OnAccidentDateChanged();
            }
        }
        private global::System.DateTime _AccidentDate;
        partial void OnAccidentDateChanging(global::System.DateTime value);
        partial void OnAccidentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccidentLevel
        {
            get
            {
                return _AccidentLevel;
            }
            set
            {
                OnAccidentLevelChanging(value);
                ReportPropertyChanging("AccidentLevel");
                _AccidentLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccidentLevel");
                OnAccidentLevelChanged();
            }
        }
        private global::System.String _AccidentLevel;
        partial void OnAccidentLevelChanging(global::System.String value);
        partial void OnAccidentLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BodyPart
        {
            get
            {
                return _BodyPart;
            }
            set
            {
                OnBodyPartChanging(value);
                ReportPropertyChanging("BodyPart");
                _BodyPart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BodyPart");
                OnBodyPartChanged();
            }
        }
        private global::System.String _BodyPart;
        partial void OnBodyPartChanging(global::System.String value);
        partial void OnBodyPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Insurance
        {
            get
            {
                return _Insurance;
            }
            set
            {
                OnInsuranceChanging(value);
                ReportPropertyChanging("Insurance");
                _Insurance = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Insurance");
                OnInsuranceChanged();
            }
        }
        private global::System.String _Insurance;
        partial void OnInsuranceChanging(global::System.String value);
        partial void OnInsuranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_a_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_a_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_a_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_a_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_a_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeActingPromotion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeActingPromotion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeActingPromotion object.
        /// </summary>
        /// <param name="actingId">Initial value of the ActingId property.</param>
        public static EmployeeActingPromotion CreateEmployeeActingPromotion(global::System.Int32 actingId)
        {
            EmployeeActingPromotion employeeActingPromotion = new EmployeeActingPromotion();
            employeeActingPromotion.ActingId = actingId;
            return employeeActingPromotion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActingId
        {
            get
            {
                return _ActingId;
            }
            set
            {
                if (_ActingId != value)
                {
                    OnActingIdChanging(value);
                    ReportPropertyChanging("ActingId");
                    _ActingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActingId");
                    OnActingIdChanged();
                }
            }
        }
        private global::System.Int32 _ActingId;
        partial void OnActingIdChanging(global::System.Int32 value);
        partial void OnActingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromotionDate
        {
            get
            {
                return _PromotionDate;
            }
            set
            {
                OnPromotionDateChanging(value);
                ReportPropertyChanging("PromotionDate");
                _PromotionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromotionDate");
                OnPromotionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromotionDate;
        partial void OnPromotionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromotionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NewSalary
        {
            get
            {
                return _NewSalary;
            }
            set
            {
                OnNewSalaryChanging(value);
                ReportPropertyChanging("NewSalary");
                _NewSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewSalary");
                OnNewSalaryChanged();
            }
        }
        private Nullable<global::System.Decimal> _NewSalary;
        partial void OnNewSalaryChanging(Nullable<global::System.Decimal> value);
        partial void OnNewSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OldSalary
        {
            get
            {
                return _OldSalary;
            }
            set
            {
                OnOldSalaryChanging(value);
                ReportPropertyChanging("OldSalary");
                _OldSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldSalary");
                OnOldSalaryChanged();
            }
        }
        private Nullable<global::System.Decimal> _OldSalary;
        partial void OnOldSalaryChanging(Nullable<global::System.Decimal> value);
        partial void OnOldSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeBenefit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeBenefit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeBenefit object.
        /// </summary>
        /// <param name="employeeBenefitId">Initial value of the EmployeeBenefitId property.</param>
        public static EmployeeBenefit CreateEmployeeBenefit(global::System.Int32 employeeBenefitId)
        {
            EmployeeBenefit employeeBenefit = new EmployeeBenefit();
            employeeBenefit.EmployeeBenefitId = employeeBenefitId;
            return employeeBenefit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeBenefitId
        {
            get
            {
                return _EmployeeBenefitId;
            }
            set
            {
                if (_EmployeeBenefitId != value)
                {
                    OnEmployeeBenefitIdChanging(value);
                    ReportPropertyChanging("EmployeeBenefitId");
                    _EmployeeBenefitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeBenefitId");
                    OnEmployeeBenefitIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeBenefitId;
        partial void OnEmployeeBenefitIdChanging(global::System.Int32 value);
        partial void OnEmployeeBenefitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BenefitTypeId
        {
            get
            {
                return _BenefitTypeId;
            }
            set
            {
                OnBenefitTypeIdChanging(value);
                ReportPropertyChanging("BenefitTypeId");
                _BenefitTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitTypeId");
                OnBenefitTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BenefitTypeId;
        partial void OnBenefitTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnBenefitTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BenefitName
        {
            get
            {
                return _BenefitName;
            }
            set
            {
                OnBenefitNameChanging(value);
                ReportPropertyChanging("BenefitName");
                _BenefitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BenefitName");
                OnBenefitNameChanged();
            }
        }
        private global::System.String _BenefitName;
        partial void OnBenefitNameChanging(global::System.String value);
        partial void OnBenefitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BenefitAmount
        {
            get
            {
                return _BenefitAmount;
            }
            set
            {
                OnBenefitAmountChanging(value);
                ReportPropertyChanging("BenefitAmount");
                _BenefitAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitAmount");
                OnBenefitAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BenefitAmount;
        partial void OnBenefitAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBenefitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_benefit_", "benefit_type")]
        public BenefitType BenefitType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitType>("HrmModel.fk_employee_reference_benefit_", "benefit_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitType>("HrmModel.fk_employee_reference_benefit_", "benefit_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitType> BenefitTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitType>("HrmModel.fk_employee_reference_benefit_", "benefit_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitType>("HrmModel.fk_employee_reference_benefit_", "benefit_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_b_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_b_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_b_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_b_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_b_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeCustomFieldValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeCustomFieldValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeCustomFieldValue object.
        /// </summary>
        /// <param name="customFieldValueId">Initial value of the CustomFieldValueId property.</param>
        public static EmployeeCustomFieldValue CreateEmployeeCustomFieldValue(global::System.Decimal customFieldValueId)
        {
            EmployeeCustomFieldValue employeeCustomFieldValue = new EmployeeCustomFieldValue();
            employeeCustomFieldValue.CustomFieldValueId = customFieldValueId;
            return employeeCustomFieldValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CustomFieldValueId
        {
            get
            {
                return _CustomFieldValueId;
            }
            set
            {
                if (_CustomFieldValueId != value)
                {
                    OnCustomFieldValueIdChanging(value);
                    ReportPropertyChanging("CustomFieldValueId");
                    _CustomFieldValueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomFieldValueId");
                    OnCustomFieldValueIdChanged();
                }
            }
        }
        private global::System.Decimal _CustomFieldValueId;
        partial void OnCustomFieldValueIdChanging(global::System.Decimal value);
        partial void OnCustomFieldValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomFieldId
        {
            get
            {
                return _CustomFieldId;
            }
            set
            {
                OnCustomFieldIdChanging(value);
                ReportPropertyChanging("CustomFieldId");
                _CustomFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomFieldId");
                OnCustomFieldIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomFieldId;
        partial void OnCustomFieldIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldValue
        {
            get
            {
                return _FieldValue;
            }
            set
            {
                OnFieldValueChanging(value);
                ReportPropertyChanging("FieldValue");
                _FieldValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldValue");
                OnFieldValueChanged();
            }
        }
        private global::System.String _FieldValue;
        partial void OnFieldValueChanging(global::System.String value);
        partial void OnFieldValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_custom_f", "custom_field")]
        public CustomField CustomField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("HrmModel.fk_employee_reference_custom_f", "custom_field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("HrmModel.fk_employee_reference_custom_f", "custom_field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomField> CustomFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("HrmModel.fk_employee_reference_custom_f", "custom_field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomField>("HrmModel.fk_employee_reference_custom_f", "custom_field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_c_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_c_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_c_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_c_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_c_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeDependant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeDependant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeDependant object.
        /// </summary>
        /// <param name="dependantId">Initial value of the DependantId property.</param>
        public static EmployeeDependant CreateEmployeeDependant(global::System.Int32 dependantId)
        {
            EmployeeDependant employeeDependant = new EmployeeDependant();
            employeeDependant.DependantId = dependantId;
            return employeeDependant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DependantId
        {
            get
            {
                return _DependantId;
            }
            set
            {
                if (_DependantId != value)
                {
                    OnDependantIdChanging(value);
                    ReportPropertyChanging("DependantId");
                    _DependantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DependantId");
                    OnDependantIdChanged();
                }
            }
        }
        private global::System.Int32 _DependantId;
        partial void OnDependantIdChanging(global::System.Int32 value);
        partial void OnDependantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DependantTypeId
        {
            get
            {
                return _DependantTypeId;
            }
            set
            {
                OnDependantTypeIdChanging(value);
                ReportPropertyChanging("DependantTypeId");
                _DependantTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DependantTypeId");
                OnDependantTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DependantTypeId;
        partial void OnDependantTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDependantTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FatherName
        {
            get
            {
                return _FatherName;
            }
            set
            {
                OnFatherNameChanging(value);
                ReportPropertyChanging("FatherName");
                _FatherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FatherName");
                OnFatherNameChanged();
            }
        }
        private global::System.String _FatherName;
        partial void OnFatherNameChanging(global::System.String value);
        partial void OnFatherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Int32> _Sex;
        partial void OnSexChanging(Nullable<global::System.Int32> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_dependan", "dependant_type")]
        public DependantType DependantType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DependantType>("HrmModel.fk_employee_reference_dependan", "dependant_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DependantType>("HrmModel.fk_employee_reference_dependan", "dependant_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DependantType> DependantTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DependantType>("HrmModel.fk_employee_reference_dependan", "dependant_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DependantType>("HrmModel.fk_employee_reference_dependan", "dependant_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_fk_emp_de_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_fk_emp_de_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_fk_emp_de_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_fk_emp_de_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_fk_emp_de_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeDisciplinaryMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeDisciplinaryMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeDisciplinaryMeasure object.
        /// </summary>
        /// <param name="measureId">Initial value of the MeasureId property.</param>
        public static EmployeeDisciplinaryMeasure CreateEmployeeDisciplinaryMeasure(global::System.Int32 measureId)
        {
            EmployeeDisciplinaryMeasure employeeDisciplinaryMeasure = new EmployeeDisciplinaryMeasure();
            employeeDisciplinaryMeasure.MeasureId = measureId;
            return employeeDisciplinaryMeasure;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeasureId
        {
            get
            {
                return _MeasureId;
            }
            set
            {
                if (_MeasureId != value)
                {
                    OnMeasureIdChanging(value);
                    ReportPropertyChanging("MeasureId");
                    _MeasureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeasureId");
                    OnMeasureIdChanged();
                }
            }
        }
        private global::System.Int32 _MeasureId;
        partial void OnMeasureIdChanging(global::System.Int32 value);
        partial void OnMeasureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MeasureTypeId
        {
            get
            {
                return _MeasureTypeId;
            }
            set
            {
                OnMeasureTypeIdChanging(value);
                ReportPropertyChanging("MeasureTypeId");
                _MeasureTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeasureTypeId");
                OnMeasureTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MeasureTypeId;
        partial void OnMeasureTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMeasureTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTaken
        {
            get
            {
                return _DateTaken;
            }
            set
            {
                OnDateTakenChanging(value);
                ReportPropertyChanging("DateTaken");
                _DateTaken = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTaken");
                OnDateTakenChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTaken;
        partial void OnDateTakenChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTakenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TakenBy
        {
            get
            {
                return _TakenBy;
            }
            set
            {
                OnTakenByChanging(value);
                ReportPropertyChanging("TakenBy");
                _TakenBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TakenBy");
                OnTakenByChanged();
            }
        }
        private global::System.String _TakenBy;
        partial void OnTakenByChanging(global::System.String value);
        partial void OnTakenByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_d_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_d_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_d_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_d_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_d_employee", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_measure_", "measure_type")]
        public MeasureType MeasureType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureType>("HrmModel.fk_employee_reference_measure_", "measure_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureType>("HrmModel.fk_employee_reference_measure_", "measure_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasureType> MeasureTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureType>("HrmModel.fk_employee_reference_measure_", "measure_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasureType>("HrmModel.fk_employee_reference_measure_", "measure_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeEducationalHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeEducationalHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeEducationalHistory object.
        /// </summary>
        /// <param name="educationId">Initial value of the EducationId property.</param>
        public static EmployeeEducationalHistory CreateEmployeeEducationalHistory(global::System.Int32 educationId)
        {
            EmployeeEducationalHistory employeeEducationalHistory = new EmployeeEducationalHistory();
            employeeEducationalHistory.EducationId = educationId;
            return employeeEducationalHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationId
        {
            get
            {
                return _EducationId;
            }
            set
            {
                if (_EducationId != value)
                {
                    OnEducationIdChanging(value);
                    ReportPropertyChanging("EducationId");
                    _EducationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EducationId");
                    OnEducationIdChanged();
                }
            }
        }
        private global::System.Int32 _EducationId;
        partial void OnEducationIdChanging(global::System.Int32 value);
        partial void OnEducationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationTypeId
        {
            get
            {
                return _EducationTypeId;
            }
            set
            {
                OnEducationTypeIdChanging(value);
                ReportPropertyChanging("EducationTypeId");
                _EducationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationTypeId");
                OnEducationTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationTypeId;
        partial void OnEducationTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EducationLevelId
        {
            get
            {
                return _EducationLevelId;
            }
            set
            {
                OnEducationLevelIdChanging(value);
                ReportPropertyChanging("EducationLevelId");
                _EducationLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationLevelId");
                OnEducationLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EducationLevelId;
        partial void OnEducationLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnEducationLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Institution
        {
            get
            {
                return _Institution;
            }
            set
            {
                OnInstitutionChanging(value);
                ReportPropertyChanging("Institution");
                _Institution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Institution");
                OnInstitutionChanged();
            }
        }
        private global::System.String _Institution;
        partial void OnInstitutionChanging(global::System.String value);
        partial void OnInstitutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GradeCompleted
        {
            get
            {
                return _GradeCompleted;
            }
            set
            {
                OnGradeCompletedChanging(value);
                ReportPropertyChanging("GradeCompleted");
                _GradeCompleted = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GradeCompleted");
                OnGradeCompletedChanged();
            }
        }
        private global::System.String _GradeCompleted;
        partial void OnGradeCompletedChanging(global::System.String value);
        partial void OnGradeCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Award
        {
            get
            {
                return _Award;
            }
            set
            {
                OnAwardChanging(value);
                ReportPropertyChanging("Award");
                _Award = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Award");
                OnAwardChanged();
            }
        }
        private global::System.String _Award;
        partial void OnAwardChanging(global::System.String value);
        partial void OnAwardChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_educatio", "education_level")]
        public EducationLevel EducationLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationLevel>("HrmModel.fk_employee_reference_educatio", "education_level").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationLevel>("HrmModel.fk_employee_reference_educatio", "education_level").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationLevel> EducationLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationLevel>("HrmModel.fk_employee_reference_educatio", "education_level");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationLevel>("HrmModel.fk_employee_reference_educatio", "education_level", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_edu_t_educatio", "education_type")]
        public EducationType EducationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationType>("HrmModel.fk_employee_ref_edu_t_educatio", "education_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationType>("HrmModel.fk_employee_ref_edu_t_educatio", "education_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EducationType> EducationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EducationType>("HrmModel.fk_employee_ref_edu_t_educatio", "education_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EducationType>("HrmModel.fk_employee_ref_edu_t_educatio", "education_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_e_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_e_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_e_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_e_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_e_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeInfo object.
        /// </summary>
        /// <param name="employeeNo">Initial value of the EmployeeNo property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        public static EmployeeInfo CreateEmployeeInfo(global::System.String employeeNo, global::System.Decimal salary, global::System.Int32 employeeId)
        {
            EmployeeInfo employeeInfo = new EmployeeInfo();
            employeeInfo.EmployeeNo = employeeNo;
            employeeInfo.Salary = salary;
            employeeInfo.EmployeeId = employeeId;
            return employeeInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                OnEmployeeNoChanging(value);
                ReportPropertyChanging("EmployeeNo");
                _EmployeeNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeNo");
                OnEmployeeNoChanged();
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Decimal _Salary;
        partial void OnSalaryChanging(global::System.Decimal value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrevJobTitle
        {
            get
            {
                return _PrevJobTitle;
            }
            set
            {
                OnPrevJobTitleChanging(value);
                ReportPropertyChanging("PrevJobTitle");
                _PrevJobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrevJobTitle");
                OnPrevJobTitleChanged();
            }
        }
        private global::System.String _PrevJobTitle;
        partial void OnPrevJobTitleChanging(global::System.String value);
        partial void OnPrevJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrevLocation
        {
            get
            {
                return _PrevLocation;
            }
            set
            {
                OnPrevLocationChanging(value);
                ReportPropertyChanging("PrevLocation");
                _PrevLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrevLocation");
                OnPrevLocationChanged();
            }
        }
        private global::System.String _PrevLocation;
        partial void OnPrevLocationChanging(global::System.String value);
        partial void OnPrevLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                OnNodeIdChanging(value);
                ReportPropertyChanging("NodeId");
                _NodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeId");
                OnNodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeId;
        partial void OnNodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeInfoTraining")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeInfoTraining : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeInfoTraining object.
        /// </summary>
        /// <param name="employeeNo">Initial value of the EmployeeNo property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        public static EmployeeInfoTraining CreateEmployeeInfoTraining(global::System.String employeeNo, global::System.Decimal salary, global::System.Int32 employeeId)
        {
            EmployeeInfoTraining employeeInfoTraining = new EmployeeInfoTraining();
            employeeInfoTraining.EmployeeNo = employeeNo;
            employeeInfoTraining.Salary = salary;
            employeeInfoTraining.EmployeeId = employeeId;
            return employeeInfoTraining;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                if (_Salary != value)
                {
                    OnSalaryChanging(value);
                    ReportPropertyChanging("Salary");
                    _Salary = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Salary");
                    OnSalaryChanged();
                }
            }
        }
        private global::System.Decimal _Salary;
        partial void OnSalaryChanging(global::System.Decimal value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeName
        {
            get
            {
                return _NodeName;
            }
            set
            {
                OnNodeNameChanging(value);
                ReportPropertyChanging("NodeName");
                _NodeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeName");
                OnNodeNameChanged();
            }
        }
        private global::System.String _NodeName;
        partial void OnNodeNameChanging(global::System.String value);
        partial void OnNodeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                OnNodeIdChanging(value);
                ReportPropertyChanging("NodeId");
                _NodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeId");
                OnNodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeId;
        partial void OnNodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeInsurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeInsurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeInsurance object.
        /// </summary>
        /// <param name="insuranceId">Initial value of the InsuranceId property.</param>
        public static EmployeeInsurance CreateEmployeeInsurance(global::System.Int32 insuranceId)
        {
            EmployeeInsurance employeeInsurance = new EmployeeInsurance();
            employeeInsurance.InsuranceId = insuranceId;
            return employeeInsurance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsuranceId
        {
            get
            {
                return _InsuranceId;
            }
            set
            {
                if (_InsuranceId != value)
                {
                    OnInsuranceIdChanging(value);
                    ReportPropertyChanging("InsuranceId");
                    _InsuranceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InsuranceId");
                    OnInsuranceIdChanged();
                }
            }
        }
        private global::System.Int32 _InsuranceId;
        partial void OnInsuranceIdChanging(global::System.Int32 value);
        partial void OnInsuranceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeId
        {
            get
            {
                return _PolicyTypeId;
            }
            set
            {
                OnPolicyTypeIdChanging(value);
                ReportPropertyChanging("PolicyTypeId");
                _PolicyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyTypeId");
                OnPolicyTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeId;
        partial void OnPolicyTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNo
        {
            get
            {
                return _PolicyNo;
            }
            set
            {
                OnPolicyNoChanging(value);
                ReportPropertyChanging("PolicyNo");
                _PolicyNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNo");
                OnPolicyNoChanged();
            }
        }
        private global::System.String _PolicyNo;
        partial void OnPolicyNoChanging(global::System.String value);
        partial void OnPolicyNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CoverageLimit
        {
            get
            {
                return _CoverageLimit;
            }
            set
            {
                OnCoverageLimitChanging(value);
                ReportPropertyChanging("CoverageLimit");
                _CoverageLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageLimit");
                OnCoverageLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CoverageLimit;
        partial void OnCoverageLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnCoverageLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_insur_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_insur_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_insur_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_insur_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_insur_employee", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_i_insuranc", "insurance_policy_type")]
        public InsurancePolicyType InsurancePolicyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsurancePolicyType>("HrmModel.fk_employee_ref_emp_i_insuranc", "insurance_policy_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsurancePolicyType>("HrmModel.fk_employee_ref_emp_i_insuranc", "insurance_policy_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsurancePolicyType> InsurancePolicyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsurancePolicyType>("HrmModel.fk_employee_ref_emp_i_insuranc", "insurance_policy_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsurancePolicyType>("HrmModel.fk_employee_ref_emp_i_insuranc", "insurance_policy_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_insuranc", "insurance_company")]
        public InsuranceCompany InsuranceCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompany>("HrmModel.fk_employee_reference_insuranc", "insurance_company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompany>("HrmModel.fk_employee_reference_insuranc", "insurance_company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsuranceCompany> InsuranceCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompany>("HrmModel.fk_employee_reference_insuranc", "insurance_company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsuranceCompany>("HrmModel.fk_employee_reference_insuranc", "insurance_company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeLeave")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeLeave : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeLeave object.
        /// </summary>
        /// <param name="leaveId">Initial value of the LeaveId property.</param>
        public static EmployeeLeave CreateEmployeeLeave(global::System.Int32 leaveId)
        {
            EmployeeLeave employeeLeave = new EmployeeLeave();
            employeeLeave.LeaveId = leaveId;
            return employeeLeave;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaveId
        {
            get
            {
                return _LeaveId;
            }
            set
            {
                if (_LeaveId != value)
                {
                    OnLeaveIdChanging(value);
                    ReportPropertyChanging("LeaveId");
                    _LeaveId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaveId");
                    OnLeaveIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaveId;
        partial void OnLeaveIdChanging(global::System.Int32 value);
        partial void OnLeaveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaveTypeId
        {
            get
            {
                return _LeaveTypeId;
            }
            set
            {
                OnLeaveTypeIdChanging(value);
                ReportPropertyChanging("LeaveTypeId");
                _LeaveTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveTypeId");
                OnLeaveTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaveTypeId;
        partial void OnLeaveTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeaveTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _From;
        partial void OnFromChanging(Nullable<global::System.DateTime> value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private Nullable<global::System.DateTime> _To;
        partial void OnToChanging(Nullable<global::System.DateTime> value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NumDays
        {
            get
            {
                return _NumDays;
            }
            set
            {
                OnNumDaysChanging(value);
                ReportPropertyChanging("NumDays");
                _NumDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumDays");
                OnNumDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _NumDays;
        partial void OnNumDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnNumDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestDate;
        partial void OnRequestDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_leave_employee", "Employee")]
        public Employee employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_leave_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_leave_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> employeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_leave_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_leave_employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_leave_leave_type", "leave_type")]
        public LeaveType leave_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaveType>("HrmModel.FK_employee_leave_leave_type", "leave_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaveType>("HrmModel.FK_employee_leave_leave_type", "leave_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaveType> leave_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaveType>("HrmModel.FK_employee_leave_leave_type", "leave_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaveType>("HrmModel.FK_employee_leave_leave_type", "leave_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeMedicalRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeMedicalRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeMedicalRecord object.
        /// </summary>
        /// <param name="medicalId">Initial value of the MedicalId property.</param>
        /// <param name="dateRecorded">Initial value of the DateRecorded property.</param>
        /// <param name="referal">Initial value of the Referal property.</param>
        public static EmployeeMedicalRecord CreateEmployeeMedicalRecord(global::System.Int32 medicalId, global::System.DateTime dateRecorded, global::System.String referal)
        {
            EmployeeMedicalRecord employeeMedicalRecord = new EmployeeMedicalRecord();
            employeeMedicalRecord.MedicalId = medicalId;
            employeeMedicalRecord.DateRecorded = dateRecorded;
            employeeMedicalRecord.Referal = referal;
            return employeeMedicalRecord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalId
        {
            get
            {
                return _MedicalId;
            }
            set
            {
                if (_MedicalId != value)
                {
                    OnMedicalIdChanging(value);
                    ReportPropertyChanging("MedicalId");
                    _MedicalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalId");
                    OnMedicalIdChanged();
                }
            }
        }
        private global::System.Int32 _MedicalId;
        partial void OnMedicalIdChanging(global::System.Int32 value);
        partial void OnMedicalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRecorded
        {
            get
            {
                return _DateRecorded;
            }
            set
            {
                OnDateRecordedChanging(value);
                ReportPropertyChanging("DateRecorded");
                _DateRecorded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRecorded");
                OnDateRecordedChanged();
            }
        }
        private global::System.DateTime _DateRecorded;
        partial void OnDateRecordedChanging(global::System.DateTime value);
        partial void OnDateRecordedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Referal
        {
            get
            {
                return _Referal;
            }
            set
            {
                OnReferalChanging(value);
                ReportPropertyChanging("Referal");
                _Referal = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Referal");
                OnReferalChanged();
            }
        }
        private global::System.String _Referal;
        partial void OnReferalChanging(global::System.String value);
        partial void OnReferalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prescription
        {
            get
            {
                return _Prescription;
            }
            set
            {
                OnPrescriptionChanging(value);
                ReportPropertyChanging("Prescription");
                _Prescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prescription");
                OnPrescriptionChanged();
            }
        }
        private global::System.String _Prescription;
        partial void OnPrescriptionChanging(global::System.String value);
        partial void OnPrescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pharmacy
        {
            get
            {
                return _Pharmacy;
            }
            set
            {
                OnPharmacyChanging(value);
                ReportPropertyChanging("Pharmacy");
                _Pharmacy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pharmacy");
                OnPharmacyChanged();
            }
        }
        private global::System.String _Pharmacy;
        partial void OnPharmacyChanging(global::System.String value);
        partial void OnPharmacyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiptNo
        {
            get
            {
                return _ReceiptNo;
            }
            set
            {
                OnReceiptNoChanging(value);
                ReportPropertyChanging("ReceiptNo");
                _ReceiptNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiptNo");
                OnReceiptNoChanged();
            }
        }
        private global::System.String _ReceiptNo;
        partial void OnReceiptNoChanging(global::System.String value);
        partial void OnReceiptNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sickness
        {
            get
            {
                return _Sickness;
            }
            set
            {
                OnSicknessChanging(value);
                ReportPropertyChanging("Sickness");
                _Sickness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sickness");
                OnSicknessChanged();
            }
        }
        private global::System.String _Sickness;
        partial void OnSicknessChanging(global::System.String value);
        partial void OnSicknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DependantId
        {
            get
            {
                return _DependantId;
            }
            set
            {
                OnDependantIdChanging(value);
                ReportPropertyChanging("DependantId");
                _DependantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DependantId");
                OnDependantIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DependantId;
        partial void OnDependantIdChanging(Nullable<global::System.Int32> value);
        partial void OnDependantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LabPaidAmount
        {
            get
            {
                return _LabPaidAmount;
            }
            set
            {
                OnLabPaidAmountChanging(value);
                ReportPropertyChanging("LabPaidAmount");
                _LabPaidAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LabPaidAmount");
                OnLabPaidAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LabPaidAmount;
        partial void OnLabPaidAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLabPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> XrayPaidAmount
        {
            get
            {
                return _XrayPaidAmount;
            }
            set
            {
                OnXrayPaidAmountChanging(value);
                ReportPropertyChanging("XrayPaidAmount");
                _XrayPaidAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XrayPaidAmount");
                OnXrayPaidAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _XrayPaidAmount;
        partial void OnXrayPaidAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnXrayPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PharmacyPaidAmount
        {
            get
            {
                return _PharmacyPaidAmount;
            }
            set
            {
                OnPharmacyPaidAmountChanging(value);
                ReportPropertyChanging("PharmacyPaidAmount");
                _PharmacyPaidAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PharmacyPaidAmount");
                OnPharmacyPaidAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PharmacyPaidAmount;
        partial void OnPharmacyPaidAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPharmacyPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RegistrationFee
        {
            get
            {
                return _RegistrationFee;
            }
            set
            {
                OnRegistrationFeeChanging(value);
                ReportPropertyChanging("RegistrationFee");
                _RegistrationFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationFee");
                OnRegistrationFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _RegistrationFee;
        partial void OnRegistrationFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnRegistrationFeeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_m_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_m_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_m_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_m_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_m_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePromotion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePromotion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePromotion object.
        /// </summary>
        /// <param name="promotionId">Initial value of the PromotionId property.</param>
        public static EmployeePromotion CreateEmployeePromotion(global::System.Int32 promotionId)
        {
            EmployeePromotion employeePromotion = new EmployeePromotion();
            employeePromotion.PromotionId = promotionId;
            return employeePromotion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PromotionId
        {
            get
            {
                return _PromotionId;
            }
            set
            {
                if (_PromotionId != value)
                {
                    OnPromotionIdChanging(value);
                    ReportPropertyChanging("PromotionId");
                    _PromotionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromotionId");
                    OnPromotionIdChanged();
                }
            }
        }
        private global::System.Int32 _PromotionId;
        partial void OnPromotionIdChanging(global::System.Int32 value);
        partial void OnPromotionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _Type;
        partial void OnTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActionDate;
        partial void OnActionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionBy
        {
            get
            {
                return _ActionBy;
            }
            set
            {
                OnActionByChanging(value);
                ReportPropertyChanging("ActionBy");
                _ActionBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionBy");
                OnActionByChanged();
            }
        }
        private global::System.String _ActionBy;
        partial void OnActionByChanging(global::System.String value);
        partial void OnActionByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionReason
        {
            get
            {
                return _ActionReason;
            }
            set
            {
                OnActionReasonChanging(value);
                ReportPropertyChanging("ActionReason");
                _ActionReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionReason");
                OnActionReasonChanged();
            }
        }
        private global::System.String _ActionReason;
        partial void OnActionReasonChanging(global::System.String value);
        partial void OnActionReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousTitle
        {
            get
            {
                return _PreviousTitle;
            }
            set
            {
                OnPreviousTitleChanging(value);
                ReportPropertyChanging("PreviousTitle");
                _PreviousTitle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousTitle");
                OnPreviousTitleChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousTitle;
        partial void OnPreviousTitleChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NewTitle
        {
            get
            {
                return _NewTitle;
            }
            set
            {
                OnNewTitleChanging(value);
                ReportPropertyChanging("NewTitle");
                _NewTitle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewTitle");
                OnNewTitleChanged();
            }
        }
        private Nullable<global::System.Int32> _NewTitle;
        partial void OnNewTitleChanging(Nullable<global::System.Int32> value);
        partial void OnNewTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousNode
        {
            get
            {
                return _PreviousNode;
            }
            set
            {
                OnPreviousNodeChanging(value);
                ReportPropertyChanging("PreviousNode");
                _PreviousNode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreviousNode");
                OnPreviousNodeChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousNode;
        partial void OnPreviousNodeChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousNodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NewNode
        {
            get
            {
                return _NewNode;
            }
            set
            {
                OnNewNodeChanging(value);
                ReportPropertyChanging("NewNode");
                _NewNode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewNode");
                OnNewNodeChanged();
            }
        }
        private Nullable<global::System.Int32> _NewNode;
        partial void OnNewNodeChanging(Nullable<global::System.Int32> value);
        partial void OnNewNodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_promotion_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_promotion_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_promotion_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_promotion_employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_job", "Job")]
        public Job job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_promotion_job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_promotion_job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> jobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_promotion_job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.FK_employee_promotion_job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_job1", "Job")]
        public Job job1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_promotion_job1", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_promotion_job1", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> job1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_promotion_job1", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.FK_employee_promotion_job1", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_organization", "Organization")]
        public Organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_organization1", "Organization")]
        public Organization organization1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization1", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization1", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> organization1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization1", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("HrmModel.FK_employee_promotion_organization1", "Organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePto object.
        /// </summary>
        /// <param name="ptoId">Initial value of the PtoId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="numDays">Initial value of the NumDays property.</param>
        public static EmployeePto CreateEmployeePto(global::System.Int32 ptoId, global::System.Int32 employeeId, global::System.Decimal numDays)
        {
            EmployeePto employeePto = new EmployeePto();
            employeePto.PtoId = ptoId;
            employeePto.EmployeeId = employeeId;
            employeePto.NumDays = numDays;
            return employeePto;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PtoId
        {
            get
            {
                return _PtoId;
            }
            set
            {
                if (_PtoId != value)
                {
                    OnPtoIdChanging(value);
                    ReportPropertyChanging("PtoId");
                    _PtoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtoId");
                    OnPtoIdChanged();
                }
            }
        }
        private global::System.Int32 _PtoId;
        partial void OnPtoIdChanging(global::System.Int32 value);
        partial void OnPtoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _From;
        partial void OnFromChanging(Nullable<global::System.DateTime> value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumDays
        {
            get
            {
                return _NumDays;
            }
            set
            {
                OnNumDaysChanging(value);
                ReportPropertyChanging("NumDays");
                _NumDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumDays");
                OnNumDaysChanged();
            }
        }
        private global::System.Decimal _NumDays;
        partial void OnNumDaysChanging(global::System.Decimal value);
        partial void OnNumDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private Nullable<global::System.DateTime> _To;
        partial void OnToChanging(Nullable<global::System.DateTime> value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestDate;
        partial void OnRequestDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_pto_employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_pto_employee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePtoInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePtoInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePtoInfo object.
        /// </summary>
        /// <param name="ptoId">Initial value of the PtoId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="numDays">Initial value of the NumDays property.</param>
        public static EmployeePtoInfo CreateEmployeePtoInfo(global::System.Int32 ptoId, global::System.Int32 employeeId, global::System.Decimal numDays)
        {
            EmployeePtoInfo employeePtoInfo = new EmployeePtoInfo();
            employeePtoInfo.PtoId = ptoId;
            employeePtoInfo.EmployeeId = employeeId;
            employeePtoInfo.NumDays = numDays;
            return employeePtoInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PtoId
        {
            get
            {
                return _PtoId;
            }
            set
            {
                if (_PtoId != value)
                {
                    OnPtoIdChanging(value);
                    ReportPropertyChanging("PtoId");
                    _PtoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtoId");
                    OnPtoIdChanged();
                }
            }
        }
        private global::System.Int32 _PtoId;
        partial void OnPtoIdChanging(global::System.Int32 value);
        partial void OnPtoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> From
        {
            get
            {
                return _From;
            }
            set
            {
                OnFromChanging(value);
                ReportPropertyChanging("From");
                _From = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("From");
                OnFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _From;
        partial void OnFromChanging(Nullable<global::System.DateTime> value);
        partial void OnFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> To
        {
            get
            {
                return _To;
            }
            set
            {
                OnToChanging(value);
                ReportPropertyChanging("To");
                _To = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("To");
                OnToChanged();
            }
        }
        private Nullable<global::System.DateTime> _To;
        partial void OnToChanging(Nullable<global::System.DateTime> value);
        partial void OnToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumDays
        {
            get
            {
                return _NumDays;
            }
            set
            {
                if (_NumDays != value)
                {
                    OnNumDaysChanging(value);
                    ReportPropertyChanging("NumDays");
                    _NumDays = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NumDays");
                    OnNumDaysChanged();
                }
            }
        }
        private global::System.Decimal _NumDays;
        partial void OnNumDaysChanging(global::System.Decimal value);
        partial void OnNumDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployeeFullName
        {
            get
            {
                return _EmployeeFullName;
            }
            set
            {
                OnEmployeeFullNameChanging(value);
                ReportPropertyChanging("EmployeeFullName");
                _EmployeeFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployeeFullName");
                OnEmployeeFullNameChanged();
            }
        }
        private global::System.String _EmployeeFullName;
        partial void OnEmployeeFullNameChanging(global::System.String value);
        partial void OnEmployeeFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePtoStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePtoStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePtoStatus object.
        /// </summary>
        /// <param name="leaveStatusId">Initial value of the LeaveStatusId property.</param>
        public static EmployeePtoStatus CreateEmployeePtoStatus(global::System.Int32 leaveStatusId)
        {
            EmployeePtoStatus employeePtoStatus = new EmployeePtoStatus();
            employeePtoStatus.LeaveStatusId = leaveStatusId;
            return employeePtoStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaveStatusId
        {
            get
            {
                return _LeaveStatusId;
            }
            set
            {
                if (_LeaveStatusId != value)
                {
                    OnLeaveStatusIdChanging(value);
                    ReportPropertyChanging("LeaveStatusId");
                    _LeaveStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaveStatusId");
                    OnLeaveStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaveStatusId;
        partial void OnLeaveStatusIdChanging(global::System.Int32 value);
        partial void OnLeaveStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevCount
        {
            get
            {
                return _PrevCount;
            }
            set
            {
                OnPrevCountChanging(value);
                ReportPropertyChanging("PrevCount");
                _PrevCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevCount");
                OnPrevCountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevCount;
        partial void OnPrevCountChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrentCount
        {
            get
            {
                return _CurrentCount;
            }
            set
            {
                OnCurrentCountChanging(value);
                ReportPropertyChanging("CurrentCount");
                _CurrentCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentCount");
                OnCurrentCountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrentCount;
        partial void OnCurrentCountChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrentCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_pto_status_employee", "Employee")]
        public Employee employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_status_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_status_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> employeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_status_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_pto_status_employee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePtoStatusInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePtoStatusInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePtoStatusInfo object.
        /// </summary>
        /// <param name="employeeNo">Initial value of the EmployeeNo property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        public static EmployeePtoStatusInfo CreateEmployeePtoStatusInfo(global::System.String employeeNo, global::System.Int32 employeeId)
        {
            EmployeePtoStatusInfo employeePtoStatusInfo = new EmployeePtoStatusInfo();
            employeePtoStatusInfo.EmployeeNo = employeeNo;
            employeePtoStatusInfo.EmployeeId = employeeId;
            return employeePtoStatusInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployeeFullName
        {
            get
            {
                return _EmployeeFullName;
            }
            set
            {
                OnEmployeeFullNameChanging(value);
                ReportPropertyChanging("EmployeeFullName");
                _EmployeeFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployeeFullName");
                OnEmployeeFullNameChanged();
            }
        }
        private global::System.String _EmployeeFullName;
        partial void OnEmployeeFullNameChanging(global::System.String value);
        partial void OnEmployeeFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaveStatusId
        {
            get
            {
                return _LeaveStatusId;
            }
            set
            {
                OnLeaveStatusIdChanging(value);
                ReportPropertyChanging("LeaveStatusId");
                _LeaveStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveStatusId");
                OnLeaveStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaveStatusId;
        partial void OnLeaveStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeaveStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrentCount
        {
            get
            {
                return _CurrentCount;
            }
            set
            {
                OnCurrentCountChanging(value);
                ReportPropertyChanging("CurrentCount");
                _CurrentCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentCount");
                OnCurrentCountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrentCount;
        partial void OnCurrentCountChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrentCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceYear
        {
            get
            {
                return _ServiceYear;
            }
            set
            {
                OnServiceYearChanging(value);
                ReportPropertyChanging("ServiceYear");
                _ServiceYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceYear");
                OnServiceYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceYear;
        partial void OnServiceYearChanging(Nullable<global::System.Int32> value);
        partial void OnServiceYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrevCount
        {
            get
            {
                return _PrevCount;
            }
            set
            {
                OnPrevCountChanging(value);
                ReportPropertyChanging("PrevCount");
                _PrevCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevCount");
                OnPrevCountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrevCount;
        partial void OnPrevCountChanging(Nullable<global::System.Decimal> value);
        partial void OnPrevCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePtoTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePtoTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePtoTransaction object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="noDays">Initial value of the NoDays property.</param>
        public static EmployeePtoTransaction CreateEmployeePtoTransaction(global::System.Int32 transactionId, global::System.Int32 employeeId, global::System.Decimal noDays)
        {
            EmployeePtoTransaction employeePtoTransaction = new EmployeePtoTransaction();
            employeePtoTransaction.TransactionId = transactionId;
            employeePtoTransaction.EmployeeId = employeeId;
            employeePtoTransaction.NoDays = noDays;
            return employeePtoTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NoDays
        {
            get
            {
                return _NoDays;
            }
            set
            {
                OnNoDaysChanging(value);
                ReportPropertyChanging("NoDays");
                _NoDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoDays");
                OnNoDaysChanged();
            }
        }
        private global::System.Decimal _NoDays;
        partial void OnNoDaysChanging(global::System.Decimal value);
        partial void OnNoDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedDate
        {
            get
            {
                return _ApprovedDate;
            }
            set
            {
                OnApprovedDateChanging(value);
                ReportPropertyChanging("ApprovedDate");
                _ApprovedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedDate");
                OnApprovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedDate;
        partial void OnApprovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private global::System.String _ApprovedBy;
        partial void OnApprovedByChanging(global::System.String value);
        partial void OnApprovedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_pto_transaction_employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_transaction_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_transaction_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_pto_transaction_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_pto_transaction_employee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeePtoTransactionInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeePtoTransactionInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeePtoTransactionInfo object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="noDays">Initial value of the NoDays property.</param>
        /// <param name="employeeNo">Initial value of the EmployeeNo property.</param>
        public static EmployeePtoTransactionInfo CreateEmployeePtoTransactionInfo(global::System.Int32 transactionId, global::System.Int32 employeeId, global::System.Decimal noDays, global::System.String employeeNo)
        {
            EmployeePtoTransactionInfo employeePtoTransactionInfo = new EmployeePtoTransactionInfo();
            employeePtoTransactionInfo.TransactionId = transactionId;
            employeePtoTransactionInfo.EmployeeId = employeeId;
            employeePtoTransactionInfo.NoDays = noDays;
            employeePtoTransactionInfo.EmployeeNo = employeeNo;
            return employeePtoTransactionInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NoDays
        {
            get
            {
                return _NoDays;
            }
            set
            {
                if (_NoDays != value)
                {
                    OnNoDaysChanging(value);
                    ReportPropertyChanging("NoDays");
                    _NoDays = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoDays");
                    OnNoDaysChanged();
                }
            }
        }
        private global::System.Decimal _NoDays;
        partial void OnNoDaysChanging(global::System.Decimal value);
        partial void OnNoDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedDate
        {
            get
            {
                return _ApprovedDate;
            }
            set
            {
                OnApprovedDateChanging(value);
                ReportPropertyChanging("ApprovedDate");
                _ApprovedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedDate");
                OnApprovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedDate;
        partial void OnApprovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private global::System.String _ApprovedBy;
        partial void OnApprovedByChanging(global::System.String value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HireDate
        {
            get
            {
                return _HireDate;
            }
            set
            {
                OnHireDateChanging(value);
                ReportPropertyChanging("HireDate");
                _HireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireDate");
                OnHireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HireDate;
        partial void OnHireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHireDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeSkill object.
        /// </summary>
        /// <param name="employeeSkillId">Initial value of the EmployeeSkillId property.</param>
        public static EmployeeSkill CreateEmployeeSkill(global::System.Int32 employeeSkillId)
        {
            EmployeeSkill employeeSkill = new EmployeeSkill();
            employeeSkill.EmployeeSkillId = employeeSkillId;
            return employeeSkill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeSkillId
        {
            get
            {
                return _EmployeeSkillId;
            }
            set
            {
                if (_EmployeeSkillId != value)
                {
                    OnEmployeeSkillIdChanging(value);
                    ReportPropertyChanging("EmployeeSkillId");
                    _EmployeeSkillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeSkillId");
                    OnEmployeeSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeSkillId;
        partial void OnEmployeeSkillIdChanging(global::System.Int32 value);
        partial void OnEmployeeSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SkillId;
        partial void OnSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkillScore
        {
            get
            {
                return _SkillScore;
            }
            set
            {
                OnSkillScoreChanging(value);
                ReportPropertyChanging("SkillScore");
                _SkillScore = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SkillScore");
                OnSkillScoreChanged();
            }
        }
        private global::System.String _SkillScore;
        partial void OnSkillScoreChanging(global::System.String value);
        partial void OnSkillScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkillDescription
        {
            get
            {
                return _SkillDescription;
            }
            set
            {
                OnSkillDescriptionChanging(value);
                ReportPropertyChanging("SkillDescription");
                _SkillDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SkillDescription");
                OnSkillDescriptionChanged();
            }
        }
        private global::System.String _SkillDescription;
        partial void OnSkillDescriptionChanging(global::System.String value);
        partial void OnSkillDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_s_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_s_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_s_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_s_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_s_employee", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_employee", "employee_skill_type")]
        public EmployeeSkillType EmployeeSkillType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeSkillType>("HrmModel.fk_employee_reference_employee", "employee_skill_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeSkillType>("HrmModel.fk_employee_reference_employee", "employee_skill_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeSkillType> EmployeeSkillTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeSkillType>("HrmModel.fk_employee_reference_employee", "employee_skill_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeSkillType>("HrmModel.fk_employee_reference_employee", "employee_skill_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeSkillType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeSkillType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeSkillType object.
        /// </summary>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        public static EmployeeSkillType CreateEmployeeSkillType(global::System.Int32 skillId)
        {
            EmployeeSkillType employeeSkillType = new EmployeeSkillType();
            employeeSkillType.SkillId = skillId;
            return employeeSkillType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                if (_SkillId != value)
                {
                    OnSkillIdChanging(value);
                    ReportPropertyChanging("SkillId");
                    _SkillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SkillId");
                    OnSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _SkillId;
        partial void OnSkillIdChanging(global::System.Int32 value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkillName
        {
            get
            {
                return _SkillName;
            }
            set
            {
                OnSkillNameChanging(value);
                ReportPropertyChanging("SkillName");
                _SkillName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SkillName");
                OnSkillNameChanged();
            }
        }
        private global::System.String _SkillName;
        partial void OnSkillNameChanging(global::System.String value);
        partial void OnSkillNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_employee", "employee_skill")]
        public EntityCollection<EmployeeSkill> EmployeeSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeSkill>("HrmModel.fk_employee_reference_employee", "employee_skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeSkill>("HrmModel.fk_employee_reference_employee", "employee_skill", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeStatus object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static EmployeeStatus CreateEmployeeStatus(global::System.Int32 statusId, global::System.String status)
        {
            EmployeeStatus employeeStatus = new EmployeeStatus();
            employeeStatus.StatusId = statusId;
            employeeStatus.Status = status;
            return employeeStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emplo_employee", "employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HrmModel.fk_employee_ref_emplo_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HrmModel.fk_employee_ref_emplo_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeTermination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTermination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTermination object.
        /// </summary>
        /// <param name="terminationId">Initial value of the TerminationId property.</param>
        public static EmployeeTermination CreateEmployeeTermination(global::System.Int32 terminationId)
        {
            EmployeeTermination employeeTermination = new EmployeeTermination();
            employeeTermination.TerminationId = terminationId;
            return employeeTermination;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerminationId
        {
            get
            {
                return _TerminationId;
            }
            set
            {
                if (_TerminationId != value)
                {
                    OnTerminationIdChanging(value);
                    ReportPropertyChanging("TerminationId");
                    _TerminationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TerminationId");
                    OnTerminationIdChanged();
                }
            }
        }
        private global::System.Int32 _TerminationId;
        partial void OnTerminationIdChanging(global::System.Int32 value);
        partial void OnTerminationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TerminationDate
        {
            get
            {
                return _TerminationDate;
            }
            set
            {
                OnTerminationDateChanging(value);
                ReportPropertyChanging("TerminationDate");
                _TerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationDate");
                OnTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TerminationDate;
        partial void OnTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionTakenBy
        {
            get
            {
                return _ActionTakenBy;
            }
            set
            {
                OnActionTakenByChanging(value);
                ReportPropertyChanging("ActionTakenBy");
                _ActionTakenBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionTakenBy");
                OnActionTakenByChanged();
            }
        }
        private global::System.String _ActionTakenBy;
        partial void OnActionTakenByChanging(global::System.String value);
        partial void OnActionTakenByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TerminationReason
        {
            get
            {
                return _TerminationReason;
            }
            set
            {
                OnTerminationReasonChanging(value);
                ReportPropertyChanging("TerminationReason");
                _TerminationReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TerminationReason");
                OnTerminationReasonChanged();
            }
        }
        private global::System.String _TerminationReason;
        partial void OnTerminationReasonChanging(global::System.String value);
        partial void OnTerminationReasonChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_termination_employee", "Employee")]
        public Employee employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_termination_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_termination_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> employeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_termination_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_termination_employee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeTraining")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTraining : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTraining object.
        /// </summary>
        /// <param name="trainingId">Initial value of the TrainingId property.</param>
        /// <param name="courseName">Initial value of the CourseName property.</param>
        public static EmployeeTraining CreateEmployeeTraining(global::System.Int32 trainingId, global::System.String courseName)
        {
            EmployeeTraining employeeTraining = new EmployeeTraining();
            employeeTraining.TrainingId = trainingId;
            employeeTraining.CourseName = courseName;
            return employeeTraining;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                if (_TrainingId != value)
                {
                    OnTrainingIdChanging(value);
                    ReportPropertyChanging("TrainingId");
                    _TrainingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingId");
                    OnTrainingIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingId;
        partial void OnTrainingIdChanging(global::System.Int32 value);
        partial void OnTrainingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GivenBy
        {
            get
            {
                return _GivenBy;
            }
            set
            {
                OnGivenByChanging(value);
                ReportPropertyChanging("GivenBy");
                _GivenBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GivenBy");
                OnGivenByChanged();
            }
        }
        private global::System.String _GivenBy;
        partial void OnGivenByChanging(global::System.String value);
        partial void OnGivenByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundedBy
        {
            get
            {
                return _FundedBy;
            }
            set
            {
                OnFundedByChanging(value);
                ReportPropertyChanging("FundedBy");
                _FundedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundedBy");
                OnFundedByChanged();
            }
        }
        private global::System.String _FundedBy;
        partial void OnFundedByChanging(global::System.String value);
        partial void OnFundedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Acheivement
        {
            get
            {
                return _Acheivement;
            }
            set
            {
                OnAcheivementChanging(value);
                ReportPropertyChanging("Acheivement");
                _Acheivement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Acheivement");
                OnAcheivementChanged();
            }
        }
        private global::System.String _Acheivement;
        partial void OnAcheivementChanging(global::System.String value);
        partial void OnAcheivementChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTransfer object.
        /// </summary>
        /// <param name="transferId">Initial value of the TransferId property.</param>
        /// <param name="transferDate">Initial value of the TransferDate property.</param>
        /// <param name="transferReason">Initial value of the TransferReason property.</param>
        /// <param name="prevTitle">Initial value of the PrevTitle property.</param>
        /// <param name="prevLocation">Initial value of the PrevLocation property.</param>
        /// <param name="newTitle">Initial value of the NewTitle property.</param>
        /// <param name="newLocation">Initial value of the NewLocation property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="approvedBy">Initial value of the ApprovedBy property.</param>
        public static EmployeeTransfer CreateEmployeeTransfer(global::System.Int32 transferId, global::System.DateTime transferDate, global::System.String transferReason, global::System.Int32 prevTitle, global::System.Int32 prevLocation, global::System.Int32 newTitle, global::System.Int32 newLocation, global::System.DateTime effectiveDate, global::System.String approvedBy)
        {
            EmployeeTransfer employeeTransfer = new EmployeeTransfer();
            employeeTransfer.TransferId = transferId;
            employeeTransfer.TransferDate = transferDate;
            employeeTransfer.TransferReason = transferReason;
            employeeTransfer.PrevTitle = prevTitle;
            employeeTransfer.PrevLocation = prevLocation;
            employeeTransfer.NewTitle = newTitle;
            employeeTransfer.NewLocation = newLocation;
            employeeTransfer.EffectiveDate = effectiveDate;
            employeeTransfer.ApprovedBy = approvedBy;
            return employeeTransfer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferId
        {
            get
            {
                return _TransferId;
            }
            set
            {
                if (_TransferId != value)
                {
                    OnTransferIdChanging(value);
                    ReportPropertyChanging("TransferId");
                    _TransferId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferId");
                    OnTransferIdChanged();
                }
            }
        }
        private global::System.Int32 _TransferId;
        partial void OnTransferIdChanging(global::System.Int32 value);
        partial void OnTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransferDate
        {
            get
            {
                return _TransferDate;
            }
            set
            {
                OnTransferDateChanging(value);
                ReportPropertyChanging("TransferDate");
                _TransferDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferDate");
                OnTransferDateChanged();
            }
        }
        private global::System.DateTime _TransferDate;
        partial void OnTransferDateChanging(global::System.DateTime value);
        partial void OnTransferDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransferReason
        {
            get
            {
                return _TransferReason;
            }
            set
            {
                OnTransferReasonChanging(value);
                ReportPropertyChanging("TransferReason");
                _TransferReason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransferReason");
                OnTransferReasonChanged();
            }
        }
        private global::System.String _TransferReason;
        partial void OnTransferReasonChanging(global::System.String value);
        partial void OnTransferReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrevTitle
        {
            get
            {
                return _PrevTitle;
            }
            set
            {
                OnPrevTitleChanging(value);
                ReportPropertyChanging("PrevTitle");
                _PrevTitle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevTitle");
                OnPrevTitleChanged();
            }
        }
        private global::System.Int32 _PrevTitle;
        partial void OnPrevTitleChanging(global::System.Int32 value);
        partial void OnPrevTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrevLocation
        {
            get
            {
                return _PrevLocation;
            }
            set
            {
                OnPrevLocationChanging(value);
                ReportPropertyChanging("PrevLocation");
                _PrevLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevLocation");
                OnPrevLocationChanged();
            }
        }
        private global::System.Int32 _PrevLocation;
        partial void OnPrevLocationChanging(global::System.Int32 value);
        partial void OnPrevLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewTitle
        {
            get
            {
                return _NewTitle;
            }
            set
            {
                OnNewTitleChanging(value);
                ReportPropertyChanging("NewTitle");
                _NewTitle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewTitle");
                OnNewTitleChanged();
            }
        }
        private global::System.Int32 _NewTitle;
        partial void OnNewTitleChanging(global::System.Int32 value);
        partial void OnNewTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewLocation
        {
            get
            {
                return _NewLocation;
            }
            set
            {
                OnNewLocationChanging(value);
                ReportPropertyChanging("NewLocation");
                _NewLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewLocation");
                OnNewLocationChanged();
            }
        }
        private global::System.Int32 _NewLocation;
        partial void OnNewLocationChanging(global::System.Int32 value);
        partial void OnNewLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private global::System.String _ApprovedBy;
        partial void OnApprovedByChanging(global::System.String value);
        partial void OnApprovedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_employee", "Employee")]
        public Employee employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_transfer_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_transfer_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> employeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_transfer_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_transfer_employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_job", "Job")]
        public Job job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_transfer_job", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_transfer_job", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> jobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_transfer_job", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.FK_employee_transfer_job", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_job1", "Job")]
        public Job job1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_transfer_job1", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_transfer_job1", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> job1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.FK_employee_transfer_job1", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.FK_employee_transfer_job1", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_organization", "Organization")]
        public Organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_organization1", "Organization")]
        public Organization organization1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization1", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization1", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> organization1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization1", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("HrmModel.FK_employee_transfer_organization1", "Organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeType object.
        /// </summary>
        /// <param name="employementTypeId">Initial value of the EmployementTypeId property.</param>
        public static EmployeeType CreateEmployeeType(global::System.Int32 employementTypeId)
        {
            EmployeeType employeeType = new EmployeeType();
            employeeType.EmployementTypeId = employementTypeId;
            return employeeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployementTypeId
        {
            get
            {
                return _EmployementTypeId;
            }
            set
            {
                if (_EmployementTypeId != value)
                {
                    OnEmployementTypeIdChanging(value);
                    ReportPropertyChanging("EmployementTypeId");
                    _EmployementTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployementTypeId");
                    OnEmployementTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployementTypeId;
        partial void OnEmployementTypeIdChanging(global::System.Int32 value);
        partial void OnEmployementTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmploymentType
        {
            get
            {
                return _EmploymentType;
            }
            set
            {
                OnEmploymentTypeChanging(value);
                ReportPropertyChanging("EmploymentType");
                _EmploymentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmploymentType");
                OnEmploymentTypeChanged();
            }
        }
        private global::System.String _EmploymentType;
        partial void OnEmploymentTypeChanging(global::System.String value);
        partial void OnEmploymentTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_employee_type", "Employee")]
        public EntityCollection<Employee> employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HrmModel.FK_employee_employee_type", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HrmModel.FK_employee_employee_type", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeWarning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeWarning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeWarning object.
        /// </summary>
        /// <param name="warningId">Initial value of the WarningId property.</param>
        public static EmployeeWarning CreateEmployeeWarning(global::System.Int32 warningId)
        {
            EmployeeWarning employeeWarning = new EmployeeWarning();
            employeeWarning.WarningId = warningId;
            return employeeWarning;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarningId
        {
            get
            {
                return _WarningId;
            }
            set
            {
                if (_WarningId != value)
                {
                    OnWarningIdChanging(value);
                    ReportPropertyChanging("WarningId");
                    _WarningId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarningId");
                    OnWarningIdChanged();
                }
            }
        }
        private global::System.Int32 _WarningId;
        partial void OnWarningIdChanging(global::System.Int32 value);
        partial void OnWarningIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarningTypeId
        {
            get
            {
                return _WarningTypeId;
            }
            set
            {
                OnWarningTypeIdChanging(value);
                ReportPropertyChanging("WarningTypeId");
                _WarningTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarningTypeId");
                OnWarningTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarningTypeId;
        partial void OnWarningTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarningTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WarningDate
        {
            get
            {
                return _WarningDate;
            }
            set
            {
                OnWarningDateChanging(value);
                ReportPropertyChanging("WarningDate");
                _WarningDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarningDate");
                OnWarningDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _WarningDate;
        partial void OnWarningDateChanging(Nullable<global::System.DateTime> value);
        partial void OnWarningDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarningGivenBy
        {
            get
            {
                return _WarningGivenBy;
            }
            set
            {
                OnWarningGivenByChanging(value);
                ReportPropertyChanging("WarningGivenBy");
                _WarningGivenBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarningGivenBy");
                OnWarningGivenByChanged();
            }
        }
        private global::System.String _WarningGivenBy;
        partial void OnWarningGivenByChanging(global::System.String value);
        partial void OnWarningGivenByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarningReason
        {
            get
            {
                return _WarningReason;
            }
            set
            {
                OnWarningReasonChanging(value);
                ReportPropertyChanging("WarningReason");
                _WarningReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarningReason");
                OnWarningReasonChanged();
            }
        }
        private global::System.String _WarningReason;
        partial void OnWarningReasonChanging(global::System.String value);
        partial void OnWarningReasonChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_warning_employee", "Employee")]
        public Employee employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_warning_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_warning_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> employeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_employee_warning_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_employee_warning_employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_warning_warning_type", "warning_type")]
        public WarningType warning_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarningType>("HrmModel.FK_employee_warning_warning_type", "warning_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarningType>("HrmModel.FK_employee_warning_warning_type", "warning_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WarningType> warning_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WarningType>("HrmModel.FK_employee_warning_warning_type", "warning_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WarningType>("HrmModel.FK_employee_warning_warning_type", "warning_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="EmployeeWorkExperiance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeWorkExperiance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeWorkExperiance object.
        /// </summary>
        /// <param name="workExperianceId">Initial value of the WorkExperianceId property.</param>
        public static EmployeeWorkExperiance CreateEmployeeWorkExperiance(global::System.Int32 workExperianceId)
        {
            EmployeeWorkExperiance employeeWorkExperiance = new EmployeeWorkExperiance();
            employeeWorkExperiance.WorkExperianceId = workExperianceId;
            return employeeWorkExperiance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkExperianceId
        {
            get
            {
                return _WorkExperianceId;
            }
            set
            {
                if (_WorkExperianceId != value)
                {
                    OnWorkExperianceIdChanging(value);
                    ReportPropertyChanging("WorkExperianceId");
                    _WorkExperianceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkExperianceId");
                    OnWorkExperianceIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkExperianceId;
        partial void OnWorkExperianceIdChanging(global::System.Int32 value);
        partial void OnWorkExperianceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private Nullable<global::System.Decimal> _Salary;
        partial void OnSalaryChanging(Nullable<global::System.Decimal> value);
        partial void OnSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                OnOrganizationChanging(value);
                ReportPropertyChanging("Organization");
                _Organization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Organization");
                OnOrganizationChanged();
            }
        }
        private global::System.String _Organization;
        partial void OnOrganizationChanging(global::System.String value);
        partial void OnOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearDuration
        {
            get
            {
                return _YearDuration;
            }
            set
            {
                OnYearDurationChanging(value);
                ReportPropertyChanging("YearDuration");
                _YearDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearDuration");
                OnYearDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _YearDuration;
        partial void OnYearDurationChanging(Nullable<global::System.Int32> value);
        partial void OnYearDurationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_w_employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_w_employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_w_employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_w_employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_employee_ref_emp_w_employee", "employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Ethnicity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ethnicity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ethnicity object.
        /// </summary>
        /// <param name="ethnicityId">Initial value of the EthnicityId property.</param>
        /// <param name="ethnicityName">Initial value of the EthnicityName property.</param>
        public static Ethnicity CreateEthnicity(global::System.Int32 ethnicityId, global::System.String ethnicityName)
        {
            Ethnicity ethnicity = new Ethnicity();
            ethnicity.EthnicityId = ethnicityId;
            ethnicity.EthnicityName = ethnicityName;
            return ethnicity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EthnicityId
        {
            get
            {
                return _EthnicityId;
            }
            set
            {
                if (_EthnicityId != value)
                {
                    OnEthnicityIdChanging(value);
                    ReportPropertyChanging("EthnicityId");
                    _EthnicityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EthnicityId");
                    OnEthnicityIdChanged();
                }
            }
        }
        private global::System.Int32 _EthnicityId;
        partial void OnEthnicityIdChanging(global::System.Int32 value);
        partial void OnEthnicityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EthnicityName
        {
            get
            {
                return _EthnicityName;
            }
            set
            {
                OnEthnicityNameChanging(value);
                ReportPropertyChanging("EthnicityName");
                _EthnicityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EthnicityName");
                OnEthnicityNameChanged();
            }
        }
        private global::System.String _EthnicityName;
        partial void OnEthnicityNameChanging(global::System.String value);
        partial void OnEthnicityNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_ethnicit", "person")]
        public EntityCollection<Person> people
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("HrmModel.fk_person_reference_ethnicit", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("HrmModel.fk_person_reference_ethnicit", "person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="InsuranceCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceCompany object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static InsuranceCompany CreateInsuranceCompany(global::System.Int32 companyId)
        {
            InsuranceCompany insuranceCompany = new InsuranceCompany();
            insuranceCompany.CompanyId = companyId;
            return insuranceCompany;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_insuranc", "employee_insurance")]
        public EntityCollection<EmployeeInsurance> EmployeeInsurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeInsurance>("HrmModel.fk_employee_reference_insuranc", "employee_insurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeInsurance>("HrmModel.fk_employee_reference_insuranc", "employee_insurance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="InsurancePolicyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsurancePolicyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsurancePolicyType object.
        /// </summary>
        /// <param name="policyTypeId">Initial value of the PolicyTypeId property.</param>
        public static InsurancePolicyType CreateInsurancePolicyType(global::System.Int32 policyTypeId)
        {
            InsurancePolicyType insurancePolicyType = new InsurancePolicyType();
            insurancePolicyType.PolicyTypeId = policyTypeId;
            return insurancePolicyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyTypeId
        {
            get
            {
                return _PolicyTypeId;
            }
            set
            {
                if (_PolicyTypeId != value)
                {
                    OnPolicyTypeIdChanging(value);
                    ReportPropertyChanging("PolicyTypeId");
                    _PolicyTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PolicyTypeId");
                    OnPolicyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PolicyTypeId;
        partial void OnPolicyTypeIdChanging(global::System.Int32 value);
        partial void OnPolicyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyTypeName
        {
            get
            {
                return _PolicyTypeName;
            }
            set
            {
                OnPolicyTypeNameChanging(value);
                ReportPropertyChanging("PolicyTypeName");
                _PolicyTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyTypeName");
                OnPolicyTypeNameChanged();
            }
        }
        private global::System.String _PolicyTypeName;
        partial void OnPolicyTypeNameChanging(global::System.String value);
        partial void OnPolicyTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_ref_emp_i_insuranc", "employee_insurance")]
        public EntityCollection<EmployeeInsurance> EmployeeInsurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeInsurance>("HrmModel.fk_employee_ref_emp_i_insuranc", "employee_insurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeInsurance>("HrmModel.fk_employee_ref_emp_i_insuranc", "employee_insurance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static Job CreateJob(global::System.Int32 jobId)
        {
            Job job = new Job();
            job.JobId = jobId;
            return job;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobSummary
        {
            get
            {
                return _JobSummary;
            }
            set
            {
                OnJobSummaryChanging(value);
                ReportPropertyChanging("JobSummary");
                _JobSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobSummary");
                OnJobSummaryChanged();
            }
        }
        private global::System.String _JobSummary;
        partial void OnJobSummaryChanging(global::System.String value);
        partial void OnJobSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobCode
        {
            get
            {
                return _JobCode;
            }
            set
            {
                OnJobCodeChanging(value);
                ReportPropertyChanging("JobCode");
                _JobCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobCode");
                OnJobCodeChanged();
            }
        }
        private global::System.String _JobCode;
        partial void OnJobCodeChanging(global::System.String value);
        partial void OnJobCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalApprovalDate
        {
            get
            {
                return _OriginalApprovalDate;
            }
            set
            {
                OnOriginalApprovalDateChanging(value);
                ReportPropertyChanging("OriginalApprovalDate");
                _OriginalApprovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalApprovalDate");
                OnOriginalApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalApprovalDate;
        partial void OnOriginalApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RevisionDate
        {
            get
            {
                return _RevisionDate;
            }
            set
            {
                OnRevisionDateChanging(value);
                ReportPropertyChanging("RevisionDate");
                _RevisionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevisionDate");
                OnRevisionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RevisionDate;
        partial void OnRevisionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRevisionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Responsibility
        {
            get
            {
                return _Responsibility;
            }
            set
            {
                OnResponsibilityChanging(value);
                ReportPropertyChanging("Responsibility");
                _Responsibility = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Responsibility");
                OnResponsibilityChanged();
            }
        }
        private global::System.String _Responsibility;
        partial void OnResponsibilityChanging(global::System.String value);
        partial void OnResponsibilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkCondition
        {
            get
            {
                return _WorkCondition;
            }
            set
            {
                OnWorkConditionChanging(value);
                ReportPropertyChanging("WorkCondition");
                _WorkCondition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkCondition");
                OnWorkConditionChanged();
            }
        }
        private global::System.String _WorkCondition;
        partial void OnWorkConditionChanging(global::System.String value);
        partial void OnWorkConditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequiredExperience
        {
            get
            {
                return _RequiredExperience;
            }
            set
            {
                OnRequiredExperienceChanging(value);
                ReportPropertyChanging("RequiredExperience");
                _RequiredExperience = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequiredExperience");
                OnRequiredExperienceChanged();
            }
        }
        private global::System.String _RequiredExperience;
        partial void OnRequiredExperienceChanging(global::System.String value);
        partial void OnRequiredExperienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequiredEducation
        {
            get
            {
                return _RequiredEducation;
            }
            set
            {
                OnRequiredEducationChanging(value);
                ReportPropertyChanging("RequiredEducation");
                _RequiredEducation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequiredEducation");
                OnRequiredEducationChanged();
            }
        }
        private global::System.String _RequiredEducation;
        partial void OnRequiredEducationChanging(global::System.String value);
        partial void OnRequiredEducationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                OnNodeIdChanging(value);
                ReportPropertyChanging("NodeId");
                _NodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeId");
                OnNodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeId;
        partial void OnNodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InitialLeaveAmount
        {
            get
            {
                return _InitialLeaveAmount;
            }
            set
            {
                OnInitialLeaveAmountChanging(value);
                ReportPropertyChanging("InitialLeaveAmount");
                _InitialLeaveAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InitialLeaveAmount");
                OnInitialLeaveAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _InitialLeaveAmount;
        partial void OnInitialLeaveAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnInitialLeaveAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_comp_reference_job", "job_competency")]
        public EntityCollection<JobCompetency> JobCompetencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobCompetency>("HrmModel.fk_job_comp_reference_job", "job_competency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobCompetency>("HrmModel.fk_job_comp_reference_job", "job_competency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_func_reference_job", "job_function")]
        public EntityCollection<JobFunction> JobFunctions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobFunction>("HrmModel.fk_job_func_reference_job", "job_function");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobFunction>("HrmModel.fk_job_func_reference_job", "job_function", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_skil_reference_job", "job_skill")]
        public EntityCollection<JobSkill> JobSkills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobSkill>("HrmModel.fk_job_skil_reference_job", "job_skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobSkill>("HrmModel.fk_job_skil_reference_job", "job_skill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_job", "employee")]
        public EntityCollection<Employee> employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HrmModel.FK_employee_job", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HrmModel.FK_employee_job", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_reference_organiza", "organization")]
        public Organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.fk_job_reference_organiza", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.fk_job_reference_organiza", "organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("HrmModel.fk_job_reference_organiza", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("HrmModel.fk_job_reference_organiza", "organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_job", "EmployeePromotion")]
        public EntityCollection<EmployeePromotion> employee_promotion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_job", "EmployeePromotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_job", "EmployeePromotion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_job1", "EmployeePromotion")]
        public EntityCollection<EmployeePromotion> employee_promotion1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_job1", "EmployeePromotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_job1", "EmployeePromotion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_job", "EmployeeTransfer")]
        public EntityCollection<EmployeeTransfer> employee_transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_job", "EmployeeTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_job", "EmployeeTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_job1", "EmployeeTransfer")]
        public EntityCollection<EmployeeTransfer> employee_transfer1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_job1", "EmployeeTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_job1", "EmployeeTransfer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="JobCompetency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobCompetency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobCompetency object.
        /// </summary>
        /// <param name="competencyId">Initial value of the CompetencyId property.</param>
        public static JobCompetency CreateJobCompetency(global::System.Int32 competencyId)
        {
            JobCompetency jobCompetency = new JobCompetency();
            jobCompetency.CompetencyId = competencyId;
            return jobCompetency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetencyId
        {
            get
            {
                return _CompetencyId;
            }
            set
            {
                if (_CompetencyId != value)
                {
                    OnCompetencyIdChanging(value);
                    ReportPropertyChanging("CompetencyId");
                    _CompetencyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetencyId");
                    OnCompetencyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompetencyId;
        partial void OnCompetencyIdChanging(global::System.Int32 value);
        partial void OnCompetencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompetencyTypeId
        {
            get
            {
                return _CompetencyTypeId;
            }
            set
            {
                OnCompetencyTypeIdChanging(value);
                ReportPropertyChanging("CompetencyTypeId");
                _CompetencyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetencyTypeId");
                OnCompetencyTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompetencyTypeId;
        partial void OnCompetencyTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompetencyTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_comp_reference_competen", "competency_type")]
        public CompetencyType CompetencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetencyType>("HrmModel.fk_job_comp_reference_competen", "competency_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetencyType>("HrmModel.fk_job_comp_reference_competen", "competency_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetencyType> CompetencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetencyType>("HrmModel.fk_job_comp_reference_competen", "competency_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetencyType>("HrmModel.fk_job_comp_reference_competen", "competency_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_comp_reference_job", "job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_comp_reference_job", "job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_comp_reference_job", "job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_comp_reference_job", "job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.fk_job_comp_reference_job", "job", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="JobFunction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobFunction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobFunction object.
        /// </summary>
        /// <param name="jobFunctionId">Initial value of the JobFunctionId property.</param>
        public static JobFunction CreateJobFunction(global::System.Int32 jobFunctionId)
        {
            JobFunction jobFunction = new JobFunction();
            jobFunction.JobFunctionId = jobFunctionId;
            return jobFunction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobFunctionId
        {
            get
            {
                return _JobFunctionId;
            }
            set
            {
                if (_JobFunctionId != value)
                {
                    OnJobFunctionIdChanging(value);
                    ReportPropertyChanging("JobFunctionId");
                    _JobFunctionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobFunctionId");
                    OnJobFunctionIdChanged();
                }
            }
        }
        private global::System.Int32 _JobFunctionId;
        partial void OnJobFunctionIdChanging(global::System.Int32 value);
        partial void OnJobFunctionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_func_reference_job", "job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_func_reference_job", "job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_func_reference_job", "job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_func_reference_job", "job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.fk_job_func_reference_job", "job", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="JobInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobInfo object.
        /// </summary>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static JobInfo CreateJobInfo(global::System.Int32 jobId)
        {
            JobInfo jobInfo = new JobInfo();
            jobInfo.JobId = jobId;
            return jobInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                if (_JobId != value)
                {
                    OnJobIdChanging(value);
                    ReportPropertyChanging("JobId");
                    _JobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobId");
                    OnJobIdChanged();
                }
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                OnNodeIdChanging(value);
                ReportPropertyChanging("NodeId");
                _NodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeId");
                OnNodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeId;
        partial void OnNodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobSummary
        {
            get
            {
                return _JobSummary;
            }
            set
            {
                OnJobSummaryChanging(value);
                ReportPropertyChanging("JobSummary");
                _JobSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobSummary");
                OnJobSummaryChanged();
            }
        }
        private global::System.String _JobSummary;
        partial void OnJobSummaryChanging(global::System.String value);
        partial void OnJobSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeName
        {
            get
            {
                return _NodeName;
            }
            set
            {
                OnNodeNameChanging(value);
                ReportPropertyChanging("NodeName");
                _NodeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeName");
                OnNodeNameChanged();
            }
        }
        private global::System.String _NodeName;
        partial void OnNodeNameChanging(global::System.String value);
        partial void OnNodeNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="JobSkill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobSkill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobSkill object.
        /// </summary>
        /// <param name="jobSkillId">Initial value of the JobSkillId property.</param>
        public static JobSkill CreateJobSkill(global::System.Int32 jobSkillId)
        {
            JobSkill jobSkill = new JobSkill();
            jobSkill.JobSkillId = jobSkillId;
            return jobSkill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobSkillId
        {
            get
            {
                return _JobSkillId;
            }
            set
            {
                if (_JobSkillId != value)
                {
                    OnJobSkillIdChanging(value);
                    ReportPropertyChanging("JobSkillId");
                    _JobSkillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobSkillId");
                    OnJobSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _JobSkillId;
        partial void OnJobSkillIdChanging(global::System.Int32 value);
        partial void OnJobSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private Nullable<global::System.Int32> _JobId;
        partial void OnJobIdChanging(Nullable<global::System.Int32> value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                OnSkillIdChanging(value);
                ReportPropertyChanging("SkillId");
                _SkillId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillId");
                OnSkillIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SkillId;
        partial void OnSkillIdChanging(Nullable<global::System.Int32> value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SkillLevel
        {
            get
            {
                return _SkillLevel;
            }
            set
            {
                OnSkillLevelChanging(value);
                ReportPropertyChanging("SkillLevel");
                _SkillLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SkillLevel");
                OnSkillLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _SkillLevel;
        partial void OnSkillLevelChanging(Nullable<global::System.Int32> value);
        partial void OnSkillLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Required
        {
            get
            {
                return _Required;
            }
            set
            {
                OnRequiredChanging(value);
                ReportPropertyChanging("Required");
                _Required = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Required");
                OnRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _Required;
        partial void OnRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnRequiredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_skil_reference_job", "job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_skil_reference_job", "job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_skil_reference_job", "job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("HrmModel.fk_job_skil_reference_job", "job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("HrmModel.fk_job_skil_reference_job", "job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_skil_reference_job_skil", "job_skill_type")]
        public JobSkillType JobKkillType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobSkillType>("HrmModel.fk_job_skil_reference_job_skil", "job_skill_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobSkillType>("HrmModel.fk_job_skil_reference_job_skil", "job_skill_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobSkillType> JobKkillTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobSkillType>("HrmModel.fk_job_skil_reference_job_skil", "job_skill_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobSkillType>("HrmModel.fk_job_skil_reference_job_skil", "job_skill_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="JobSkillType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobSkillType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobSkillType object.
        /// </summary>
        /// <param name="skillId">Initial value of the SkillId property.</param>
        public static JobSkillType CreateJobSkillType(global::System.Int32 skillId)
        {
            JobSkillType jobSkillType = new JobSkillType();
            jobSkillType.SkillId = skillId;
            return jobSkillType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SkillId
        {
            get
            {
                return _SkillId;
            }
            set
            {
                if (_SkillId != value)
                {
                    OnSkillIdChanging(value);
                    ReportPropertyChanging("SkillId");
                    _SkillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SkillId");
                    OnSkillIdChanged();
                }
            }
        }
        private global::System.Int32 _SkillId;
        partial void OnSkillIdChanging(global::System.Int32 value);
        partial void OnSkillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkillName
        {
            get
            {
                return _SkillName;
            }
            set
            {
                OnSkillNameChanging(value);
                ReportPropertyChanging("SkillName");
                _SkillName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SkillName");
                OnSkillNameChanged();
            }
        }
        private global::System.String _SkillName;
        partial void OnSkillNameChanging(global::System.String value);
        partial void OnSkillNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_skil_reference_job_skil", "JobSkill")]
        public EntityCollection<JobSkill> JobSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobSkill>("HrmModel.fk_job_skil_reference_job_skil", "JobSkill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobSkill>("HrmModel.fk_job_skil_reference_job_skil", "JobSkill", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static Language CreateLanguage(global::System.Int32 languageId)
        {
            Language language = new Language();
            language.LanguageId = languageId;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                if (_LanguageId != value)
                {
                    OnLanguageIdChanging(value);
                    ReportPropertyChanging("LanguageId");
                    _LanguageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageId");
                    OnLanguageIdChanged();
                }
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LanguageName
        {
            get
            {
                return _LanguageName;
            }
            set
            {
                OnLanguageNameChanging(value);
                ReportPropertyChanging("LanguageName");
                _LanguageName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LanguageName");
                OnLanguageNameChanged();
            }
        }
        private global::System.String _LanguageName;
        partial void OnLanguageNameChanging(global::System.String value);
        partial void OnLanguageNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_language_reference_language", "language_skill")]
        public EntityCollection<language_skill> LanguageSkill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<language_skill>("HrmModel.fk_language_reference_language", "language_skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<language_skill>("HrmModel.fk_language_reference_language", "language_skill", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="language_skill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language_skill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new language_skill object.
        /// </summary>
        /// <param name="language_skill_id">Initial value of the language_skill_id property.</param>
        public static language_skill Createlanguage_skill(global::System.Int32 language_skill_id)
        {
            language_skill language_skill = new language_skill();
            language_skill.language_skill_id = language_skill_id;
            return language_skill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 language_skill_id
        {
            get
            {
                return _language_skill_id;
            }
            set
            {
                if (_language_skill_id != value)
                {
                    Onlanguage_skill_idChanging(value);
                    ReportPropertyChanging("language_skill_id");
                    _language_skill_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("language_skill_id");
                    Onlanguage_skill_idChanged();
                }
            }
        }
        private global::System.Int32 _language_skill_id;
        partial void Onlanguage_skill_idChanging(global::System.Int32 value);
        partial void Onlanguage_skill_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> employee_id
        {
            get
            {
                return _employee_id;
            }
            set
            {
                Onemployee_idChanging(value);
                ReportPropertyChanging("employee_id");
                _employee_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("employee_id");
                Onemployee_idChanged();
            }
        }
        private Nullable<global::System.Int32> _employee_id;
        partial void Onemployee_idChanging(Nullable<global::System.Int32> value);
        partial void Onemployee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _language_id;
        partial void Onlanguage_idChanging(Nullable<global::System.Int32> value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> speak
        {
            get
            {
                return _speak;
            }
            set
            {
                OnspeakChanging(value);
                ReportPropertyChanging("speak");
                _speak = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("speak");
                OnspeakChanged();
            }
        }
        private Nullable<global::System.Boolean> _speak;
        partial void OnspeakChanging(Nullable<global::System.Boolean> value);
        partial void OnspeakChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> read
        {
            get
            {
                return _read;
            }
            set
            {
                OnreadChanging(value);
                ReportPropertyChanging("read");
                _read = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("read");
                OnreadChanged();
            }
        }
        private Nullable<global::System.Boolean> _read;
        partial void OnreadChanging(Nullable<global::System.Boolean> value);
        partial void OnreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> write
        {
            get
            {
                return _write;
            }
            set
            {
                OnwriteChanging(value);
                ReportPropertyChanging("write");
                _write = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("write");
                OnwriteChanged();
            }
        }
        private Nullable<global::System.Boolean> _write;
        partial void OnwriteChanging(Nullable<global::System.Boolean> value);
        partial void OnwriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> listen
        {
            get
            {
                return _listen;
            }
            set
            {
                OnlistenChanging(value);
                ReportPropertyChanging("listen");
                _listen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("listen");
                OnlistenChanged();
            }
        }
        private Nullable<global::System.Boolean> _listen;
        partial void OnlistenChanging(Nullable<global::System.Boolean> value);
        partial void OnlistenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_language_ref_lang__employee", "employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_language_ref_lang__employee", "employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_language_ref_lang__employee", "employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.fk_language_ref_lang__employee", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.fk_language_ref_lang__employee", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_language_reference_language", "language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("HrmModel.fk_language_reference_language", "language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("HrmModel.fk_language_reference_language", "language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("HrmModel.fk_language_reference_language", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("HrmModel.fk_language_reference_language", "language", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="LeaveType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaveType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaveType object.
        /// </summary>
        /// <param name="leaveTypeId">Initial value of the LeaveTypeId property.</param>
        public static LeaveType CreateLeaveType(global::System.Int32 leaveTypeId)
        {
            LeaveType leaveType = new LeaveType();
            leaveType.LeaveTypeId = leaveTypeId;
            return leaveType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaveTypeId
        {
            get
            {
                return _LeaveTypeId;
            }
            set
            {
                if (_LeaveTypeId != value)
                {
                    OnLeaveTypeIdChanging(value);
                    ReportPropertyChanging("LeaveTypeId");
                    _LeaveTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LeaveTypeId");
                    OnLeaveTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaveTypeId;
        partial void OnLeaveTypeIdChanging(global::System.Int32 value);
        partial void OnLeaveTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaveTypeName
        {
            get
            {
                return _LeaveTypeName;
            }
            set
            {
                OnLeaveTypeNameChanging(value);
                ReportPropertyChanging("LeaveTypeName");
                _LeaveTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeaveTypeName");
                OnLeaveTypeNameChanged();
            }
        }
        private global::System.String _LeaveTypeName;
        partial void OnLeaveTypeNameChanging(global::System.String value);
        partial void OnLeaveTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_leave_leave_type", "employee_leave")]
        public EntityCollection<EmployeeLeave> employee_leave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeLeave>("HrmModel.FK_employee_leave_leave_type", "employee_leave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeLeave>("HrmModel.FK_employee_leave_leave_type", "employee_leave", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        public static Location CreateLocation(global::System.Int32 locationId)
        {
            Location location = new Location();
            location.LocationId = locationId;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationCode
        {
            get
            {
                return _LocationCode;
            }
            set
            {
                OnLocationCodeChanging(value);
                ReportPropertyChanging("LocationCode");
                _LocationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationCode");
                OnLocationCodeChanged();
            }
        }
        private global::System.String _LocationCode;
        partial void OnLocationCodeChanging(global::System.String value);
        partial void OnLocationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocalName
        {
            get
            {
                return _LocalName;
            }
            set
            {
                OnLocalNameChanging(value);
                ReportPropertyChanging("LocalName");
                _LocalName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocalName");
                OnLocalNameChanged();
            }
        }
        private global::System.String _LocalName;
        partial void OnLocalNameChanging(global::System.String value);
        partial void OnLocalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="MaritalStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaritalStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaritalStatus object.
        /// </summary>
        /// <param name="maritalStatusId">Initial value of the MaritalStatusId property.</param>
        public static MaritalStatus CreateMaritalStatus(global::System.Int32 maritalStatusId)
        {
            MaritalStatus maritalStatus = new MaritalStatus();
            maritalStatus.MaritalStatusId = maritalStatusId;
            return maritalStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaritalStatusId
        {
            get
            {
                return _MaritalStatusId;
            }
            set
            {
                if (_MaritalStatusId != value)
                {
                    OnMaritalStatusIdChanging(value);
                    ReportPropertyChanging("MaritalStatusId");
                    _MaritalStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaritalStatusId");
                    OnMaritalStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _MaritalStatusId;
        partial void OnMaritalStatusIdChanging(global::System.Int32 value);
        partial void OnMaritalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaritalStatusType
        {
            get
            {
                return _MaritalStatusType;
            }
            set
            {
                OnMaritalStatusTypeChanging(value);
                ReportPropertyChanging("MaritalStatusType");
                _MaritalStatusType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaritalStatusType");
                OnMaritalStatusTypeChanged();
            }
        }
        private global::System.String _MaritalStatusType;
        partial void OnMaritalStatusTypeChanging(global::System.String value);
        partial void OnMaritalStatusTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_marital_", "person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("HrmModel.fk_person_reference_marital_", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("HrmModel.fk_person_reference_marital_", "person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="MeasureType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasureType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasureType object.
        /// </summary>
        /// <param name="measureTypeId">Initial value of the MeasureTypeId property.</param>
        public static MeasureType CreateMeasureType(global::System.Int32 measureTypeId)
        {
            MeasureType measureType = new MeasureType();
            measureType.MeasureTypeId = measureTypeId;
            return measureType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeasureTypeId
        {
            get
            {
                return _MeasureTypeId;
            }
            set
            {
                if (_MeasureTypeId != value)
                {
                    OnMeasureTypeIdChanging(value);
                    ReportPropertyChanging("MeasureTypeId");
                    _MeasureTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeasureTypeId");
                    OnMeasureTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _MeasureTypeId;
        partial void OnMeasureTypeIdChanging(global::System.Int32 value);
        partial void OnMeasureTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MeasureTypeName
        {
            get
            {
                return _MeasureTypeName;
            }
            set
            {
                OnMeasureTypeNameChanging(value);
                ReportPropertyChanging("MeasureTypeName");
                _MeasureTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MeasureTypeName");
                OnMeasureTypeNameChanged();
            }
        }
        private global::System.String _MeasureTypeName;
        partial void OnMeasureTypeNameChanging(global::System.String value);
        partial void OnMeasureTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_employee_reference_measure_", "employee_disciplinary_measure")]
        public EntityCollection<EmployeeDisciplinaryMeasure> EmployeeDisciplinaryMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeDisciplinaryMeasure>("HrmModel.fk_employee_reference_measure_", "employee_disciplinary_measure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeDisciplinaryMeasure>("HrmModel.fk_employee_reference_measure_", "employee_disciplinary_measure", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Nationality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nationality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Nationality object.
        /// </summary>
        /// <param name="nationalityId">Initial value of the NationalityId property.</param>
        /// <param name="nationalityName">Initial value of the NationalityName property.</param>
        public static Nationality CreateNationality(global::System.Int32 nationalityId, global::System.String nationalityName)
        {
            Nationality nationality = new Nationality();
            nationality.NationalityId = nationalityId;
            nationality.NationalityName = nationalityName;
            return nationality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NationalityId
        {
            get
            {
                return _NationalityId;
            }
            set
            {
                if (_NationalityId != value)
                {
                    OnNationalityIdChanging(value);
                    ReportPropertyChanging("NationalityId");
                    _NationalityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NationalityId");
                    OnNationalityIdChanged();
                }
            }
        }
        private global::System.Int32 _NationalityId;
        partial void OnNationalityIdChanging(global::System.Int32 value);
        partial void OnNationalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NationalityName
        {
            get
            {
                return _NationalityName;
            }
            set
            {
                OnNationalityNameChanging(value);
                ReportPropertyChanging("NationalityName");
                _NationalityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NationalityName");
                OnNationalityNameChanged();
            }
        }
        private global::System.String _NationalityName;
        partial void OnNationalityNameChanging(global::System.String value);
        partial void OnNationalityNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_national", "person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("HrmModel.fk_person_reference_national", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("HrmModel.fk_person_reference_national", "person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="nodeId">Initial value of the NodeId property.</param>
        public static Organization CreateOrganization(global::System.Int32 nodeId)
        {
            Organization organization = new Organization();
            organization.NodeId = nodeId;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int32 _NodeId;
        partial void OnNodeIdChanging(global::System.Int32 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NodeTypeId
        {
            get
            {
                return _NodeTypeId;
            }
            set
            {
                OnNodeTypeIdChanging(value);
                ReportPropertyChanging("NodeTypeId");
                _NodeTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodeTypeId");
                OnNodeTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NodeTypeId;
        partial void OnNodeTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnNodeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeName
        {
            get
            {
                return _NodeName;
            }
            set
            {
                OnNodeNameChanging(value);
                ReportPropertyChanging("NodeName");
                _NodeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeName");
                OnNodeNameChanged();
            }
        }
        private global::System.String _NodeName;
        partial void OnNodeNameChanging(global::System.String value);
        partial void OnNodeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RemovedDate
        {
            get
            {
                return _RemovedDate;
            }
            set
            {
                OnRemovedDateChanging(value);
                ReportPropertyChanging("RemovedDate");
                _RemovedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemovedDate");
                OnRemovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RemovedDate;
        partial void OnRemovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRemovedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_organization", "employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HrmModel.FK_employee_organization", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HrmModel.FK_employee_organization", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_job_reference_organiza", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("HrmModel.fk_job_reference_organiza", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("HrmModel.fk_job_reference_organiza", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_organiza_reference_organiza", "organization_node_type")]
        public OrganizationNodeType OrganizationNodeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationNodeType>("HrmModel.fk_organiza_reference_organiza", "organization_node_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationNodeType>("HrmModel.fk_organiza_reference_organiza", "organization_node_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationNodeType> OrganizationNodeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationNodeType>("HrmModel.fk_organiza_reference_organiza", "organization_node_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationNodeType>("HrmModel.fk_organiza_reference_organiza", "organization_node_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_organization", "EmployeePromotion")]
        public EntityCollection<EmployeePromotion> employee_promotion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_organization", "EmployeePromotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_organization", "EmployeePromotion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_promotion_organization1", "EmployeePromotion")]
        public EntityCollection<EmployeePromotion> employee_promotion1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_organization1", "EmployeePromotion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeePromotion>("HrmModel.FK_employee_promotion_organization1", "EmployeePromotion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_organization", "EmployeeTransfer")]
        public EntityCollection<EmployeeTransfer> employee_transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_organization", "EmployeeTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_organization", "EmployeeTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_transfer_organization1", "EmployeeTransfer")]
        public EntityCollection<EmployeeTransfer> employee_transfer1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_organization1", "EmployeeTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTransfer>("HrmModel.FK_employee_transfer_organization1", "EmployeeTransfer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="OrganizationNodeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationNodeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationNodeType object.
        /// </summary>
        /// <param name="nodeTypeId">Initial value of the NodeTypeId property.</param>
        public static OrganizationNodeType CreateOrganizationNodeType(global::System.Int32 nodeTypeId)
        {
            OrganizationNodeType organizationNodeType = new OrganizationNodeType();
            organizationNodeType.NodeTypeId = nodeTypeId;
            return organizationNodeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NodeTypeId
        {
            get
            {
                return _NodeTypeId;
            }
            set
            {
                if (_NodeTypeId != value)
                {
                    OnNodeTypeIdChanging(value);
                    ReportPropertyChanging("NodeTypeId");
                    _NodeTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeTypeId");
                    OnNodeTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _NodeTypeId;
        partial void OnNodeTypeIdChanging(global::System.Int32 value);
        partial void OnNodeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeTypeName
        {
            get
            {
                return _NodeTypeName;
            }
            set
            {
                OnNodeTypeNameChanging(value);
                ReportPropertyChanging("NodeTypeName");
                _NodeTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeTypeName");
                OnNodeTypeNameChanged();
            }
        }
        private global::System.String _NodeTypeName;
        partial void OnNodeTypeNameChanging(global::System.String value);
        partial void OnNodeTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_organiza_reference_organiza", "organization")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("HrmModel.fk_organiza_reference_organiza", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("HrmModel.fk_organiza_reference_organiza", "organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Person CreatePerson(global::System.Int32 personId)
        {
            Person person = new Person();
            person.PersonId = personId;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NationalityId
        {
            get
            {
                return _NationalityId;
            }
            set
            {
                OnNationalityIdChanging(value);
                ReportPropertyChanging("NationalityId");
                _NationalityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NationalityId");
                OnNationalityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NationalityId;
        partial void OnNationalityIdChanging(Nullable<global::System.Int32> value);
        partial void OnNationalityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EthnicityId
        {
            get
            {
                return _EthnicityId;
            }
            set
            {
                OnEthnicityIdChanging(value);
                ReportPropertyChanging("EthnicityId");
                _EthnicityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EthnicityId");
                OnEthnicityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EthnicityId;
        partial void OnEthnicityIdChanging(Nullable<global::System.Int32> value);
        partial void OnEthnicityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReligionId
        {
            get
            {
                return _ReligionId;
            }
            set
            {
                OnReligionIdChanging(value);
                ReportPropertyChanging("ReligionId");
                _ReligionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReligionId");
                OnReligionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReligionId;
        partial void OnReligionIdChanging(Nullable<global::System.Int32> value);
        partial void OnReligionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GrandFatherName
        {
            get
            {
                return _GrandFatherName;
            }
            set
            {
                OnGrandFatherNameChanging(value);
                ReportPropertyChanging("GrandFatherName");
                _GrandFatherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GrandFatherName");
                OnGrandFatherNameChanged();
            }
        }
        private global::System.String _GrandFatherName;
        partial void OnGrandFatherNameChanging(global::System.String value);
        partial void OnGrandFatherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Int32> _Sex;
        partial void OnSexChanging(Nullable<global::System.Int32> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Dob
        {
            get
            {
                return _Dob;
            }
            set
            {
                OnDobChanging(value);
                ReportPropertyChanging("Dob");
                _Dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dob");
                OnDobChanged();
            }
        }
        private Nullable<global::System.DateTime> _Dob;
        partial void OnDobChanging(Nullable<global::System.DateTime> value);
        partial void OnDobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlaceOfBirth
        {
            get
            {
                return _PlaceOfBirth;
            }
            set
            {
                OnPlaceOfBirthChanging(value);
                ReportPropertyChanging("PlaceOfBirth");
                _PlaceOfBirth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlaceOfBirth");
                OnPlaceOfBirthChanged();
            }
        }
        private global::System.String _PlaceOfBirth;
        partial void OnPlaceOfBirthChanging(global::System.String value);
        partial void OnPlaceOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaritalStatusId
        {
            get
            {
                return _MaritalStatusId;
            }
            set
            {
                OnMaritalStatusIdChanging(value);
                ReportPropertyChanging("MaritalStatusId");
                _MaritalStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaritalStatusId");
                OnMaritalStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MaritalStatusId;
        partial void OnMaritalStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnMaritalStatusIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_contact__reference_person", "contact_address")]
        public EntityCollection<ContactAddress> ContactAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactAddress>("HrmModel.fk_contact__reference_person", "contact_address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactAddress>("HrmModel.fk_contact__reference_person", "contact_address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_country", "country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("HrmModel.fk_person_reference_country", "country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("HrmModel.fk_person_reference_country", "country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("HrmModel.fk_person_reference_country", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("HrmModel.fk_person_reference_country", "country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_emergenc_reference_person", "emergency_contact")]
        public EntityCollection<EmergencyContact> EmergencyContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmergencyContact>("HrmModel.fk_emergenc_reference_person", "emergency_contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmergencyContact>("HrmModel.fk_emergenc_reference_person", "emergency_contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_ethnicit", "ethnicity")]
        public Ethnicity Ethnicity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ethnicity>("HrmModel.fk_person_reference_ethnicit", "ethnicity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ethnicity>("HrmModel.fk_person_reference_ethnicit", "ethnicity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ethnicity> EthnicityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ethnicity>("HrmModel.fk_person_reference_ethnicit", "ethnicity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ethnicity>("HrmModel.fk_person_reference_ethnicit", "ethnicity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_marital_", "marital_status")]
        public MaritalStatus MaritalStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatus>("HrmModel.fk_person_reference_marital_", "marital_status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatus>("HrmModel.fk_person_reference_marital_", "marital_status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaritalStatus> MaritalStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaritalStatus>("HrmModel.fk_person_reference_marital_", "marital_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaritalStatus>("HrmModel.fk_person_reference_marital_", "marital_status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_national", "nationality")]
        public Nationality Nationality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Nationality>("HrmModel.fk_person_reference_national", "nationality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Nationality>("HrmModel.fk_person_reference_national", "nationality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Nationality> NationalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Nationality>("HrmModel.fk_person_reference_national", "nationality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Nationality>("HrmModel.fk_person_reference_national", "nationality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_religion", "religion")]
        public Religion Religion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("HrmModel.fk_person_reference_religion", "religion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("HrmModel.fk_person_reference_religion", "religion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religion> ReligionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religion>("HrmModel.fk_person_reference_religion", "religion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religion>("HrmModel.fk_person_reference_religion", "religion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Religion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Religion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Religion object.
        /// </summary>
        /// <param name="religionId">Initial value of the ReligionId property.</param>
        /// <param name="religionName">Initial value of the ReligionName property.</param>
        public static Religion CreateReligion(global::System.Int32 religionId, global::System.String religionName)
        {
            Religion religion = new Religion();
            religion.ReligionId = religionId;
            religion.ReligionName = religionName;
            return religion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReligionId
        {
            get
            {
                return _ReligionId;
            }
            set
            {
                if (_ReligionId != value)
                {
                    OnReligionIdChanging(value);
                    ReportPropertyChanging("ReligionId");
                    _ReligionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReligionId");
                    OnReligionIdChanged();
                }
            }
        }
        private global::System.Int32 _ReligionId;
        partial void OnReligionIdChanging(global::System.Int32 value);
        partial void OnReligionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReligionName
        {
            get
            {
                return _ReligionName;
            }
            set
            {
                OnReligionNameChanging(value);
                ReportPropertyChanging("ReligionName");
                _ReligionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReligionName");
                OnReligionNameChanged();
            }
        }
        private global::System.String _ReligionName;
        partial void OnReligionNameChanging(global::System.String value);
        partial void OnReligionNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "fk_person_reference_religion", "Person")]
        public EntityCollection<Person> people
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("HrmModel.fk_person_reference_religion", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("HrmModel.fk_person_reference_religion", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="Training")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Training : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Training object.
        /// </summary>
        /// <param name="trainingId">Initial value of the TrainingId property.</param>
        public static Training CreateTraining(global::System.Int32 trainingId)
        {
            Training training = new Training();
            training.TrainingId = trainingId;
            return training;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                if (_TrainingId != value)
                {
                    OnTrainingIdChanging(value);
                    ReportPropertyChanging("TrainingId");
                    _TrainingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingId");
                    OnTrainingIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingId;
        partial void OnTrainingIdChanging(global::System.Int32 value);
        partial void OnTrainingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrainingRequestId
        {
            get
            {
                return _TrainingRequestId;
            }
            set
            {
                OnTrainingRequestIdChanging(value);
                ReportPropertyChanging("TrainingRequestId");
                _TrainingRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingRequestId");
                OnTrainingRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TrainingRequestId;
        partial void OnTrainingRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnTrainingRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedDate
        {
            get
            {
                return _ApprovedDate;
            }
            set
            {
                OnApprovedDateChanging(value);
                ReportPropertyChanging("ApprovedDate");
                _ApprovedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedDate");
                OnApprovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedDate;
        partial void OnApprovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private global::System.String _ApprovedBy;
        partial void OnApprovedByChanging(global::System.String value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovalRemark
        {
            get
            {
                return _ApprovalRemark;
            }
            set
            {
                OnApprovalRemarkChanging(value);
                ReportPropertyChanging("ApprovalRemark");
                _ApprovalRemark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovalRemark");
                OnApprovalRemarkChanged();
            }
        }
        private global::System.String _ApprovalRemark;
        partial void OnApprovalRemarkChanging(global::System.String value);
        partial void OnApprovalRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AllocatedBudget
        {
            get
            {
                return _AllocatedBudget;
            }
            set
            {
                OnAllocatedBudgetChanging(value);
                ReportPropertyChanging("AllocatedBudget");
                _AllocatedBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllocatedBudget");
                OnAllocatedBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _AllocatedBudget;
        partial void OnAllocatedBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnAllocatedBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScheduleFrom
        {
            get
            {
                return _ScheduleFrom;
            }
            set
            {
                OnScheduleFromChanging(value);
                ReportPropertyChanging("ScheduleFrom");
                _ScheduleFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleFrom");
                OnScheduleFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScheduleFrom;
        partial void OnScheduleFromChanging(Nullable<global::System.DateTime> value);
        partial void OnScheduleFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScheduleTo
        {
            get
            {
                return _ScheduleTo;
            }
            set
            {
                OnScheduleToChanging(value);
                ReportPropertyChanging("ScheduleTo");
                _ScheduleTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTo");
                OnScheduleToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScheduleTo;
        partial void OnScheduleToChanging(Nullable<global::System.DateTime> value);
        partial void OnScheduleToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ConductedFrom
        {
            get
            {
                return _ConductedFrom;
            }
            set
            {
                OnConductedFromChanging(value);
                ReportPropertyChanging("ConductedFrom");
                _ConductedFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConductedFrom");
                OnConductedFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _ConductedFrom;
        partial void OnConductedFromChanging(Nullable<global::System.DateTime> value);
        partial void OnConductedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ConductedTo
        {
            get
            {
                return _ConductedTo;
            }
            set
            {
                OnConductedToChanging(value);
                ReportPropertyChanging("ConductedTo");
                _ConductedTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConductedTo");
                OnConductedToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ConductedTo;
        partial void OnConductedToChanging(Nullable<global::System.DateTime> value);
        partial void OnConductedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConductedBy
        {
            get
            {
                return _ConductedBy;
            }
            set
            {
                OnConductedByChanging(value);
                ReportPropertyChanging("ConductedBy");
                _ConductedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConductedBy");
                OnConductedByChanged();
            }
        }
        private global::System.String _ConductedBy;
        partial void OnConductedByChanging(global::System.String value);
        partial void OnConductedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualCost
        {
            get
            {
                return _ActualCost;
            }
            set
            {
                OnActualCostChanging(value);
                ReportPropertyChanging("ActualCost");
                _ActualCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualCost");
                OnActualCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualCost;
        partial void OnActualCostChanging(Nullable<global::System.Decimal> value);
        partial void OnActualCostChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_attendance_training", "training_attendance")]
        public EntityCollection<TrainingAttendance> TrainingAttendance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingAttendance>("HrmModel.FK_training_attendance_training", "training_attendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingAttendance>("HrmModel.FK_training_attendance_training", "training_attendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_feedback_training", "training_feedback")]
        public EntityCollection<TrainingFeedback> TrainingFeedback
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingFeedback>("HrmModel.FK_training_feedback_training", "training_feedback");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingFeedback>("HrmModel.FK_training_feedback_training", "training_feedback", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_training_request", "training_request")]
        public TrainingRequest training_request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingRequest>("HrmModel.FK_training_training_request", "training_request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingRequest>("HrmModel.FK_training_training_request", "training_request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrainingRequest> training_requestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingRequest>("HrmModel.FK_training_training_request", "training_request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrainingRequest>("HrmModel.FK_training_training_request", "training_request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="TrainingAttendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingAttendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingAttendance object.
        /// </summary>
        /// <param name="trainingAtendantId">Initial value of the TrainingAtendantId property.</param>
        public static TrainingAttendance CreateTrainingAttendance(global::System.Int32 trainingAtendantId)
        {
            TrainingAttendance trainingAttendance = new TrainingAttendance();
            trainingAttendance.TrainingAtendantId = trainingAtendantId;
            return trainingAttendance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingAtendantId
        {
            get
            {
                return _TrainingAtendantId;
            }
            set
            {
                if (_TrainingAtendantId != value)
                {
                    OnTrainingAtendantIdChanging(value);
                    ReportPropertyChanging("TrainingAtendantId");
                    _TrainingAtendantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingAtendantId");
                    OnTrainingAtendantIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingAtendantId;
        partial void OnTrainingAtendantIdChanging(global::System.Int32 value);
        partial void OnTrainingAtendantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                OnTrainingIdChanging(value);
                ReportPropertyChanging("TrainingId");
                _TrainingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingId");
                OnTrainingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TrainingId;
        partial void OnTrainingIdChanging(Nullable<global::System.Int32> value);
        partial void OnTrainingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeId;
        partial void OnEmployeeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasCompleted
        {
            get
            {
                return _HasCompleted;
            }
            set
            {
                OnHasCompletedChanging(value);
                ReportPropertyChanging("HasCompleted");
                _HasCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasCompleted");
                OnHasCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasCompleted;
        partial void OnHasCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnHasCompletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_attendance_employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_training_attendance_employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_training_attendance_employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HrmModel.FK_training_attendance_employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HrmModel.FK_training_attendance_employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_attendance_training", "training")]
        public Training Training
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("HrmModel.FK_training_attendance_training", "training").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("HrmModel.FK_training_attendance_training", "training").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Training> TrainingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("HrmModel.FK_training_attendance_training", "training");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Training>("HrmModel.FK_training_attendance_training", "training", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="TrainingAttendanceInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingAttendanceInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingAttendanceInfo object.
        /// </summary>
        /// <param name="employeeNo">Initial value of the EmployeeNo property.</param>
        /// <param name="trainingAtendantId">Initial value of the TrainingAtendantId property.</param>
        public static TrainingAttendanceInfo CreateTrainingAttendanceInfo(global::System.String employeeNo, global::System.Int32 trainingAtendantId)
        {
            TrainingAttendanceInfo trainingAttendanceInfo = new TrainingAttendanceInfo();
            trainingAttendanceInfo.EmployeeNo = employeeNo;
            trainingAttendanceInfo.TrainingAtendantId = trainingAtendantId;
            return trainingAttendanceInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasCompleted
        {
            get
            {
                return _HasCompleted;
            }
            set
            {
                OnHasCompletedChanging(value);
                ReportPropertyChanging("HasCompleted");
                _HasCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasCompleted");
                OnHasCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasCompleted;
        partial void OnHasCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnHasCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingAtendantId
        {
            get
            {
                return _TrainingAtendantId;
            }
            set
            {
                if (_TrainingAtendantId != value)
                {
                    OnTrainingAtendantIdChanging(value);
                    ReportPropertyChanging("TrainingAtendantId");
                    _TrainingAtendantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingAtendantId");
                    OnTrainingAtendantIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingAtendantId;
        partial void OnTrainingAtendantIdChanging(global::System.Int32 value);
        partial void OnTrainingAtendantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Departement
        {
            get
            {
                return _Departement;
            }
            set
            {
                OnDepartementChanging(value);
                ReportPropertyChanging("Departement");
                _Departement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Departement");
                OnDepartementChanged();
            }
        }
        private global::System.String _Departement;
        partial void OnDepartementChanging(global::System.String value);
        partial void OnDepartementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                OnTrainingIdChanging(value);
                ReportPropertyChanging("TrainingId");
                _TrainingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingId");
                OnTrainingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TrainingId;
        partial void OnTrainingIdChanging(Nullable<global::System.Int32> value);
        partial void OnTrainingIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="TrainingCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingCategory object.
        /// </summary>
        /// <param name="trainingCategoryId">Initial value of the TrainingCategoryId property.</param>
        public static TrainingCategory CreateTrainingCategory(global::System.Int32 trainingCategoryId)
        {
            TrainingCategory trainingCategory = new TrainingCategory();
            trainingCategory.TrainingCategoryId = trainingCategoryId;
            return trainingCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingCategoryId
        {
            get
            {
                return _TrainingCategoryId;
            }
            set
            {
                if (_TrainingCategoryId != value)
                {
                    OnTrainingCategoryIdChanging(value);
                    ReportPropertyChanging("TrainingCategoryId");
                    _TrainingCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingCategoryId");
                    OnTrainingCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingCategoryId;
        partial void OnTrainingCategoryIdChanging(global::System.Int32 value);
        partial void OnTrainingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingCategoryName
        {
            get
            {
                return _TrainingCategoryName;
            }
            set
            {
                OnTrainingCategoryNameChanging(value);
                ReportPropertyChanging("TrainingCategoryName");
                _TrainingCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingCategoryName");
                OnTrainingCategoryNameChanged();
            }
        }
        private global::System.String _TrainingCategoryName;
        partial void OnTrainingCategoryNameChanging(global::System.String value);
        partial void OnTrainingCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_request_training_category", "training_request")]
        public EntityCollection<TrainingRequest> training_request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingRequest>("HrmModel.FK_training_request_training_category", "training_request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingRequest>("HrmModel.FK_training_request_training_category", "training_request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="TrainingFeedback")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingFeedback : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingFeedback object.
        /// </summary>
        /// <param name="trainingFeedbackId">Initial value of the TrainingFeedbackId property.</param>
        public static TrainingFeedback CreateTrainingFeedback(global::System.Int32 trainingFeedbackId)
        {
            TrainingFeedback trainingFeedback = new TrainingFeedback();
            trainingFeedback.TrainingFeedbackId = trainingFeedbackId;
            return trainingFeedback;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingFeedbackId
        {
            get
            {
                return _TrainingFeedbackId;
            }
            set
            {
                if (_TrainingFeedbackId != value)
                {
                    OnTrainingFeedbackIdChanging(value);
                    ReportPropertyChanging("TrainingFeedbackId");
                    _TrainingFeedbackId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingFeedbackId");
                    OnTrainingFeedbackIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingFeedbackId;
        partial void OnTrainingFeedbackIdChanging(global::System.Int32 value);
        partial void OnTrainingFeedbackIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                OnTrainingIdChanging(value);
                ReportPropertyChanging("TrainingId");
                _TrainingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingId");
                OnTrainingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TrainingId;
        partial void OnTrainingIdChanging(Nullable<global::System.Int32> value);
        partial void OnTrainingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FeedbackBy
        {
            get
            {
                return _FeedbackBy;
            }
            set
            {
                OnFeedbackByChanging(value);
                ReportPropertyChanging("FeedbackBy");
                _FeedbackBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeedbackBy");
                OnFeedbackByChanged();
            }
        }
        private global::System.String _FeedbackBy;
        partial void OnFeedbackByChanging(global::System.String value);
        partial void OnFeedbackByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Feedback
        {
            get
            {
                return _Feedback;
            }
            set
            {
                OnFeedbackChanging(value);
                ReportPropertyChanging("Feedback");
                _Feedback = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Feedback");
                OnFeedbackChanged();
            }
        }
        private global::System.String _Feedback;
        partial void OnFeedbackChanging(global::System.String value);
        partial void OnFeedbackChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_feedback_training", "training")]
        public Training Training
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("HrmModel.FK_training_feedback_training", "training").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("HrmModel.FK_training_feedback_training", "training").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Training> TrainingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Training>("HrmModel.FK_training_feedback_training", "training");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Training>("HrmModel.FK_training_feedback_training", "training", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="TrainingInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingInfo object.
        /// </summary>
        /// <param name="trainingId">Initial value of the TrainingId property.</param>
        public static TrainingInfo CreateTrainingInfo(global::System.Int32 trainingId)
        {
            TrainingInfo trainingInfo = new TrainingInfo();
            trainingInfo.TrainingId = trainingId;
            return trainingInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrainingRequestId
        {
            get
            {
                return _TrainingRequestId;
            }
            set
            {
                OnTrainingRequestIdChanging(value);
                ReportPropertyChanging("TrainingRequestId");
                _TrainingRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingRequestId");
                OnTrainingRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TrainingRequestId;
        partial void OnTrainingRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnTrainingRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingTitle
        {
            get
            {
                return _TrainingTitle;
            }
            set
            {
                OnTrainingTitleChanging(value);
                ReportPropertyChanging("TrainingTitle");
                _TrainingTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingTitle");
                OnTrainingTitleChanged();
            }
        }
        private global::System.String _TrainingTitle;
        partial void OnTrainingTitleChanging(global::System.String value);
        partial void OnTrainingTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestedDate
        {
            get
            {
                return _RequestedDate;
            }
            set
            {
                OnRequestedDateChanging(value);
                ReportPropertyChanging("RequestedDate");
                _RequestedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedDate");
                OnRequestedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestedDate;
        partial void OnRequestedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestedBy
        {
            get
            {
                return _RequestedBy;
            }
            set
            {
                OnRequestedByChanging(value);
                ReportPropertyChanging("RequestedBy");
                _RequestedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestedBy");
                OnRequestedByChanged();
            }
        }
        private global::System.String _RequestedBy;
        partial void OnRequestedByChanging(global::System.String value);
        partial void OnRequestedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingId
        {
            get
            {
                return _TrainingId;
            }
            set
            {
                if (_TrainingId != value)
                {
                    OnTrainingIdChanging(value);
                    ReportPropertyChanging("TrainingId");
                    _TrainingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingId");
                    OnTrainingIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingId;
        partial void OnTrainingIdChanging(global::System.Int32 value);
        partial void OnTrainingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ConductedFrom
        {
            get
            {
                return _ConductedFrom;
            }
            set
            {
                OnConductedFromChanging(value);
                ReportPropertyChanging("ConductedFrom");
                _ConductedFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConductedFrom");
                OnConductedFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _ConductedFrom;
        partial void OnConductedFromChanging(Nullable<global::System.DateTime> value);
        partial void OnConductedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ConductedTo
        {
            get
            {
                return _ConductedTo;
            }
            set
            {
                OnConductedToChanging(value);
                ReportPropertyChanging("ConductedTo");
                _ConductedTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConductedTo");
                OnConductedToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ConductedTo;
        partial void OnConductedToChanging(Nullable<global::System.DateTime> value);
        partial void OnConductedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConductedBy
        {
            get
            {
                return _ConductedBy;
            }
            set
            {
                OnConductedByChanging(value);
                ReportPropertyChanging("ConductedBy");
                _ConductedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConductedBy");
                OnConductedByChanged();
            }
        }
        private global::System.String _ConductedBy;
        partial void OnConductedByChanging(global::System.String value);
        partial void OnConductedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualCost
        {
            get
            {
                return _ActualCost;
            }
            set
            {
                OnActualCostChanging(value);
                ReportPropertyChanging("ActualCost");
                _ActualCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualCost");
                OnActualCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualCost;
        partial void OnActualCostChanging(Nullable<global::System.Decimal> value);
        partial void OnActualCostChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="TrainingRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingRequest object.
        /// </summary>
        /// <param name="trainingRequestId">Initial value of the TrainingRequestId property.</param>
        public static TrainingRequest CreateTrainingRequest(global::System.Int32 trainingRequestId)
        {
            TrainingRequest trainingRequest = new TrainingRequest();
            trainingRequest.TrainingRequestId = trainingRequestId;
            return trainingRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingRequestId
        {
            get
            {
                return _TrainingRequestId;
            }
            set
            {
                if (_TrainingRequestId != value)
                {
                    OnTrainingRequestIdChanging(value);
                    ReportPropertyChanging("TrainingRequestId");
                    _TrainingRequestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrainingRequestId");
                    OnTrainingRequestIdChanged();
                }
            }
        }
        private global::System.Int32 _TrainingRequestId;
        partial void OnTrainingRequestIdChanging(global::System.Int32 value);
        partial void OnTrainingRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingTitle
        {
            get
            {
                return _TrainingTitle;
            }
            set
            {
                OnTrainingTitleChanging(value);
                ReportPropertyChanging("TrainingTitle");
                _TrainingTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingTitle");
                OnTrainingTitleChanged();
            }
        }
        private global::System.String _TrainingTitle;
        partial void OnTrainingTitleChanging(global::System.String value);
        partial void OnTrainingTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestedDate
        {
            get
            {
                return _RequestedDate;
            }
            set
            {
                OnRequestedDateChanging(value);
                ReportPropertyChanging("RequestedDate");
                _RequestedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedDate");
                OnRequestedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestedDate;
        partial void OnRequestedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestedBy
        {
            get
            {
                return _RequestedBy;
            }
            set
            {
                OnRequestedByChanging(value);
                ReportPropertyChanging("RequestedBy");
                _RequestedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestedBy");
                OnRequestedByChanged();
            }
        }
        private global::System.String _RequestedBy;
        partial void OnRequestedByChanging(global::System.String value);
        partial void OnRequestedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingDescription
        {
            get
            {
                return _TrainingDescription;
            }
            set
            {
                OnTrainingDescriptionChanging(value);
                ReportPropertyChanging("TrainingDescription");
                _TrainingDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingDescription");
                OnTrainingDescriptionChanged();
            }
        }
        private global::System.String _TrainingDescription;
        partial void OnTrainingDescriptionChanging(global::System.String value);
        partial void OnTrainingDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EstimatedNumberOfAttendants
        {
            get
            {
                return _EstimatedNumberOfAttendants;
            }
            set
            {
                OnEstimatedNumberOfAttendantsChanging(value);
                ReportPropertyChanging("EstimatedNumberOfAttendants");
                _EstimatedNumberOfAttendants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedNumberOfAttendants");
                OnEstimatedNumberOfAttendantsChanged();
            }
        }
        private Nullable<global::System.Int32> _EstimatedNumberOfAttendants;
        partial void OnEstimatedNumberOfAttendantsChanging(Nullable<global::System.Int32> value);
        partial void OnEstimatedNumberOfAttendantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrainingCategoryId
        {
            get
            {
                return _TrainingCategoryId;
            }
            set
            {
                OnTrainingCategoryIdChanging(value);
                ReportPropertyChanging("TrainingCategoryId");
                _TrainingCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrainingCategoryId");
                OnTrainingCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TrainingCategoryId;
        partial void OnTrainingCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnTrainingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedBudget
        {
            get
            {
                return _EstimatedBudget;
            }
            set
            {
                OnEstimatedBudgetChanging(value);
                ReportPropertyChanging("EstimatedBudget");
                _EstimatedBudget = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedBudget");
                OnEstimatedBudgetChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedBudget;
        partial void OnEstimatedBudgetChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BudgetSecured
        {
            get
            {
                return _BudgetSecured;
            }
            set
            {
                OnBudgetSecuredChanging(value);
                ReportPropertyChanging("BudgetSecured");
                _BudgetSecured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BudgetSecured");
                OnBudgetSecuredChanged();
            }
        }
        private Nullable<global::System.Boolean> _BudgetSecured;
        partial void OnBudgetSecuredChanging(Nullable<global::System.Boolean> value);
        partial void OnBudgetSecuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_training_request", "Training")]
        public EntityCollection<Training> trainings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Training>("HrmModel.FK_training_training_request", "Training");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Training>("HrmModel.FK_training_training_request", "Training", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_training_request_training_category", "TrainingCategory")]
        public TrainingCategory training_category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingCategory>("HrmModel.FK_training_request_training_category", "TrainingCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingCategory>("HrmModel.FK_training_request_training_category", "TrainingCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrainingCategory> training_categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrainingCategory>("HrmModel.FK_training_request_training_category", "TrainingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrainingCategory>("HrmModel.FK_training_request_training_category", "TrainingCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HrmModel", Name="WarningType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarningType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarningType object.
        /// </summary>
        /// <param name="warningTypeId">Initial value of the WarningTypeId property.</param>
        public static WarningType CreateWarningType(global::System.Int32 warningTypeId)
        {
            WarningType warningType = new WarningType();
            warningType.WarningTypeId = warningTypeId;
            return warningType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarningTypeId
        {
            get
            {
                return _WarningTypeId;
            }
            set
            {
                if (_WarningTypeId != value)
                {
                    OnWarningTypeIdChanging(value);
                    ReportPropertyChanging("WarningTypeId");
                    _WarningTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarningTypeId");
                    OnWarningTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _WarningTypeId;
        partial void OnWarningTypeIdChanging(global::System.Int32 value);
        partial void OnWarningTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarningTypeName
        {
            get
            {
                return _WarningTypeName;
            }
            set
            {
                OnWarningTypeNameChanging(value);
                ReportPropertyChanging("WarningTypeName");
                _WarningTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarningTypeName");
                OnWarningTypeNameChanged();
            }
        }
        private global::System.String _WarningTypeName;
        partial void OnWarningTypeNameChanging(global::System.String value);
        partial void OnWarningTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HrmModel", "FK_employee_warning_warning_type", "EmployeeWarning")]
        public EntityCollection<EmployeeWarning> employee_warning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeWarning>("HrmModel.FK_employee_warning_warning_type", "EmployeeWarning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeWarning>("HrmModel.FK_employee_warning_warning_type", "EmployeeWarning", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}

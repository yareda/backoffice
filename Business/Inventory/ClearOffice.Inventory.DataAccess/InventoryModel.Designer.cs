//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InventoryModel", "fk_adjustme_reference_transact", "transaction_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.TransactionStatus), "adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Adjustment), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_adjustme_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Adjustment), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_item_reference_category", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Category), "item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_sub_cate_reference_category", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Category), "sub_category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.SubCategory), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_issue_de_reference_issue", "issue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Issue), "issue_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.IssueDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_issue_reference_transact", "transaction_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.TransactionStatus), "issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Issue), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_issue_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Issue), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_issue_de_reference_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "issue_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.IssueDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_item_reference_sub_cate", "sub_category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.SubCategory), "item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_receivin_reference_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "receiving_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.ReceivingDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_return_d_reference_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "return_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.ReturnDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_stock_st_reference_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "stock_status", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.StockStatus), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_stock_tr_reference_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "stock_transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.StockTransaction), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_reference_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "transfer_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.TransferDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_receivin_reference_receivin", "receiving", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Receiving), "receiving_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.ReceivingDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_receivin_reference_supplier", "supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Supplier), "receiving", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Receiving), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_receivin_reference_transact", "transaction_status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Inventory.DataAccess.TransactionStatus), "receiving", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Receiving), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_receivin_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "receiving", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Receiving), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_return_d_reference_return", "return", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.ItemReturn), "return_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.ReturnDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_return_reference_transact", "transaction_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.TransactionStatus), "return", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.ItemReturn), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_return_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "return", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.ItemReturn), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_stock_st_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "stock_status", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.StockStatus), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_stock_tr_reference_transact", "transaction_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.TransactionType), "stock_transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.StockTransaction), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_stock_tr_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "stock_transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.StockTransaction), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_reference_transact", "transaction_status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.TransactionStatus), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Transfer), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_ref_sourc_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Transfer), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_reference_transfer", "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Transfer), "transfer_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.TransferDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_reference_warehous", "warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Warehouse), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Transfer), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_item_reference_measurem", "measurement_unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.MeasurementUnit), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_adjustme_reference_adjustme", "Adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Adjustment), "adjustment_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.AdjustmentDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_adjustme_reference_item", "InventoryItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.InventoryItem), "adjustment_detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.AdjustmentDetail), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "FK_lookup_item_lookup", "lookup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.Lookup), "lookup_item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.LookupItem), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_receivin_reference_supplier1", "LookupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.LookupItem), "Receiving", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Receiving), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_ref_sourc_warehous1", "LookupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.LookupItem), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Transfer), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "fk_transfer_reference_warehous1", "LookupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Inventory.DataAccess.LookupItem), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Inventory.DataAccess.Transfer), true)]

#endregion

namespace ClearOffice.Inventory.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InventoryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InventoryEntities object using the connection string found in the 'InventoryEntities' section of the application configuration file.
        /// </summary>
        public InventoryEntities() : base("name=InventoryEntities", "InventoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InventoryEntities object.
        /// </summary>
        public InventoryEntities(string connectionString) : base(connectionString, "InventoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InventoryEntities object.
        /// </summary>
        public InventoryEntities(EntityConnection connection) : base(connection, "InventoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Adjustment> Adjustments
        {
            get
            {
                if ((_Adjustments == null))
                {
                    _Adjustments = base.CreateObjectSet<Adjustment>("Adjustments");
                }
                return _Adjustments;
            }
        }
        private ObjectSet<Adjustment> _Adjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issue> Issues
        {
            get
            {
                if ((_Issues == null))
                {
                    _Issues = base.CreateObjectSet<Issue>("Issues");
                }
                return _Issues;
            }
        }
        private ObjectSet<Issue> _Issues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueDetail> IssueDetails
        {
            get
            {
                if ((_IssueDetails == null))
                {
                    _IssueDetails = base.CreateObjectSet<IssueDetail>("IssueDetails");
                }
                return _IssueDetails;
            }
        }
        private ObjectSet<IssueDetail> _IssueDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryItem> InventoryItems
        {
            get
            {
                if ((_InventoryItems == null))
                {
                    _InventoryItems = base.CreateObjectSet<InventoryItem>("InventoryItems");
                }
                return _InventoryItems;
            }
        }
        private ObjectSet<InventoryItem> _InventoryItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receiving> Receivings
        {
            get
            {
                if ((_Receivings == null))
                {
                    _Receivings = base.CreateObjectSet<Receiving>("Receivings");
                }
                return _Receivings;
            }
        }
        private ObjectSet<Receiving> _Receivings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceivingDetail> ReceivingDetails
        {
            get
            {
                if ((_ReceivingDetails == null))
                {
                    _ReceivingDetails = base.CreateObjectSet<ReceivingDetail>("ReceivingDetails");
                }
                return _ReceivingDetails;
            }
        }
        private ObjectSet<ReceivingDetail> _ReceivingDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemReturn> ItemReturns
        {
            get
            {
                if ((_ItemReturns == null))
                {
                    _ItemReturns = base.CreateObjectSet<ItemReturn>("ItemReturns");
                }
                return _ItemReturns;
            }
        }
        private ObjectSet<ItemReturn> _ItemReturns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReturnDetail> ReturnDetails
        {
            get
            {
                if ((_ReturnDetails == null))
                {
                    _ReturnDetails = base.CreateObjectSet<ReturnDetail>("ReturnDetails");
                }
                return _ReturnDetails;
            }
        }
        private ObjectSet<ReturnDetail> _ReturnDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SequenceCounter> SequenceCounters
        {
            get
            {
                if ((_SequenceCounters == null))
                {
                    _SequenceCounters = base.CreateObjectSet<SequenceCounter>("SequenceCounters");
                }
                return _SequenceCounters;
            }
        }
        private ObjectSet<SequenceCounter> _SequenceCounters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockStatus> StockStatus
        {
            get
            {
                if ((_StockStatus == null))
                {
                    _StockStatus = base.CreateObjectSet<StockStatus>("StockStatus");
                }
                return _StockStatus;
            }
        }
        private ObjectSet<StockStatus> _StockStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockTransaction> StockTransactions
        {
            get
            {
                if ((_StockTransactions == null))
                {
                    _StockTransactions = base.CreateObjectSet<StockTransaction>("StockTransactions");
                }
                return _StockTransactions;
            }
        }
        private ObjectSet<StockTransaction> _StockTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubCategory> SubCategories
        {
            get
            {
                if ((_SubCategories == null))
                {
                    _SubCategories = base.CreateObjectSet<SubCategory>("SubCategories");
                }
                return _SubCategories;
            }
        }
        private ObjectSet<SubCategory> _SubCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionStatus> TransactionStatus
        {
            get
            {
                if ((_TransactionStatus == null))
                {
                    _TransactionStatus = base.CreateObjectSet<TransactionStatus>("TransactionStatus");
                }
                return _TransactionStatus;
            }
        }
        private ObjectSet<TransactionStatus> _TransactionStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionType> TransactionTypes
        {
            get
            {
                if ((_TransactionTypes == null))
                {
                    _TransactionTypes = base.CreateObjectSet<TransactionType>("TransactionTypes");
                }
                return _TransactionTypes;
            }
        }
        private ObjectSet<TransactionType> _TransactionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transfer> Transfers
        {
            get
            {
                if ((_Transfers == null))
                {
                    _Transfers = base.CreateObjectSet<Transfer>("Transfers");
                }
                return _Transfers;
            }
        }
        private ObjectSet<Transfer> _Transfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransferDetail> TransferDetails
        {
            get
            {
                if ((_TransferDetails == null))
                {
                    _TransferDetails = base.CreateObjectSet<TransferDetail>("TransferDetails");
                }
                return _TransferDetails;
            }
        }
        private ObjectSet<TransferDetail> _TransferDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warehouse> Warehouses
        {
            get
            {
                if ((_Warehouses == null))
                {
                    _Warehouses = base.CreateObjectSet<Warehouse>("Warehouses");
                }
                return _Warehouses;
            }
        }
        private ObjectSet<Warehouse> _Warehouses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasurementUnit> MeasurementUnits
        {
            get
            {
                if ((_MeasurementUnits == null))
                {
                    _MeasurementUnits = base.CreateObjectSet<MeasurementUnit>("MeasurementUnits");
                }
                return _MeasurementUnits;
            }
        }
        private ObjectSet<MeasurementUnit> _MeasurementUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceivingInfo> ReceivingInfoes
        {
            get
            {
                if ((_ReceivingInfoes == null))
                {
                    _ReceivingInfoes = base.CreateObjectSet<ReceivingInfo>("ReceivingInfoes");
                }
                return _ReceivingInfoes;
            }
        }
        private ObjectSet<ReceivingInfo> _ReceivingInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockStatusInfo> StockStatusInfoes
        {
            get
            {
                if ((_StockStatusInfoes == null))
                {
                    _StockStatusInfoes = base.CreateObjectSet<StockStatusInfo>("StockStatusInfoes");
                }
                return _StockStatusInfoes;
            }
        }
        private ObjectSet<StockStatusInfo> _StockStatusInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueInfo> IssueInfoes
        {
            get
            {
                if ((_IssueInfoes == null))
                {
                    _IssueInfoes = base.CreateObjectSet<IssueInfo>("IssueInfoes");
                }
                return _IssueInfoes;
            }
        }
        private ObjectSet<IssueInfo> _IssueInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WarehouseItemInfo> WarehouseItemInfoes
        {
            get
            {
                if ((_WarehouseItemInfoes == null))
                {
                    _WarehouseItemInfoes = base.CreateObjectSet<WarehouseItemInfo>("WarehouseItemInfoes");
                }
                return _WarehouseItemInfoes;
            }
        }
        private ObjectSet<WarehouseItemInfo> _WarehouseItemInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReturnInfo> ReturnInfoes
        {
            get
            {
                if ((_ReturnInfoes == null))
                {
                    _ReturnInfoes = base.CreateObjectSet<ReturnInfo>("ReturnInfoes");
                }
                return _ReturnInfoes;
            }
        }
        private ObjectSet<ReturnInfo> _ReturnInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatusInfo> StatusInfoes
        {
            get
            {
                if ((_StatusInfoes == null))
                {
                    _StatusInfoes = base.CreateObjectSet<StatusInfo>("StatusInfoes");
                }
                return _StatusInfoes;
            }
        }
        private ObjectSet<StatusInfo> _StatusInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemInfo> ItemInfoes
        {
            get
            {
                if ((_ItemInfoes == null))
                {
                    _ItemInfoes = base.CreateObjectSet<ItemInfo>("ItemInfoes");
                }
                return _ItemInfoes;
            }
        }
        private ObjectSet<ItemInfo> _ItemInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjustmentDetail> AdjustmentDetails
        {
            get
            {
                if ((_AdjustmentDetails == null))
                {
                    _AdjustmentDetails = base.CreateObjectSet<AdjustmentDetail>("AdjustmentDetails");
                }
                return _AdjustmentDetails;
            }
        }
        private ObjectSet<AdjustmentDetail> _AdjustmentDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lookup> Lookups
        {
            get
            {
                if ((_Lookups == null))
                {
                    _Lookups = base.CreateObjectSet<Lookup>("Lookups");
                }
                return _Lookups;
            }
        }
        private ObjectSet<Lookup> _Lookups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LookupItem> LookupItems
        {
            get
            {
                if ((_LookupItems == null))
                {
                    _LookupItems = base.CreateObjectSet<LookupItem>("LookupItems");
                }
                return _LookupItems;
            }
        }
        private ObjectSet<LookupItem> _LookupItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjustmentInfo> AdjustmentInfoes
        {
            get
            {
                if ((_AdjustmentInfoes == null))
                {
                    _AdjustmentInfoes = base.CreateObjectSet<AdjustmentInfo>("AdjustmentInfoes");
                }
                return _AdjustmentInfoes;
            }
        }
        private ObjectSet<AdjustmentInfo> _AdjustmentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransferInfo> TransferInfoes
        {
            get
            {
                if ((_TransferInfoes == null))
                {
                    _TransferInfoes = base.CreateObjectSet<TransferInfo>("TransferInfoes");
                }
                return _TransferInfoes;
            }
        }
        private ObjectSet<TransferInfo> _TransferInfoes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Adjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjustments(Adjustment adjustment)
        {
            base.AddObject("Adjustments", adjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssues(Issue issue)
        {
            base.AddObject("Issues", issue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueDetails(IssueDetail issueDetail)
        {
            base.AddObject("IssueDetails", issueDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryItems(InventoryItem inventoryItem)
        {
            base.AddObject("InventoryItems", inventoryItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receivings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivings(Receiving receiving)
        {
            base.AddObject("Receivings", receiving);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceivingDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivingDetails(ReceivingDetail receivingDetail)
        {
            base.AddObject("ReceivingDetails", receivingDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemReturns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemReturns(ItemReturn itemReturn)
        {
            base.AddObject("ItemReturns", itemReturn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReturnDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReturnDetails(ReturnDetail returnDetail)
        {
            base.AddObject("ReturnDetails", returnDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SequenceCounters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSequenceCounters(SequenceCounter sequenceCounter)
        {
            base.AddObject("SequenceCounters", sequenceCounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockStatus(StockStatus stockStatus)
        {
            base.AddObject("StockStatus", stockStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockTransactions(StockTransaction stockTransaction)
        {
            base.AddObject("StockTransactions", stockTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubCategories(SubCategory subCategory)
        {
            base.AddObject("SubCategories", subCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionStatus(TransactionStatus transactionStatus)
        {
            base.AddObject("TransactionStatus", transactionStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTypes(TransactionType transactionType)
        {
            base.AddObject("TransactionTypes", transactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransfers(Transfer transfer)
        {
            base.AddObject("Transfers", transfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransferDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransferDetails(TransferDetail transferDetail)
        {
            base.AddObject("TransferDetails", transferDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Warehouses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouses(Warehouse warehouse)
        {
            base.AddObject("Warehouses", warehouse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasurementUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasurementUnits(MeasurementUnit measurementUnit)
        {
            base.AddObject("MeasurementUnits", measurementUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceivingInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceivingInfoes(ReceivingInfo receivingInfo)
        {
            base.AddObject("ReceivingInfoes", receivingInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockStatusInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockStatusInfoes(StockStatusInfo stockStatusInfo)
        {
            base.AddObject("StockStatusInfoes", stockStatusInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueInfoes(IssueInfo issueInfo)
        {
            base.AddObject("IssueInfoes", issueInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WarehouseItemInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouseItemInfoes(WarehouseItemInfo warehouseItemInfo)
        {
            base.AddObject("WarehouseItemInfoes", warehouseItemInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReturnInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReturnInfoes(ReturnInfo returnInfo)
        {
            base.AddObject("ReturnInfoes", returnInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatusInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatusInfoes(StatusInfo statusInfo)
        {
            base.AddObject("StatusInfoes", statusInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemInfoes(ItemInfo itemInfo)
        {
            base.AddObject("ItemInfoes", itemInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjustmentDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjustmentDetails(AdjustmentDetail adjustmentDetail)
        {
            base.AddObject("AdjustmentDetails", adjustmentDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookups(Lookup lookup)
        {
            base.AddObject("Lookups", lookup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LookupItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookupItems(LookupItem lookupItem)
        {
            base.AddObject("LookupItems", lookupItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjustmentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjustmentInfoes(AdjustmentInfo adjustmentInfo)
        {
            base.AddObject("AdjustmentInfoes", adjustmentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransferInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransferInfoes(TransferInfo transferInfo)
        {
            base.AddObject("TransferInfoes", transferInfo);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="newNo">No Metadata Documentation available.</param>
        public int UpdateGrnNo(global::System.String newNo)
        {
            ObjectParameter newNoParameter;
            if (newNo != null)
            {
                newNoParameter = new ObjectParameter("newNo", newNo);
            }
            else
            {
                newNoParameter = new ObjectParameter("newNo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateGrnNo", newNoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="newNo">No Metadata Documentation available.</param>
        public int UpdateIssueNo(global::System.String newNo)
        {
            ObjectParameter newNoParameter;
            if (newNo != null)
            {
                newNoParameter = new ObjectParameter("newNo", newNo);
            }
            else
            {
                newNoParameter = new ObjectParameter("newNo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateIssueNo", newNoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="newNo">No Metadata Documentation available.</param>
        public int UpdateTransferNo(global::System.String newNo)
        {
            ObjectParameter newNoParameter;
            if (newNo != null)
            {
                newNoParameter = new ObjectParameter("newNo", newNo);
            }
            else
            {
                newNoParameter = new ObjectParameter("newNo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateTransferNo", newNoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="newNo">No Metadata Documentation available.</param>
        public int UpdateReturnNo(global::System.String newNo)
        {
            ObjectParameter newNoParameter;
            if (newNo != null)
            {
                newNoParameter = new ObjectParameter("newNo", newNo);
            }
            else
            {
                newNoParameter = new ObjectParameter("newNo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateReturnNo", newNoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="newNo">No Metadata Documentation available.</param>
        public int UpdateAdjustmentNo(global::System.String newNo)
        {
            ObjectParameter newNoParameter;
            if (newNo != null)
            {
                newNoParameter = new ObjectParameter("newNo", newNo);
            }
            else
            {
                newNoParameter = new ObjectParameter("newNo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateAdjustmentNo", newNoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="receiving_id">No Metadata Documentation available.</param>
        public int DeleteReceiving(Nullable<global::System.Int32> receiving_id)
        {
            ObjectParameter receiving_idParameter;
            if (receiving_id.HasValue)
            {
                receiving_idParameter = new ObjectParameter("receiving_id", receiving_id);
            }
            else
            {
                receiving_idParameter = new ObjectParameter("receiving_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteReceiving", receiving_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="issue_id">No Metadata Documentation available.</param>
        public int DeleteIssue(Nullable<global::System.Int32> issue_id)
        {
            ObjectParameter issue_idParameter;
            if (issue_id.HasValue)
            {
                issue_idParameter = new ObjectParameter("issue_id", issue_id);
            }
            else
            {
                issue_idParameter = new ObjectParameter("issue_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteIssue", issue_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="return_id">No Metadata Documentation available.</param>
        public int DeleteReturn(Nullable<global::System.Int32> return_id)
        {
            ObjectParameter return_idParameter;
            if (return_id.HasValue)
            {
                return_idParameter = new ObjectParameter("return_id", return_id);
            }
            else
            {
                return_idParameter = new ObjectParameter("return_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteReturn", return_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="transfer_id">No Metadata Documentation available.</param>
        public int DeleteTransfer(Nullable<global::System.Int32> transfer_id)
        {
            ObjectParameter transfer_idParameter;
            if (transfer_id.HasValue)
            {
                transfer_idParameter = new ObjectParameter("transfer_id", transfer_id);
            }
            else
            {
                transfer_idParameter = new ObjectParameter("transfer_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteTransfer", transfer_idParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Adjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Adjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Adjustment object.
        /// </summary>
        /// <param name="adjustmentId">Initial value of the AdjustmentId property.</param>
        public static Adjustment CreateAdjustment(global::System.Int32 adjustmentId)
        {
            Adjustment adjustment = new Adjustment();
            adjustment.AdjustmentId = adjustmentId;
            return adjustment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentId
        {
            get
            {
                return _AdjustmentId;
            }
            set
            {
                if (_AdjustmentId != value)
                {
                    OnAdjustmentIdChanging(value);
                    ReportPropertyChanging("AdjustmentId");
                    _AdjustmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentId");
                    OnAdjustmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentId;
        partial void OnAdjustmentIdChanging(global::System.Int32 value);
        partial void OnAdjustmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjustmentNo
        {
            get
            {
                return _AdjustmentNo;
            }
            set
            {
                OnAdjustmentNoChanging(value);
                ReportPropertyChanging("AdjustmentNo");
                _AdjustmentNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdjustmentNo");
                OnAdjustmentNoChanged();
            }
        }
        private global::System.String _AdjustmentNo;
        partial void OnAdjustmentNoChanging(global::System.String value);
        partial void OnAdjustmentNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_adjustme_reference_transact", "transaction_status")]
        public TransactionStatus transaction_status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionStatus>("InventoryModel.fk_adjustme_reference_transact", "transaction_status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionStatus>("InventoryModel.fk_adjustme_reference_transact", "transaction_status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionStatus> transaction_statusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionStatus>("InventoryModel.fk_adjustme_reference_transact", "transaction_status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionStatus>("InventoryModel.fk_adjustme_reference_transact", "transaction_status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_adjustme_reference_warehous", "warehouse")]
        public Warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("InventoryModel.fk_adjustme_reference_warehous", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("InventoryModel.fk_adjustme_reference_warehous", "warehouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("InventoryModel.fk_adjustme_reference_warehous", "warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("InventoryModel.fk_adjustme_reference_warehous", "warehouse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_adjustme_reference_adjustme", "adjustment_detail")]
        public EntityCollection<AdjustmentDetail> adjustment_detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjustmentDetail>("InventoryModel.fk_adjustme_reference_adjustme", "adjustment_detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjustmentDetail>("InventoryModel.fk_adjustme_reference_adjustme", "adjustment_detail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="AdjustmentDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjustmentDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjustmentDetail object.
        /// </summary>
        /// <param name="adjustmentDetailId">Initial value of the AdjustmentDetailId property.</param>
        public static AdjustmentDetail CreateAdjustmentDetail(global::System.Int32 adjustmentDetailId)
        {
            AdjustmentDetail adjustmentDetail = new AdjustmentDetail();
            adjustmentDetail.AdjustmentDetailId = adjustmentDetailId;
            return adjustmentDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentDetailId
        {
            get
            {
                return _AdjustmentDetailId;
            }
            set
            {
                if (_AdjustmentDetailId != value)
                {
                    OnAdjustmentDetailIdChanging(value);
                    ReportPropertyChanging("AdjustmentDetailId");
                    _AdjustmentDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentDetailId");
                    OnAdjustmentDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentDetailId;
        partial void OnAdjustmentDetailIdChanging(global::System.Int32 value);
        partial void OnAdjustmentDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjustmentId
        {
            get
            {
                return _AdjustmentId;
            }
            set
            {
                OnAdjustmentIdChanging(value);
                ReportPropertyChanging("AdjustmentId");
                _AdjustmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustmentId");
                OnAdjustmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjustmentId;
        partial void OnAdjustmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdjustmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrentQuantity
        {
            get
            {
                return _CurrentQuantity;
            }
            set
            {
                OnCurrentQuantityChanging(value);
                ReportPropertyChanging("CurrentQuantity");
                _CurrentQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentQuantity");
                OnCurrentQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrentQuantity;
        partial void OnCurrentQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrentQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AdjustedQuantity
        {
            get
            {
                return _AdjustedQuantity;
            }
            set
            {
                OnAdjustedQuantityChanging(value);
                ReportPropertyChanging("AdjustedQuantity");
                _AdjustedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdjustedQuantity");
                OnAdjustedQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _AdjustedQuantity;
        partial void OnAdjustedQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnAdjustedQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_adjustme_reference_adjustme", "Adjustment")]
        public Adjustment adjustment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adjustment>("InventoryModel.fk_adjustme_reference_adjustme", "Adjustment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adjustment>("InventoryModel.fk_adjustme_reference_adjustme", "Adjustment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Adjustment> adjustmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adjustment>("InventoryModel.fk_adjustme_reference_adjustme", "Adjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Adjustment>("InventoryModel.fk_adjustme_reference_adjustme", "Adjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_adjustme_reference_item", "InventoryItem")]
        public InventoryItem item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_adjustme_reference_item", "InventoryItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_adjustme_reference_item", "InventoryItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_adjustme_reference_item", "InventoryItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("InventoryModel.fk_adjustme_reference_item", "InventoryItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="AdjustmentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjustmentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjustmentInfo object.
        /// </summary>
        /// <param name="adjustmentId">Initial value of the AdjustmentId property.</param>
        public static AdjustmentInfo CreateAdjustmentInfo(global::System.Int32 adjustmentId)
        {
            AdjustmentInfo adjustmentInfo = new AdjustmentInfo();
            adjustmentInfo.AdjustmentId = adjustmentId;
            return adjustmentInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentId
        {
            get
            {
                return _AdjustmentId;
            }
            set
            {
                if (_AdjustmentId != value)
                {
                    OnAdjustmentIdChanging(value);
                    ReportPropertyChanging("AdjustmentId");
                    _AdjustmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdjustmentId");
                    OnAdjustmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentId;
        partial void OnAdjustmentIdChanging(global::System.Int32 value);
        partial void OnAdjustmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjustmentNo
        {
            get
            {
                return _AdjustmentNo;
            }
            set
            {
                OnAdjustmentNoChanging(value);
                ReportPropertyChanging("AdjustmentNo");
                _AdjustmentNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdjustmentNo");
                OnAdjustmentNoChanged();
            }
        }
        private global::System.String _AdjustmentNo;
        partial void OnAdjustmentNoChanging(global::System.String value);
        partial void OnAdjustmentNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseText
        {
            get
            {
                return _WarehouseText;
            }
            set
            {
                OnWarehouseTextChanging(value);
                ReportPropertyChanging("WarehouseText");
                _WarehouseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseText");
                OnWarehouseTextChanged();
            }
        }
        private global::System.String _WarehouseText;
        partial void OnWarehouseTextChanging(global::System.String value);
        partial void OnWarehouseTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_sub_cate_reference_category", "sub_category")]
        public EntityCollection<SubCategory> SubCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubCategory>("InventoryModel.fk_sub_cate_reference_category", "sub_category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubCategory>("InventoryModel.fk_sub_cate_reference_category", "sub_category", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="InventoryItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryItem object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static InventoryItem CreateInventoryItem(global::System.Int32 itemId)
        {
            InventoryItem inventoryItem = new InventoryItem();
            inventoryItem.ItemId = itemId;
            return inventoryItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                OnUnitIdChanging(value);
                ReportPropertyChanging("UnitId");
                _UnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitId");
                OnUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitId;
        partial void OnUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubCategoryId
        {
            get
            {
                return _SubCategoryId;
            }
            set
            {
                OnSubCategoryIdChanging(value);
                ReportPropertyChanging("SubCategoryId");
                _SubCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCategoryId");
                OnSubCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubCategoryId;
        partial void OnSubCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemNo
        {
            get
            {
                return _ItemNo;
            }
            set
            {
                OnItemNoChanging(value);
                ReportPropertyChanging("ItemNo");
                _ItemNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemNo");
                OnItemNoChanged();
            }
        }
        private global::System.String _ItemNo;
        partial void OnItemNoChanging(global::System.String value);
        partial void OnItemNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_item_reference_category", "category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InventoryModel.fk_item_reference_category", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InventoryModel.fk_item_reference_category", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InventoryModel.fk_item_reference_category", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("InventoryModel.fk_item_reference_category", "category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_item_reference_sub_cate", "sub_category")]
        public SubCategory SubCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategory>("InventoryModel.fk_item_reference_sub_cate", "sub_category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategory>("InventoryModel.fk_item_reference_sub_cate", "sub_category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubCategory> SubCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubCategory>("InventoryModel.fk_item_reference_sub_cate", "sub_category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubCategory>("InventoryModel.fk_item_reference_sub_cate", "sub_category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_item_reference_measurem", "measurement_unit")]
        public MeasurementUnit measurement_unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnit>("InventoryModel.fk_item_reference_measurem", "measurement_unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnit>("InventoryModel.fk_item_reference_measurem", "measurement_unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasurementUnit> measurement_unitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnit>("InventoryModel.fk_item_reference_measurem", "measurement_unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasurementUnit>("InventoryModel.fk_item_reference_measurem", "measurement_unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_adjustme_reference_item", "adjustment_detail")]
        public EntityCollection<AdjustmentDetail> adjustment_detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjustmentDetail>("InventoryModel.fk_adjustme_reference_item", "adjustment_detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjustmentDetail>("InventoryModel.fk_adjustme_reference_item", "adjustment_detail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Issue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issue object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        public static Issue CreateIssue(global::System.Int32 issueId)
        {
            Issue issue = new Issue();
            issue.IssueId = issueId;
            return issue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                if (_IssueId != value)
                {
                    OnIssueIdChanging(value);
                    ReportPropertyChanging("IssueId");
                    _IssueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueId");
                    OnIssueIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueId;
        partial void OnIssueIdChanging(global::System.Int32 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueNo
        {
            get
            {
                return _IssueNo;
            }
            set
            {
                OnIssueNoChanging(value);
                ReportPropertyChanging("IssueNo");
                _IssueNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueNo");
                OnIssueNoChanged();
            }
        }
        private global::System.String _IssueNo;
        partial void OnIssueNoChanging(global::System.String value);
        partial void OnIssueNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private global::System.String _IssuedBy;
        partial void OnIssuedByChanging(global::System.String value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuedTo
        {
            get
            {
                return _IssuedTo;
            }
            set
            {
                OnIssuedToChanging(value);
                ReportPropertyChanging("IssuedTo");
                _IssuedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuedTo");
                OnIssuedToChanged();
            }
        }
        private global::System.String _IssuedTo;
        partial void OnIssuedToChanging(global::System.String value);
        partial void OnIssuedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueReason
        {
            get
            {
                return _IssueReason;
            }
            set
            {
                OnIssueReasonChanging(value);
                ReportPropertyChanging("IssueReason");
                _IssueReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueReason");
                OnIssueReasonChanged();
            }
        }
        private global::System.String _IssueReason;
        partial void OnIssueReasonChanging(global::System.String value);
        partial void OnIssueReasonChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_issue_de_reference_issue", "issue_detail")]
        public EntityCollection<IssueDetail> IssueItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDetail>("InventoryModel.fk_issue_de_reference_issue", "issue_detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDetail>("InventoryModel.fk_issue_de_reference_issue", "issue_detail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="IssueDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueDetail object.
        /// </summary>
        /// <param name="issueDetailId">Initial value of the IssueDetailId property.</param>
        public static IssueDetail CreateIssueDetail(global::System.Int32 issueDetailId)
        {
            IssueDetail issueDetail = new IssueDetail();
            issueDetail.IssueDetailId = issueDetailId;
            return issueDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueDetailId
        {
            get
            {
                return _IssueDetailId;
            }
            set
            {
                if (_IssueDetailId != value)
                {
                    OnIssueDetailIdChanging(value);
                    ReportPropertyChanging("IssueDetailId");
                    _IssueDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueDetailId");
                    OnIssueDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueDetailId;
        partial void OnIssueDetailIdChanging(global::System.Int32 value);
        partial void OnIssueDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueId;
        partial void OnIssueIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_issue_de_reference_item", "item")]
        public InventoryItem ItemDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_issue_de_reference_item", "item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_issue_de_reference_item", "item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> ItemDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_issue_de_reference_item", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("InventoryModel.fk_issue_de_reference_item", "item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="IssueInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueInfo object.
        /// </summary>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        public static IssueInfo CreateIssueInfo(global::System.Int32 issueId)
        {
            IssueInfo issueInfo = new IssueInfo();
            issueInfo.IssueId = issueId;
            return issueInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                if (_IssueId != value)
                {
                    OnIssueIdChanging(value);
                    ReportPropertyChanging("IssueId");
                    _IssueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueId");
                    OnIssueIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueId;
        partial void OnIssueIdChanging(global::System.Int32 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueNo
        {
            get
            {
                return _IssueNo;
            }
            set
            {
                OnIssueNoChanging(value);
                ReportPropertyChanging("IssueNo");
                _IssueNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueNo");
                OnIssueNoChanged();
            }
        }
        private global::System.String _IssueNo;
        partial void OnIssueNoChanging(global::System.String value);
        partial void OnIssueNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private global::System.String _IssuedBy;
        partial void OnIssuedByChanging(global::System.String value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuedTo
        {
            get
            {
                return _IssuedTo;
            }
            set
            {
                OnIssuedToChanging(value);
                ReportPropertyChanging("IssuedTo");
                _IssuedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuedTo");
                OnIssuedToChanged();
            }
        }
        private global::System.String _IssuedTo;
        partial void OnIssuedToChanging(global::System.String value);
        partial void OnIssuedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseText
        {
            get
            {
                return _WarehouseText;
            }
            set
            {
                OnWarehouseTextChanging(value);
                ReportPropertyChanging("WarehouseText");
                _WarehouseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseText");
                OnWarehouseTextChanged();
            }
        }
        private global::System.String _WarehouseText;
        partial void OnWarehouseTextChanging(global::System.String value);
        partial void OnWarehouseTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="ItemInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemInfo object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static ItemInfo CreateItemInfo(global::System.Int32 itemId)
        {
            ItemInfo itemInfo = new ItemInfo();
            itemInfo.ItemId = itemId;
            return itemInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                OnUnitIdChanging(value);
                ReportPropertyChanging("UnitId");
                _UnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitId");
                OnUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitId;
        partial void OnUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubCategoryId
        {
            get
            {
                return _SubCategoryId;
            }
            set
            {
                OnSubCategoryIdChanging(value);
                ReportPropertyChanging("SubCategoryId");
                _SubCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCategoryId");
                OnSubCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubCategoryId;
        partial void OnSubCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemNo
        {
            get
            {
                return _ItemNo;
            }
            set
            {
                OnItemNoChanging(value);
                ReportPropertyChanging("ItemNo");
                _ItemNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemNo");
                OnItemNoChanged();
            }
        }
        private global::System.String _ItemNo;
        partial void OnItemNoChanging(global::System.String value);
        partial void OnItemNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubCategoryName
        {
            get
            {
                return _SubCategoryName;
            }
            set
            {
                OnSubCategoryNameChanging(value);
                ReportPropertyChanging("SubCategoryName");
                _SubCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubCategoryName");
                OnSubCategoryNameChanged();
            }
        }
        private global::System.String _SubCategoryName;
        partial void OnSubCategoryNameChanging(global::System.String value);
        partial void OnSubCategoryNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="ItemReturn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemReturn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemReturn object.
        /// </summary>
        /// <param name="returnId">Initial value of the ReturnId property.</param>
        public static ItemReturn CreateItemReturn(global::System.Int32 returnId)
        {
            ItemReturn itemReturn = new ItemReturn();
            itemReturn.ReturnId = returnId;
            return itemReturn;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnId
        {
            get
            {
                return _ReturnId;
            }
            set
            {
                if (_ReturnId != value)
                {
                    OnReturnIdChanging(value);
                    ReportPropertyChanging("ReturnId");
                    _ReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReturnId");
                    OnReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ReturnId;
        partial void OnReturnIdChanging(global::System.Int32 value);
        partial void OnReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReturnNo
        {
            get
            {
                return _ReturnNo;
            }
            set
            {
                OnReturnNoChanging(value);
                ReportPropertyChanging("ReturnNo");
                _ReturnNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReturnNo");
                OnReturnNoChanged();
            }
        }
        private global::System.String _ReturnNo;
        partial void OnReturnNoChanging(global::System.String value);
        partial void OnReturnNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcceptedBy
        {
            get
            {
                return _AcceptedBy;
            }
            set
            {
                OnAcceptedByChanging(value);
                ReportPropertyChanging("AcceptedBy");
                _AcceptedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AcceptedBy");
                OnAcceptedByChanged();
            }
        }
        private global::System.String _AcceptedBy;
        partial void OnAcceptedByChanging(global::System.String value);
        partial void OnAcceptedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AcceptedDate
        {
            get
            {
                return _AcceptedDate;
            }
            set
            {
                OnAcceptedDateChanging(value);
                ReportPropertyChanging("AcceptedDate");
                _AcceptedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedDate");
                OnAcceptedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AcceptedDate;
        partial void OnAcceptedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAcceptedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_return_d_reference_return", "return_detail")]
        public EntityCollection<ReturnDetail> ReturnedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReturnDetail>("InventoryModel.fk_return_d_reference_return", "return_detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReturnDetail>("InventoryModel.fk_return_d_reference_return", "return_detail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Lookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lookup object.
        /// </summary>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        public static Lookup CreateLookup(global::System.Int32 lookupId)
        {
            Lookup lookup = new Lookup();
            lookup.LookupId = lookupId;
            return lookup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                if (_LookupId != value)
                {
                    OnLookupIdChanging(value);
                    ReportPropertyChanging("LookupId");
                    _LookupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupId");
                    OnLookupIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupId;
        partial void OnLookupIdChanging(global::System.Int32 value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LookupName
        {
            get
            {
                return _LookupName;
            }
            set
            {
                OnLookupNameChanging(value);
                ReportPropertyChanging("LookupName");
                _LookupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LookupName");
                OnLookupNameChanged();
            }
        }
        private global::System.String _LookupName;
        partial void OnLookupNameChanging(global::System.String value);
        partial void OnLookupNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "FK_lookup_item_lookup", "lookup_item")]
        public EntityCollection<LookupItem> lookup_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LookupItem>("InventoryModel.FK_lookup_item_lookup", "lookup_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LookupItem>("InventoryModel.FK_lookup_item_lookup", "lookup_item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="LookupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LookupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LookupItem object.
        /// </summary>
        /// <param name="lookupItemId">Initial value of the LookupItemId property.</param>
        public static LookupItem CreateLookupItem(global::System.Int32 lookupItemId)
        {
            LookupItem lookupItem = new LookupItem();
            lookupItem.LookupItemId = lookupItemId;
            return lookupItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupItemId
        {
            get
            {
                return _LookupItemId;
            }
            set
            {
                if (_LookupItemId != value)
                {
                    OnLookupItemIdChanging(value);
                    ReportPropertyChanging("LookupItemId");
                    _LookupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupItemId");
                    OnLookupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupItemId;
        partial void OnLookupItemIdChanging(global::System.Int32 value);
        partial void OnLookupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LookupId;
        partial void OnLookupIdChanging(Nullable<global::System.Int32> value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "FK_lookup_item_lookup", "lookup")]
        public Lookup lookup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("InventoryModel.FK_lookup_item_lookup", "lookup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("InventoryModel.FK_lookup_item_lookup", "lookup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lookup> lookupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lookup>("InventoryModel.FK_lookup_item_lookup", "lookup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lookup>("InventoryModel.FK_lookup_item_lookup", "lookup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_receivin_reference_supplier1", "Receiving")]
        public EntityCollection<Receiving> receivings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receiving>("InventoryModel.fk_receivin_reference_supplier1", "Receiving");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receiving>("InventoryModel.fk_receivin_reference_supplier1", "Receiving", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_transfer_ref_sourc_warehous1", "Transfer")]
        public EntityCollection<Transfer> transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("InventoryModel.fk_transfer_ref_sourc_warehous1", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("InventoryModel.fk_transfer_ref_sourc_warehous1", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_transfer_reference_warehous1", "Transfer")]
        public EntityCollection<Transfer> transfers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("InventoryModel.fk_transfer_reference_warehous1", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("InventoryModel.fk_transfer_reference_warehous1", "Transfer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="MeasurementUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasurementUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasurementUnit object.
        /// </summary>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        public static MeasurementUnit CreateMeasurementUnit(global::System.Int32 unitId)
        {
            MeasurementUnit measurementUnit = new MeasurementUnit();
            measurementUnit.UnitId = unitId;
            return measurementUnit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Receiving")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receiving : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receiving object.
        /// </summary>
        /// <param name="receivingId">Initial value of the ReceivingId property.</param>
        /// <param name="warehouseId">Initial value of the WarehouseId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static Receiving CreateReceiving(global::System.Int32 receivingId, global::System.Int32 warehouseId, global::System.Int32 statusId)
        {
            Receiving receiving = new Receiving();
            receiving.ReceivingId = receivingId;
            receiving.WarehouseId = warehouseId;
            receiving.StatusId = statusId;
            return receiving;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivingId
        {
            get
            {
                return _ReceivingId;
            }
            set
            {
                if (_ReceivingId != value)
                {
                    OnReceivingIdChanging(value);
                    ReportPropertyChanging("ReceivingId");
                    _ReceivingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceivingId");
                    OnReceivingIdChanged();
                }
            }
        }
        private global::System.Int32 _ReceivingId;
        partial void OnReceivingIdChanging(global::System.Int32 value);
        partial void OnReceivingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private global::System.Int32 _WarehouseId;
        partial void OnWarehouseIdChanging(global::System.Int32 value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                OnSupplierIdChanging(value);
                ReportPropertyChanging("SupplierId");
                _SupplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierId");
                OnSupplierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierId;
        partial void OnSupplierIdChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GRN
        {
            get
            {
                return _GRN;
            }
            set
            {
                OnGRNChanging(value);
                ReportPropertyChanging("GRN");
                _GRN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GRN");
                OnGRNChanged();
            }
        }
        private global::System.String _GRN;
        partial void OnGRNChanging(global::System.String value);
        partial void OnGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AirwaybillNo
        {
            get
            {
                return _AirwaybillNo;
            }
            set
            {
                OnAirwaybillNoChanging(value);
                ReportPropertyChanging("AirwaybillNo");
                _AirwaybillNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AirwaybillNo");
                OnAirwaybillNoChanged();
            }
        }
        private global::System.String _AirwaybillNo;
        partial void OnAirwaybillNoChanging(global::System.String value);
        partial void OnAirwaybillNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNo
        {
            get
            {
                return _InvoiceNo;
            }
            set
            {
                OnInvoiceNoChanging(value);
                ReportPropertyChanging("InvoiceNo");
                _InvoiceNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvoiceNo");
                OnInvoiceNoChanged();
            }
        }
        private global::System.String _InvoiceNo;
        partial void OnInvoiceNoChanging(global::System.String value);
        partial void OnInvoiceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceivedBy
        {
            get
            {
                return _ReceivedBy;
            }
            set
            {
                OnReceivedByChanging(value);
                ReportPropertyChanging("ReceivedBy");
                _ReceivedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceivedBy");
                OnReceivedByChanged();
            }
        }
        private global::System.String _ReceivedBy;
        partial void OnReceivedByChanging(global::System.String value);
        partial void OnReceivedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_receivin_reference_receivin", "receiving_detail")]
        public EntityCollection<ReceivingDetail> ReceivingItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceivingDetail>("InventoryModel.fk_receivin_reference_receivin", "receiving_detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceivingDetail>("InventoryModel.fk_receivin_reference_receivin", "receiving_detail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_receivin_reference_supplier1", "LookupItem")]
        public LookupItem lookup_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_receivin_reference_supplier1", "LookupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_receivin_reference_supplier1", "LookupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LookupItem> lookup_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_receivin_reference_supplier1", "LookupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LookupItem>("InventoryModel.fk_receivin_reference_supplier1", "LookupItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="ReceivingDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceivingDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceivingDetail object.
        /// </summary>
        /// <param name="receivingDetailId">Initial value of the ReceivingDetailId property.</param>
        public static ReceivingDetail CreateReceivingDetail(global::System.Int32 receivingDetailId)
        {
            ReceivingDetail receivingDetail = new ReceivingDetail();
            receivingDetail.ReceivingDetailId = receivingDetailId;
            return receivingDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivingDetailId
        {
            get
            {
                return _ReceivingDetailId;
            }
            set
            {
                if (_ReceivingDetailId != value)
                {
                    OnReceivingDetailIdChanging(value);
                    ReportPropertyChanging("ReceivingDetailId");
                    _ReceivingDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceivingDetailId");
                    OnReceivingDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _ReceivingDetailId;
        partial void OnReceivingDetailIdChanging(global::System.Int32 value);
        partial void OnReceivingDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReceivingId
        {
            get
            {
                return _ReceivingId;
            }
            set
            {
                OnReceivingIdChanging(value);
                ReportPropertyChanging("ReceivingId");
                _ReceivingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivingId");
                OnReceivingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReceivingId;
        partial void OnReceivingIdChanging(Nullable<global::System.Int32> value);
        partial void OnReceivingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_receivin_reference_item", "item")]
        public InventoryItem ItemDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_receivin_reference_item", "item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_receivin_reference_item", "item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> ItemDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_receivin_reference_item", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("InventoryModel.fk_receivin_reference_item", "item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="ReceivingInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceivingInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceivingInfo object.
        /// </summary>
        /// <param name="receivingId">Initial value of the ReceivingId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static ReceivingInfo CreateReceivingInfo(global::System.Int32 receivingId, global::System.Int32 statusId)
        {
            ReceivingInfo receivingInfo = new ReceivingInfo();
            receivingInfo.ReceivingId = receivingId;
            receivingInfo.StatusId = statusId;
            return receivingInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivingId
        {
            get
            {
                return _ReceivingId;
            }
            set
            {
                if (_ReceivingId != value)
                {
                    OnReceivingIdChanging(value);
                    ReportPropertyChanging("ReceivingId");
                    _ReceivingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceivingId");
                    OnReceivingIdChanged();
                }
            }
        }
        private global::System.Int32 _ReceivingId;
        partial void OnReceivingIdChanging(global::System.Int32 value);
        partial void OnReceivingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GRN
        {
            get
            {
                return _GRN;
            }
            set
            {
                OnGRNChanging(value);
                ReportPropertyChanging("GRN");
                _GRN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GRN");
                OnGRNChanged();
            }
        }
        private global::System.String _GRN;
        partial void OnGRNChanging(global::System.String value);
        partial void OnGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AirwaybillNo
        {
            get
            {
                return _AirwaybillNo;
            }
            set
            {
                OnAirwaybillNoChanging(value);
                ReportPropertyChanging("AirwaybillNo");
                _AirwaybillNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AirwaybillNo");
                OnAirwaybillNoChanged();
            }
        }
        private global::System.String _AirwaybillNo;
        partial void OnAirwaybillNoChanging(global::System.String value);
        partial void OnAirwaybillNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNo
        {
            get
            {
                return _InvoiceNo;
            }
            set
            {
                OnInvoiceNoChanging(value);
                ReportPropertyChanging("InvoiceNo");
                _InvoiceNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvoiceNo");
                OnInvoiceNoChanged();
            }
        }
        private global::System.String _InvoiceNo;
        partial void OnInvoiceNoChanging(global::System.String value);
        partial void OnInvoiceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceivedBy
        {
            get
            {
                return _ReceivedBy;
            }
            set
            {
                OnReceivedByChanging(value);
                ReportPropertyChanging("ReceivedBy");
                _ReceivedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceivedBy");
                OnReceivedByChanged();
            }
        }
        private global::System.String _ReceivedBy;
        partial void OnReceivedByChanging(global::System.String value);
        partial void OnReceivedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseName
        {
            get
            {
                return _WarehouseName;
            }
            set
            {
                OnWarehouseNameChanging(value);
                ReportPropertyChanging("WarehouseName");
                _WarehouseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseName");
                OnWarehouseNameChanged();
            }
        }
        private global::System.String _WarehouseName;
        partial void OnWarehouseNameChanging(global::System.String value);
        partial void OnWarehouseNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="ReturnDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReturnDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReturnDetail object.
        /// </summary>
        /// <param name="returnDetailId">Initial value of the ReturnDetailId property.</param>
        public static ReturnDetail CreateReturnDetail(global::System.Int32 returnDetailId)
        {
            ReturnDetail returnDetail = new ReturnDetail();
            returnDetail.ReturnDetailId = returnDetailId;
            return returnDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnDetailId
        {
            get
            {
                return _ReturnDetailId;
            }
            set
            {
                if (_ReturnDetailId != value)
                {
                    OnReturnDetailIdChanging(value);
                    ReportPropertyChanging("ReturnDetailId");
                    _ReturnDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReturnDetailId");
                    OnReturnDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _ReturnDetailId;
        partial void OnReturnDetailIdChanging(global::System.Int32 value);
        partial void OnReturnDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReturnId
        {
            get
            {
                return _ReturnId;
            }
            set
            {
                OnReturnIdChanging(value);
                ReportPropertyChanging("ReturnId");
                _ReturnId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnId");
                OnReturnIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReturnId;
        partial void OnReturnIdChanging(Nullable<global::System.Int32> value);
        partial void OnReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_return_d_reference_item", "item")]
        public InventoryItem ItemDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_return_d_reference_item", "item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_return_d_reference_item", "item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> ItemDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_return_d_reference_item", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("InventoryModel.fk_return_d_reference_item", "item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="ReturnInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReturnInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReturnInfo object.
        /// </summary>
        /// <param name="returnId">Initial value of the ReturnId property.</param>
        public static ReturnInfo CreateReturnInfo(global::System.Int32 returnId)
        {
            ReturnInfo returnInfo = new ReturnInfo();
            returnInfo.ReturnId = returnId;
            return returnInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnId
        {
            get
            {
                return _ReturnId;
            }
            set
            {
                if (_ReturnId != value)
                {
                    OnReturnIdChanging(value);
                    ReportPropertyChanging("ReturnId");
                    _ReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReturnId");
                    OnReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ReturnId;
        partial void OnReturnIdChanging(global::System.Int32 value);
        partial void OnReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReturnNo
        {
            get
            {
                return _ReturnNo;
            }
            set
            {
                OnReturnNoChanging(value);
                ReportPropertyChanging("ReturnNo");
                _ReturnNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReturnNo");
                OnReturnNoChanged();
            }
        }
        private global::System.String _ReturnNo;
        partial void OnReturnNoChanging(global::System.String value);
        partial void OnReturnNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcceptedBy
        {
            get
            {
                return _AcceptedBy;
            }
            set
            {
                OnAcceptedByChanging(value);
                ReportPropertyChanging("AcceptedBy");
                _AcceptedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AcceptedBy");
                OnAcceptedByChanged();
            }
        }
        private global::System.String _AcceptedBy;
        partial void OnAcceptedByChanging(global::System.String value);
        partial void OnAcceptedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AcceptedDate
        {
            get
            {
                return _AcceptedDate;
            }
            set
            {
                OnAcceptedDateChanging(value);
                ReportPropertyChanging("AcceptedDate");
                _AcceptedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcceptedDate");
                OnAcceptedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AcceptedDate;
        partial void OnAcceptedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAcceptedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseText
        {
            get
            {
                return _WarehouseText;
            }
            set
            {
                OnWarehouseTextChanging(value);
                ReportPropertyChanging("WarehouseText");
                _WarehouseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseText");
                OnWarehouseTextChanged();
            }
        }
        private global::System.String _WarehouseText;
        partial void OnWarehouseTextChanging(global::System.String value);
        partial void OnWarehouseTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="SequenceCounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SequenceCounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SequenceCounter object.
        /// </summary>
        /// <param name="recordId">Initial value of the RecordId property.</param>
        public static SequenceCounter CreateSequenceCounter(global::System.Int32 recordId)
        {
            SequenceCounter sequenceCounter = new SequenceCounter();
            sequenceCounter.RecordId = recordId;
            return sequenceCounter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordId
        {
            get
            {
                return _RecordId;
            }
            set
            {
                if (_RecordId != value)
                {
                    OnRecordIdChanging(value);
                    ReportPropertyChanging("RecordId");
                    _RecordId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecordId");
                    OnRecordIdChanged();
                }
            }
        }
        private global::System.Int32 _RecordId;
        partial void OnRecordIdChanging(global::System.Int32 value);
        partial void OnRecordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GRN
        {
            get
            {
                return _GRN;
            }
            set
            {
                OnGRNChanging(value);
                ReportPropertyChanging("GRN");
                _GRN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GRN");
                OnGRNChanged();
            }
        }
        private global::System.String _GRN;
        partial void OnGRNChanging(global::System.String value);
        partial void OnGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueNo
        {
            get
            {
                return _IssueNo;
            }
            set
            {
                OnIssueNoChanging(value);
                ReportPropertyChanging("IssueNo");
                _IssueNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueNo");
                OnIssueNoChanged();
            }
        }
        private global::System.String _IssueNo;
        partial void OnIssueNoChanging(global::System.String value);
        partial void OnIssueNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransferNo
        {
            get
            {
                return _TransferNo;
            }
            set
            {
                OnTransferNoChanging(value);
                ReportPropertyChanging("TransferNo");
                _TransferNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransferNo");
                OnTransferNoChanged();
            }
        }
        private global::System.String _TransferNo;
        partial void OnTransferNoChanging(global::System.String value);
        partial void OnTransferNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReturnNo
        {
            get
            {
                return _ReturnNo;
            }
            set
            {
                OnReturnNoChanging(value);
                ReportPropertyChanging("ReturnNo");
                _ReturnNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReturnNo");
                OnReturnNoChanged();
            }
        }
        private global::System.String _ReturnNo;
        partial void OnReturnNoChanging(global::System.String value);
        partial void OnReturnNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjustmentNo
        {
            get
            {
                return _AdjustmentNo;
            }
            set
            {
                OnAdjustmentNoChanging(value);
                ReportPropertyChanging("AdjustmentNo");
                _AdjustmentNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdjustmentNo");
                OnAdjustmentNoChanged();
            }
        }
        private global::System.String _AdjustmentNo;
        partial void OnAdjustmentNoChanging(global::System.String value);
        partial void OnAdjustmentNoChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="StatusInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatusInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatusInfo object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static StatusInfo CreateStatusInfo(global::System.Int32 itemId)
        {
            StatusInfo statusInfo = new StatusInfo();
            statusInfo.ItemId = itemId;
            return statusInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemNo
        {
            get
            {
                return _ItemNo;
            }
            set
            {
                OnItemNoChanging(value);
                ReportPropertyChanging("ItemNo");
                _ItemNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemNo");
                OnItemNoChanged();
            }
        }
        private global::System.String _ItemNo;
        partial void OnItemNoChanging(global::System.String value);
        partial void OnItemNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseText
        {
            get
            {
                return _WarehouseText;
            }
            set
            {
                OnWarehouseTextChanging(value);
                ReportPropertyChanging("WarehouseText");
                _WarehouseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseText");
                OnWarehouseTextChanged();
            }
        }
        private global::System.String _WarehouseText;
        partial void OnWarehouseTextChanging(global::System.String value);
        partial void OnWarehouseTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="StockStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockStatus object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="warehouseId">Initial value of the WarehouseId property.</param>
        public static StockStatus CreateStockStatus(global::System.Int32 itemId, global::System.Int32 warehouseId)
        {
            StockStatus stockStatus = new StockStatus();
            stockStatus.ItemId = itemId;
            stockStatus.WarehouseId = warehouseId;
            return stockStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                if (_WarehouseId != value)
                {
                    OnWarehouseIdChanging(value);
                    ReportPropertyChanging("WarehouseId");
                    _WarehouseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarehouseId");
                    OnWarehouseIdChanged();
                }
            }
        }
        private global::System.Int32 _WarehouseId;
        partial void OnWarehouseIdChanging(global::System.Int32 value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="StockStatusInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockStatusInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockStatusInfo object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="warehouseId">Initial value of the WarehouseId property.</param>
        public static StockStatusInfo CreateStockStatusInfo(global::System.Int32 itemId, global::System.Int32 warehouseId)
        {
            StockStatusInfo stockStatusInfo = new StockStatusInfo();
            stockStatusInfo.ItemId = itemId;
            stockStatusInfo.WarehouseId = warehouseId;
            return stockStatusInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                if (_WarehouseId != value)
                {
                    OnWarehouseIdChanging(value);
                    ReportPropertyChanging("WarehouseId");
                    _WarehouseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarehouseId");
                    OnWarehouseIdChanged();
                }
            }
        }
        private global::System.Int32 _WarehouseId;
        partial void OnWarehouseIdChanging(global::System.Int32 value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemNo
        {
            get
            {
                return _ItemNo;
            }
            set
            {
                OnItemNoChanging(value);
                ReportPropertyChanging("ItemNo");
                _ItemNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemNo");
                OnItemNoChanged();
            }
        }
        private global::System.String _ItemNo;
        partial void OnItemNoChanging(global::System.String value);
        partial void OnItemNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarehouseText
        {
            get
            {
                return _WarehouseText;
            }
            set
            {
                OnWarehouseTextChanging(value);
                ReportPropertyChanging("WarehouseText");
                _WarehouseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarehouseText");
                OnWarehouseTextChanged();
            }
        }
        private global::System.String _WarehouseText;
        partial void OnWarehouseTextChanging(global::System.String value);
        partial void OnWarehouseTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="StockTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockTransaction object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        public static StockTransaction CreateStockTransaction(global::System.Int32 transactionId)
        {
            StockTransaction stockTransaction = new StockTransaction();
            stockTransaction.TransactionId = transactionId;
            return stockTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionTypeId
        {
            get
            {
                return _TransactionTypeId;
            }
            set
            {
                OnTransactionTypeIdChanging(value);
                ReportPropertyChanging("TransactionTypeId");
                _TransactionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTypeId");
                OnTransactionTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionTypeId;
        partial void OnTransactionTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerId;
        partial void OnOwnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="SubCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubCategory object.
        /// </summary>
        /// <param name="subCategoryId">Initial value of the SubCategoryId property.</param>
        public static SubCategory CreateSubCategory(global::System.Int32 subCategoryId)
        {
            SubCategory subCategory = new SubCategory();
            subCategory.SubCategoryId = subCategoryId;
            return subCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubCategoryId
        {
            get
            {
                return _SubCategoryId;
            }
            set
            {
                if (_SubCategoryId != value)
                {
                    OnSubCategoryIdChanging(value);
                    ReportPropertyChanging("SubCategoryId");
                    _SubCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubCategoryId");
                    OnSubCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _SubCategoryId;
        partial void OnSubCategoryIdChanging(global::System.Int32 value);
        partial void OnSubCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_sub_cate_reference_category", "category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InventoryModel.fk_sub_cate_reference_category", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InventoryModel.fk_sub_cate_reference_category", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InventoryModel.fk_sub_cate_reference_category", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("InventoryModel.fk_sub_cate_reference_category", "category", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplierId">Initial value of the SupplierId property.</param>
        public static Supplier CreateSupplier(global::System.Int32 supplierId)
        {
            Supplier supplier = new Supplier();
            supplier.SupplierId = supplierId;
            return supplier;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierId
        {
            get
            {
                return _SupplierId;
            }
            set
            {
                if (_SupplierId != value)
                {
                    OnSupplierIdChanging(value);
                    ReportPropertyChanging("SupplierId");
                    _SupplierId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SupplierId");
                    OnSupplierIdChanged();
                }
            }
        }
        private global::System.Int32 _SupplierId;
        partial void OnSupplierIdChanging(global::System.Int32 value);
        partial void OnSupplierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="TransactionStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionStatus object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static TransactionStatus CreateTransactionStatus(global::System.Int32 statusId)
        {
            TransactionStatus transactionStatus = new TransactionStatus();
            transactionStatus.StatusId = statusId;
            return transactionStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="transactionTypeId">Initial value of the TransactionTypeId property.</param>
        public static TransactionType CreateTransactionType(global::System.Int32 transactionTypeId)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.TransactionTypeId = transactionTypeId;
            return transactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTypeId
        {
            get
            {
                return _TransactionTypeId;
            }
            set
            {
                if (_TransactionTypeId != value)
                {
                    OnTransactionTypeIdChanging(value);
                    ReportPropertyChanging("TransactionTypeId");
                    _TransactionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionTypeId");
                    OnTransactionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionTypeId;
        partial void OnTransactionTypeIdChanging(global::System.Int32 value);
        partial void OnTransactionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transfer object.
        /// </summary>
        /// <param name="transferId">Initial value of the TransferId property.</param>
        public static Transfer CreateTransfer(global::System.Int32 transferId)
        {
            Transfer transfer = new Transfer();
            transfer.TransferId = transferId;
            return transfer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferId
        {
            get
            {
                return _TransferId;
            }
            set
            {
                if (_TransferId != value)
                {
                    OnTransferIdChanging(value);
                    ReportPropertyChanging("TransferId");
                    _TransferId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferId");
                    OnTransferIdChanged();
                }
            }
        }
        private global::System.Int32 _TransferId;
        partial void OnTransferIdChanging(global::System.Int32 value);
        partial void OnTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransferNo
        {
            get
            {
                return _TransferNo;
            }
            set
            {
                OnTransferNoChanging(value);
                ReportPropertyChanging("TransferNo");
                _TransferNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransferNo");
                OnTransferNoChanged();
            }
        }
        private global::System.String _TransferNo;
        partial void OnTransferNoChanging(global::System.String value);
        partial void OnTransferNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransferDate
        {
            get
            {
                return _TransferDate;
            }
            set
            {
                OnTransferDateChanging(value);
                ReportPropertyChanging("TransferDate");
                _TransferDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferDate");
                OnTransferDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransferDate;
        partial void OnTransferDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransferDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransferBy
        {
            get
            {
                return _TransferBy;
            }
            set
            {
                OnTransferByChanging(value);
                ReportPropertyChanging("TransferBy");
                _TransferBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransferBy");
                OnTransferByChanged();
            }
        }
        private global::System.String _TransferBy;
        partial void OnTransferByChanging(global::System.String value);
        partial void OnTransferByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseFrom
        {
            get
            {
                return _WarehouseFrom;
            }
            set
            {
                OnWarehouseFromChanging(value);
                ReportPropertyChanging("WarehouseFrom");
                _WarehouseFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseFrom");
                OnWarehouseFromChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseFrom;
        partial void OnWarehouseFromChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseTo
        {
            get
            {
                return _WarehouseTo;
            }
            set
            {
                OnWarehouseToChanging(value);
                ReportPropertyChanging("WarehouseTo");
                _WarehouseTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseTo");
                OnWarehouseToChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseTo;
        partial void OnWarehouseToChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_transfer_reference_transfer", "transfer_detail")]
        public EntityCollection<TransferDetail> TransferItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferDetail>("InventoryModel.fk_transfer_reference_transfer", "transfer_detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferDetail>("InventoryModel.fk_transfer_reference_transfer", "transfer_detail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_transfer_ref_sourc_warehous1", "LookupItem")]
        public LookupItem lookup_item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_transfer_ref_sourc_warehous1", "LookupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_transfer_ref_sourc_warehous1", "LookupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LookupItem> lookup_itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_transfer_ref_sourc_warehous1", "LookupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LookupItem>("InventoryModel.fk_transfer_ref_sourc_warehous1", "LookupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_transfer_reference_warehous1", "LookupItem")]
        public LookupItem lookup_item1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_transfer_reference_warehous1", "LookupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_transfer_reference_warehous1", "LookupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LookupItem> lookup_item1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LookupItem>("InventoryModel.fk_transfer_reference_warehous1", "LookupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LookupItem>("InventoryModel.fk_transfer_reference_warehous1", "LookupItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="TransferDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferDetail object.
        /// </summary>
        /// <param name="transferDetailId">Initial value of the TransferDetailId property.</param>
        public static TransferDetail CreateTransferDetail(global::System.Int32 transferDetailId)
        {
            TransferDetail transferDetail = new TransferDetail();
            transferDetail.TransferDetailId = transferDetailId;
            return transferDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferDetailId
        {
            get
            {
                return _TransferDetailId;
            }
            set
            {
                if (_TransferDetailId != value)
                {
                    OnTransferDetailIdChanging(value);
                    ReportPropertyChanging("TransferDetailId");
                    _TransferDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferDetailId");
                    OnTransferDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _TransferDetailId;
        partial void OnTransferDetailIdChanging(global::System.Int32 value);
        partial void OnTransferDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransferId
        {
            get
            {
                return _TransferId;
            }
            set
            {
                OnTransferIdChanging(value);
                ReportPropertyChanging("TransferId");
                _TransferId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferId");
                OnTransferIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TransferId;
        partial void OnTransferIdChanging(Nullable<global::System.Int32> value);
        partial void OnTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "fk_transfer_reference_item", "item")]
        public InventoryItem ItemDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_transfer_reference_item", "item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_transfer_reference_item", "item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryItem> ItemDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryItem>("InventoryModel.fk_transfer_reference_item", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryItem>("InventoryModel.fk_transfer_reference_item", "item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="TransferInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransferInfo object.
        /// </summary>
        /// <param name="transferId">Initial value of the TransferId property.</param>
        public static TransferInfo CreateTransferInfo(global::System.Int32 transferId)
        {
            TransferInfo transferInfo = new TransferInfo();
            transferInfo.TransferId = transferId;
            return transferInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransferId
        {
            get
            {
                return _TransferId;
            }
            set
            {
                if (_TransferId != value)
                {
                    OnTransferIdChanging(value);
                    ReportPropertyChanging("TransferId");
                    _TransferId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransferId");
                    OnTransferIdChanged();
                }
            }
        }
        private global::System.Int32 _TransferId;
        partial void OnTransferIdChanging(global::System.Int32 value);
        partial void OnTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransferNo
        {
            get
            {
                return _TransferNo;
            }
            set
            {
                OnTransferNoChanging(value);
                ReportPropertyChanging("TransferNo");
                _TransferNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransferNo");
                OnTransferNoChanged();
            }
        }
        private global::System.String _TransferNo;
        partial void OnTransferNoChanging(global::System.String value);
        partial void OnTransferNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransferDate
        {
            get
            {
                return _TransferDate;
            }
            set
            {
                OnTransferDateChanging(value);
                ReportPropertyChanging("TransferDate");
                _TransferDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferDate");
                OnTransferDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransferDate;
        partial void OnTransferDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransferDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransferBy
        {
            get
            {
                return _TransferBy;
            }
            set
            {
                OnTransferByChanging(value);
                ReportPropertyChanging("TransferBy");
                _TransferBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransferBy");
                OnTransferByChanged();
            }
        }
        private global::System.String _TransferBy;
        partial void OnTransferByChanging(global::System.String value);
        partial void OnTransferByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostedDate;
        partial void OnPostedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.String _PostedBy;
        partial void OnPostedByChanging(global::System.String value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseFrom
        {
            get
            {
                return _WarehouseFrom;
            }
            set
            {
                OnWarehouseFromChanging(value);
                ReportPropertyChanging("WarehouseFrom");
                _WarehouseFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseFrom");
                OnWarehouseFromChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseFrom;
        partial void OnWarehouseFromChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseTo
        {
            get
            {
                return _WarehouseTo;
            }
            set
            {
                OnWarehouseToChanging(value);
                ReportPropertyChanging("WarehouseTo");
                _WarehouseTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseTo");
                OnWarehouseToChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseTo;
        partial void OnWarehouseToChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceWarehouse
        {
            get
            {
                return _SourceWarehouse;
            }
            set
            {
                OnSourceWarehouseChanging(value);
                ReportPropertyChanging("SourceWarehouse");
                _SourceWarehouse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceWarehouse");
                OnSourceWarehouseChanged();
            }
        }
        private global::System.String _SourceWarehouse;
        partial void OnSourceWarehouseChanging(global::System.String value);
        partial void OnSourceWarehouseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DestinationWarehouse
        {
            get
            {
                return _DestinationWarehouse;
            }
            set
            {
                OnDestinationWarehouseChanging(value);
                ReportPropertyChanging("DestinationWarehouse");
                _DestinationWarehouse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DestinationWarehouse");
                OnDestinationWarehouseChanged();
            }
        }
        private global::System.String _DestinationWarehouse;
        partial void OnDestinationWarehouseChanging(global::System.String value);
        partial void OnDestinationWarehouseChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warehouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Warehouse object.
        /// </summary>
        /// <param name="warehouseId">Initial value of the WarehouseId property.</param>
        public static Warehouse CreateWarehouse(global::System.Int32 warehouseId)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.WarehouseId = warehouseId;
            return warehouse;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                if (_WarehouseId != value)
                {
                    OnWarehouseIdChanging(value);
                    ReportPropertyChanging("WarehouseId");
                    _WarehouseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarehouseId");
                    OnWarehouseIdChanged();
                }
            }
        }
        private global::System.Int32 _WarehouseId;
        partial void OnWarehouseIdChanging(global::System.Int32 value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="WarehouseItemInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WarehouseItemInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WarehouseItemInfo object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="warehouseId">Initial value of the WarehouseId property.</param>
        public static WarehouseItemInfo CreateWarehouseItemInfo(global::System.Int32 itemId, global::System.Int32 warehouseId)
        {
            WarehouseItemInfo warehouseItemInfo = new WarehouseItemInfo();
            warehouseItemInfo.ItemId = itemId;
            warehouseItemInfo.WarehouseId = warehouseId;
            return warehouseItemInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemNo
        {
            get
            {
                return _ItemNo;
            }
            set
            {
                OnItemNoChanging(value);
                ReportPropertyChanging("ItemNo");
                _ItemNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemNo");
                OnItemNoChanged();
            }
        }
        private global::System.String _ItemNo;
        partial void OnItemNoChanging(global::System.String value);
        partial void OnItemNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubCategoryName
        {
            get
            {
                return _SubCategoryName;
            }
            set
            {
                OnSubCategoryNameChanging(value);
                ReportPropertyChanging("SubCategoryName");
                _SubCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubCategoryName");
                OnSubCategoryNameChanged();
            }
        }
        private global::System.String _SubCategoryName;
        partial void OnSubCategoryNameChanging(global::System.String value);
        partial void OnSubCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                if (_WarehouseId != value)
                {
                    OnWarehouseIdChanging(value);
                    ReportPropertyChanging("WarehouseId");
                    _WarehouseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WarehouseId");
                    OnWarehouseIdChanged();
                }
            }
        }
        private global::System.Int32 _WarehouseId;
        partial void OnWarehouseIdChanging(global::System.Int32 value);
        partial void OnWarehouseIdChanged();

        #endregion
    
    }

    #endregion
    
}

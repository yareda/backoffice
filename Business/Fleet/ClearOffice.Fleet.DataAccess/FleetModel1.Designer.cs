//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_driver", "driver", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.driver), "fuel_lubricant_purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.fuel_lubricant_purchase), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_expense_reference_vehicle", "vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Vehicle), "expense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.Expense), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_fuel_log_reference_vehicle", "vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Fleet.Business.Vehicle), "fuel_log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.FuelLog), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_order", "order_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.order_type), "fuel_lubricant_purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.fuel_lubricant_purchase), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_station", "fuel_station", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.fuel_station), "fuel_lubricant_purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.fuel_lubricant_purchase), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_vehicle", "vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Vehicle), "fuel_lubricant_purchase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.fuel_lubricant_purchase), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_insuranc_reference_vehicle", "vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Vehicle), "insurance_history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.InsurancePolicy), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "FK_lookup_item_lookup", "lookup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Lookup), "lookup_item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.LookupItem), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_maintana_reference_vendor", "vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Vendor), "maintanance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.Maintanance), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "FK_maintanance_vehicle", "vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Fleet.Business.Vehicle), "maintanance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.Maintanance), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_maintena_ref_28_maintana", "maintanance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Maintanance), "maintenance_part", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.MaintenancePart), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_maintena_reference_maintana", "maintanance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Maintanance), "maintenance_activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.MaintenanceActivity), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "FK_tire_vendor", "vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Vendor), "tire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.Tire), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "maintenance_expense", "maintanance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.Maintanance), "expense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.Expense))]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "FK_coupon_transaction_coupon", "coupon", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Coupon), "coupon_transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.CouponTransaction), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "FK_coupon_transaction_vehicle", "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClearOffice.Fleet.Business.Vehicle), "coupon_transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.CouponTransaction), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_vehicle_tire_tire", "Tire", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Fleet.Business.Tire), "vehicle_tire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.VehicleTire), true)]
[assembly: EdmRelationshipAttribute("ClearOffice.Fleet.Business", "fk_tire_reference_vehicle", "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClearOffice.Fleet.Business.Vehicle), "vehicle_tire", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClearOffice.Fleet.Business.VehicleTire), true)]

#endregion

namespace ClearOffice.Fleet.Business
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FleetEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FleetEntities object using the connection string found in the 'FleetEntities' section of the application configuration file.
        /// </summary>
        public FleetEntities() : base("name=FleetEntities", "FleetEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FleetEntities object.
        /// </summary>
        public FleetEntities(string connectionString) : base(connectionString, "FleetEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FleetEntities object.
        /// </summary>
        public FleetEntities(EntityConnection connection) : base(connection, "FleetEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<driver> drivers
        {
            get
            {
                if ((_drivers == null))
                {
                    _drivers = base.CreateObjectSet<driver>("drivers");
                }
                return _drivers;
            }
        }
        private ObjectSet<driver> _drivers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Expense> Expenses1
        {
            get
            {
                if ((_Expenses1 == null))
                {
                    _Expenses1 = base.CreateObjectSet<Expense>("Expenses1");
                }
                return _Expenses1;
            }
        }
        private ObjectSet<Expense> _Expenses1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<form_no> form_no
        {
            get
            {
                if ((_form_no == null))
                {
                    _form_no = base.CreateObjectSet<form_no>("form_no");
                }
                return _form_no;
            }
        }
        private ObjectSet<form_no> _form_no;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FuelLog> FuelLogs
        {
            get
            {
                if ((_FuelLogs == null))
                {
                    _FuelLogs = base.CreateObjectSet<FuelLog>("FuelLogs");
                }
                return _FuelLogs;
            }
        }
        private ObjectSet<FuelLog> _FuelLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fuel_lubricant_purchase> fuel_lubricant_purchase
        {
            get
            {
                if ((_fuel_lubricant_purchase == null))
                {
                    _fuel_lubricant_purchase = base.CreateObjectSet<fuel_lubricant_purchase>("fuel_lubricant_purchase");
                }
                return _fuel_lubricant_purchase;
            }
        }
        private ObjectSet<fuel_lubricant_purchase> _fuel_lubricant_purchase;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fuel_station> fuel_station
        {
            get
            {
                if ((_fuel_station == null))
                {
                    _fuel_station = base.CreateObjectSet<fuel_station>("fuel_station");
                }
                return _fuel_station;
            }
        }
        private ObjectSet<fuel_station> _fuel_station;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsurancePolicy> InsurancePolicies
        {
            get
            {
                if ((_InsurancePolicies == null))
                {
                    _InsurancePolicies = base.CreateObjectSet<InsurancePolicy>("InsurancePolicies");
                }
                return _InsurancePolicies;
            }
        }
        private ObjectSet<InsurancePolicy> _InsurancePolicies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lookup> Lookups
        {
            get
            {
                if ((_Lookups == null))
                {
                    _Lookups = base.CreateObjectSet<Lookup>("Lookups");
                }
                return _Lookups;
            }
        }
        private ObjectSet<Lookup> _Lookups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LookupItem> LookupItems
        {
            get
            {
                if ((_LookupItems == null))
                {
                    _LookupItems = base.CreateObjectSet<LookupItem>("LookupItems");
                }
                return _LookupItems;
            }
        }
        private ObjectSet<LookupItem> _LookupItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Maintanance> Maintanances
        {
            get
            {
                if ((_Maintanances == null))
                {
                    _Maintanances = base.CreateObjectSet<Maintanance>("Maintanances");
                }
                return _Maintanances;
            }
        }
        private ObjectSet<Maintanance> _Maintanances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaintenanceActivity> MaintenanceActivities
        {
            get
            {
                if ((_MaintenanceActivities == null))
                {
                    _MaintenanceActivities = base.CreateObjectSet<MaintenanceActivity>("MaintenanceActivities");
                }
                return _MaintenanceActivities;
            }
        }
        private ObjectSet<MaintenanceActivity> _MaintenanceActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaintenancePart> MaintenanceParts
        {
            get
            {
                if ((_MaintenanceParts == null))
                {
                    _MaintenanceParts = base.CreateObjectSet<MaintenancePart>("MaintenanceParts");
                }
                return _MaintenanceParts;
            }
        }
        private ObjectSet<MaintenancePart> _MaintenanceParts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<order_type> order_type
        {
            get
            {
                if ((_order_type == null))
                {
                    _order_type = base.CreateObjectSet<order_type>("order_type");
                }
                return _order_type;
            }
        }
        private ObjectSet<order_type> _order_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tire> Tires
        {
            get
            {
                if ((_Tires == null))
                {
                    _Tires = base.CreateObjectSet<Tire>("Tires");
                }
                return _Tires;
            }
        }
        private ObjectSet<Tire> _Tires;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaintenanceInfo> MaintenanceInfoes
        {
            get
            {
                if ((_MaintenanceInfoes == null))
                {
                    _MaintenanceInfoes = base.CreateObjectSet<MaintenanceInfo>("MaintenanceInfoes");
                }
                return _MaintenanceInfoes;
            }
        }
        private ObjectSet<MaintenanceInfo> _MaintenanceInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coupon> Coupons
        {
            get
            {
                if ((_Coupons == null))
                {
                    _Coupons = base.CreateObjectSet<Coupon>("Coupons");
                }
                return _Coupons;
            }
        }
        private ObjectSet<Coupon> _Coupons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CouponTransaction> CouponTransactions
        {
            get
            {
                if ((_CouponTransactions == null))
                {
                    _CouponTransactions = base.CreateObjectSet<CouponTransaction>("CouponTransactions");
                }
                return _CouponTransactions;
            }
        }
        private ObjectSet<CouponTransaction> _CouponTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CouponInfo> CouponInfoes
        {
            get
            {
                if ((_CouponInfoes == null))
                {
                    _CouponInfoes = base.CreateObjectSet<CouponInfo>("CouponInfoes");
                }
                return _CouponInfoes;
            }
        }
        private ObjectSet<CouponInfo> _CouponInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TireInfo> TireInfoes
        {
            get
            {
                if ((_TireInfoes == null))
                {
                    _TireInfoes = base.CreateObjectSet<TireInfo>("TireInfoes");
                }
                return _TireInfoes;
            }
        }
        private ObjectSet<TireInfo> _TireInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TireBrandInfo> TireBrandInfoes
        {
            get
            {
                if ((_TireBrandInfoes == null))
                {
                    _TireBrandInfoes = base.CreateObjectSet<TireBrandInfo>("TireBrandInfoes");
                }
                return _TireBrandInfoes;
            }
        }
        private ObjectSet<TireBrandInfo> _TireBrandInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TireSizeInfo> TireSizeInfoes
        {
            get
            {
                if ((_TireSizeInfoes == null))
                {
                    _TireSizeInfoes = base.CreateObjectSet<TireSizeInfo>("TireSizeInfoes");
                }
                return _TireSizeInfoes;
            }
        }
        private ObjectSet<TireSizeInfo> _TireSizeInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TireStatusInfo> TireStatusInfoes
        {
            get
            {
                if ((_TireStatusInfoes == null))
                {
                    _TireStatusInfoes = base.CreateObjectSet<TireStatusInfo>("TireStatusInfoes");
                }
                return _TireStatusInfoes;
            }
        }
        private ObjectSet<TireStatusInfo> _TireStatusInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TireTypeInfo> TireTypeInfoes
        {
            get
            {
                if ((_TireTypeInfoes == null))
                {
                    _TireTypeInfoes = base.CreateObjectSet<TireTypeInfo>("TireTypeInfoes");
                }
                return _TireTypeInfoes;
            }
        }
        private ObjectSet<TireTypeInfo> _TireTypeInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleTire> VehicleTires
        {
            get
            {
                if ((_VehicleTires == null))
                {
                    _VehicleTires = base.CreateObjectSet<VehicleTire>("VehicleTires");
                }
                return _VehicleTires;
            }
        }
        private ObjectSet<VehicleTire> _VehicleTires;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleInfo> VehicleInfoes
        {
            get
            {
                if ((_VehicleInfoes == null))
                {
                    _VehicleInfoes = base.CreateObjectSet<VehicleInfo>("VehicleInfoes");
                }
                return _VehicleInfoes;
            }
        }
        private ObjectSet<VehicleInfo> _VehicleInfoes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the drivers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodrivers(driver driver)
        {
            base.AddObject("drivers", driver);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Expenses1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenses1(Expense expense)
        {
            base.AddObject("Expenses1", expense);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the form_no EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToform_no(form_no form_no)
        {
            base.AddObject("form_no", form_no);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FuelLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFuelLogs(FuelLog fuelLog)
        {
            base.AddObject("FuelLogs", fuelLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fuel_lubricant_purchase EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofuel_lubricant_purchase(fuel_lubricant_purchase fuel_lubricant_purchase)
        {
            base.AddObject("fuel_lubricant_purchase", fuel_lubricant_purchase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fuel_station EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofuel_station(fuel_station fuel_station)
        {
            base.AddObject("fuel_station", fuel_station);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsurancePolicies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsurancePolicies(InsurancePolicy insurancePolicy)
        {
            base.AddObject("InsurancePolicies", insurancePolicy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookups(Lookup lookup)
        {
            base.AddObject("Lookups", lookup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LookupItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookupItems(LookupItem lookupItem)
        {
            base.AddObject("LookupItems", lookupItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Maintanances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaintanances(Maintanance maintanance)
        {
            base.AddObject("Maintanances", maintanance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaintenanceActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaintenanceActivities(MaintenanceActivity maintenanceActivity)
        {
            base.AddObject("MaintenanceActivities", maintenanceActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaintenanceParts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaintenanceParts(MaintenancePart maintenancePart)
        {
            base.AddObject("MaintenanceParts", maintenancePart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the order_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorder_type(order_type order_type)
        {
            base.AddObject("order_type", order_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tires EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTires(Tire tire)
        {
            base.AddObject("Tires", tire);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaintenanceInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaintenanceInfoes(MaintenanceInfo maintenanceInfo)
        {
            base.AddObject("MaintenanceInfoes", maintenanceInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coupons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoupons(Coupon coupon)
        {
            base.AddObject("Coupons", coupon);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CouponTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCouponTransactions(CouponTransaction couponTransaction)
        {
            base.AddObject("CouponTransactions", couponTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CouponInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCouponInfoes(CouponInfo couponInfo)
        {
            base.AddObject("CouponInfoes", couponInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TireInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTireInfoes(TireInfo tireInfo)
        {
            base.AddObject("TireInfoes", tireInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TireBrandInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTireBrandInfoes(TireBrandInfo tireBrandInfo)
        {
            base.AddObject("TireBrandInfoes", tireBrandInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TireSizeInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTireSizeInfoes(TireSizeInfo tireSizeInfo)
        {
            base.AddObject("TireSizeInfoes", tireSizeInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TireStatusInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTireStatusInfoes(TireStatusInfo tireStatusInfo)
        {
            base.AddObject("TireStatusInfoes", tireStatusInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TireTypeInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTireTypeInfoes(TireTypeInfo tireTypeInfo)
        {
            base.AddObject("TireTypeInfoes", tireTypeInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleTires EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicleTires(VehicleTire vehicleTire)
        {
            base.AddObject("VehicleTires", vehicleTire);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicleInfoes(VehicleInfo vehicleInfo)
        {
            base.AddObject("VehicleInfoes", vehicleInfo);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Coupon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coupon : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coupon object.
        /// </summary>
        /// <param name="couponId">Initial value of the CouponId property.</param>
        public static Coupon CreateCoupon(global::System.Int32 couponId)
        {
            Coupon coupon = new Coupon();
            coupon.CouponId = couponId;
            return coupon;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CouponId
        {
            get
            {
                return _CouponId;
            }
            set
            {
                if (_CouponId != value)
                {
                    OnCouponIdChanging(value);
                    ReportPropertyChanging("CouponId");
                    _CouponId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CouponId");
                    OnCouponIdChanged();
                }
            }
        }
        private global::System.Int32 _CouponId;
        partial void OnCouponIdChanging(global::System.Int32 value);
        partial void OnCouponIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CouponLabel
        {
            get
            {
                return _CouponLabel;
            }
            set
            {
                OnCouponLabelChanging(value);
                ReportPropertyChanging("CouponLabel");
                _CouponLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CouponLabel");
                OnCouponLabelChanged();
            }
        }
        private global::System.String _CouponLabel;
        partial void OnCouponLabelChanging(global::System.String value);
        partial void OnCouponLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchasedFrom
        {
            get
            {
                return _PurchasedFrom;
            }
            set
            {
                OnPurchasedFromChanging(value);
                ReportPropertyChanging("PurchasedFrom");
                _PurchasedFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PurchasedFrom");
                OnPurchasedFromChanged();
            }
        }
        private global::System.String _PurchasedFrom;
        partial void OnPurchasedFromChanging(global::System.String value);
        partial void OnPurchasedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePurchased
        {
            get
            {
                return _DatePurchased;
            }
            set
            {
                OnDatePurchasedChanging(value);
                ReportPropertyChanging("DatePurchased");
                _DatePurchased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePurchased");
                OnDatePurchasedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePurchased;
        partial void OnDatePurchasedChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePurchasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CashValue
        {
            get
            {
                return _CashValue;
            }
            set
            {
                OnCashValueChanging(value);
                ReportPropertyChanging("CashValue");
                _CashValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashValue");
                OnCashValueChanged();
            }
        }
        private Nullable<global::System.Double> _CashValue;
        partial void OnCashValueChanging(Nullable<global::System.Double> value);
        partial void OnCashValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_coupon_transaction_coupon", "coupon_transaction")]
        public EntityCollection<CouponTransaction> CouponTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CouponTransaction>("ClearOffice.Fleet.Business.FK_coupon_transaction_coupon", "coupon_transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CouponTransaction>("ClearOffice.Fleet.Business.FK_coupon_transaction_coupon", "coupon_transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="CouponInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CouponInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CouponInfo object.
        /// </summary>
        /// <param name="couponId">Initial value of the CouponId property.</param>
        public static CouponInfo CreateCouponInfo(global::System.Int32 couponId)
        {
            CouponInfo couponInfo = new CouponInfo();
            couponInfo.CouponId = couponId;
            return couponInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CouponId
        {
            get
            {
                return _CouponId;
            }
            set
            {
                if (_CouponId != value)
                {
                    OnCouponIdChanging(value);
                    ReportPropertyChanging("CouponId");
                    _CouponId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CouponId");
                    OnCouponIdChanged();
                }
            }
        }
        private global::System.Int32 _CouponId;
        partial void OnCouponIdChanging(global::System.Int32 value);
        partial void OnCouponIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CouponLabel
        {
            get
            {
                return _CouponLabel;
            }
            set
            {
                OnCouponLabelChanging(value);
                ReportPropertyChanging("CouponLabel");
                _CouponLabel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CouponLabel");
                OnCouponLabelChanged();
            }
        }
        private global::System.String _CouponLabel;
        partial void OnCouponLabelChanging(global::System.String value);
        partial void OnCouponLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchasedFrom
        {
            get
            {
                return _PurchasedFrom;
            }
            set
            {
                OnPurchasedFromChanging(value);
                ReportPropertyChanging("PurchasedFrom");
                _PurchasedFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PurchasedFrom");
                OnPurchasedFromChanged();
            }
        }
        private global::System.String _PurchasedFrom;
        partial void OnPurchasedFromChanging(global::System.String value);
        partial void OnPurchasedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePurchased
        {
            get
            {
                return _DatePurchased;
            }
            set
            {
                OnDatePurchasedChanging(value);
                ReportPropertyChanging("DatePurchased");
                _DatePurchased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePurchased");
                OnDatePurchasedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePurchased;
        partial void OnDatePurchasedChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePurchasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CashValue
        {
            get
            {
                return _CashValue;
            }
            set
            {
                OnCashValueChanging(value);
                ReportPropertyChanging("CashValue");
                _CashValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashValue");
                OnCashValueChanged();
            }
        }
        private Nullable<global::System.Double> _CashValue;
        partial void OnCashValueChanging(Nullable<global::System.Double> value);
        partial void OnCashValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ConsumedCashAmount
        {
            get
            {
                return _ConsumedCashAmount;
            }
            set
            {
                OnConsumedCashAmountChanging(value);
                ReportPropertyChanging("ConsumedCashAmount");
                _ConsumedCashAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsumedCashAmount");
                OnConsumedCashAmountChanged();
            }
        }
        private Nullable<global::System.Double> _ConsumedCashAmount;
        partial void OnConsumedCashAmountChanging(Nullable<global::System.Double> value);
        partial void OnConsumedCashAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ConsumedValueAmount
        {
            get
            {
                return _ConsumedValueAmount;
            }
            set
            {
                OnConsumedValueAmountChanging(value);
                ReportPropertyChanging("ConsumedValueAmount");
                _ConsumedValueAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsumedValueAmount");
                OnConsumedValueAmountChanged();
            }
        }
        private Nullable<global::System.Double> _ConsumedValueAmount;
        partial void OnConsumedValueAmountChanging(Nullable<global::System.Double> value);
        partial void OnConsumedValueAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RemainingAmount
        {
            get
            {
                return _RemainingAmount;
            }
            set
            {
                OnRemainingAmountChanging(value);
                ReportPropertyChanging("RemainingAmount");
                _RemainingAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemainingAmount");
                OnRemainingAmountChanged();
            }
        }
        private Nullable<global::System.Double> _RemainingAmount;
        partial void OnRemainingAmountChanging(Nullable<global::System.Double> value);
        partial void OnRemainingAmountChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="CouponTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CouponTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CouponTransaction object.
        /// </summary>
        /// <param name="couponTransactionId">Initial value of the CouponTransactionId property.</param>
        public static CouponTransaction CreateCouponTransaction(global::System.Int32 couponTransactionId)
        {
            CouponTransaction couponTransaction = new CouponTransaction();
            couponTransaction.CouponTransactionId = couponTransactionId;
            return couponTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CouponTransactionId
        {
            get
            {
                return _CouponTransactionId;
            }
            set
            {
                if (_CouponTransactionId != value)
                {
                    OnCouponTransactionIdChanging(value);
                    ReportPropertyChanging("CouponTransactionId");
                    _CouponTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CouponTransactionId");
                    OnCouponTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _CouponTransactionId;
        partial void OnCouponTransactionIdChanging(global::System.Int32 value);
        partial void OnCouponTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CouponId
        {
            get
            {
                return _CouponId;
            }
            set
            {
                OnCouponIdChanging(value);
                ReportPropertyChanging("CouponId");
                _CouponId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CouponId");
                OnCouponIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CouponId;
        partial void OnCouponIdChanging(Nullable<global::System.Int32> value);
        partial void OnCouponIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleId;
        partial void OnVehicleIdChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FuelTypeId
        {
            get
            {
                return _FuelTypeId;
            }
            set
            {
                OnFuelTypeIdChanging(value);
                ReportPropertyChanging("FuelTypeId");
                _FuelTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelTypeId");
                OnFuelTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FuelTypeId;
        partial void OnFuelTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFuelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeafNo
        {
            get
            {
                return _LeafNo;
            }
            set
            {
                OnLeafNoChanging(value);
                ReportPropertyChanging("LeafNo");
                _LeafNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeafNo");
                OnLeafNoChanged();
            }
        }
        private global::System.String _LeafNo;
        partial void OnLeafNoChanging(global::System.String value);
        partial void OnLeafNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CashAmount
        {
            get
            {
                return _CashAmount;
            }
            set
            {
                OnCashAmountChanging(value);
                ReportPropertyChanging("CashAmount");
                _CashAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashAmount");
                OnCashAmountChanged();
            }
        }
        private Nullable<global::System.Double> _CashAmount;
        partial void OnCashAmountChanging(Nullable<global::System.Double> value);
        partial void OnCashAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ValueAmount
        {
            get
            {
                return _ValueAmount;
            }
            set
            {
                OnValueAmountChanging(value);
                ReportPropertyChanging("ValueAmount");
                _ValueAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueAmount");
                OnValueAmountChanged();
            }
        }
        private Nullable<global::System.Double> _ValueAmount;
        partial void OnValueAmountChanging(Nullable<global::System.Double> value);
        partial void OnValueAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransactionDate;
        partial void OnTransactionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriverName
        {
            get
            {
                return _DriverName;
            }
            set
            {
                OnDriverNameChanging(value);
                ReportPropertyChanging("DriverName");
                _DriverName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriverName");
                OnDriverNameChanged();
            }
        }
        private global::System.String _DriverName;
        partial void OnDriverNameChanging(global::System.String value);
        partial void OnDriverNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_coupon_transaction_coupon", "coupon")]
        public Coupon Coupon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coupon>("ClearOffice.Fleet.Business.FK_coupon_transaction_coupon", "coupon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coupon>("ClearOffice.Fleet.Business.FK_coupon_transaction_coupon", "coupon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Coupon> CouponReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Coupon>("ClearOffice.Fleet.Business.FK_coupon_transaction_coupon", "coupon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Coupon>("ClearOffice.Fleet.Business.FK_coupon_transaction_coupon", "coupon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_coupon_transaction_vehicle", "Vehicle")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_coupon_transaction_vehicle", "Vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_coupon_transaction_vehicle", "Vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_coupon_transaction_vehicle", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_coupon_transaction_vehicle", "Vehicle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="driver")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class driver : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new driver object.
        /// </summary>
        /// <param name="driver_id">Initial value of the driver_id property.</param>
        public static driver Createdriver(global::System.Int32 driver_id)
        {
            driver driver = new driver();
            driver.driver_id = driver_id;
            return driver;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 driver_id
        {
            get
            {
                return _driver_id;
            }
            set
            {
                if (_driver_id != value)
                {
                    Ondriver_idChanging(value);
                    ReportPropertyChanging("driver_id");
                    _driver_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("driver_id");
                    Ondriver_idChanged();
                }
            }
        }
        private global::System.Int32 _driver_id;
        partial void Ondriver_idChanging(global::System.Int32 value);
        partial void Ondriver_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String driver_name
        {
            get
            {
                return _driver_name;
            }
            set
            {
                Ondriver_nameChanging(value);
                ReportPropertyChanging("driver_name");
                _driver_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("driver_name");
                Ondriver_nameChanged();
            }
        }
        private global::System.String _driver_name;
        partial void Ondriver_nameChanging(global::System.String value);
        partial void Ondriver_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_driver", "fuel_lubricant_purchase")]
        public EntityCollection<fuel_lubricant_purchase> fuel_lubricant_purchase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fuel_lubricant_purchase>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_driver", "fuel_lubricant_purchase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fuel_lubricant_purchase>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_driver", "fuel_lubricant_purchase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Expense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Expense : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Expense object.
        /// </summary>
        /// <param name="expenseId">Initial value of the ExpenseId property.</param>
        public static Expense CreateExpense(global::System.Int32 expenseId)
        {
            Expense expense = new Expense();
            expense.ExpenseId = expenseId;
            return expense;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseId
        {
            get
            {
                return _ExpenseId;
            }
            set
            {
                if (_ExpenseId != value)
                {
                    OnExpenseIdChanging(value);
                    ReportPropertyChanging("ExpenseId");
                    _ExpenseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseId");
                    OnExpenseIdChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseId;
        partial void OnExpenseIdChanging(global::System.Int32 value);
        partial void OnExpenseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleId;
        partial void OnVehicleIdChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentTypeId
        {
            get
            {
                return _PaymentTypeId;
            }
            set
            {
                OnPaymentTypeIdChanging(value);
                ReportPropertyChanging("PaymentTypeId");
                _PaymentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeId");
                OnPaymentTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentTypeId;
        partial void OnPaymentTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDate;
        partial void OnPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Invoice
        {
            get
            {
                return _Invoice;
            }
            set
            {
                OnInvoiceChanging(value);
                ReportPropertyChanging("Invoice");
                _Invoice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Invoice");
                OnInvoiceChanged();
            }
        }
        private global::System.String _Invoice;
        partial void OnInvoiceChanging(global::System.String value);
        partial void OnInvoiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="form_no")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class form_no : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new form_no object.
        /// </summary>
        /// <param name="record_id">Initial value of the record_id property.</param>
        /// <param name="starting_no">Initial value of the starting_no property.</param>
        public static form_no Createform_no(global::System.Int32 record_id, global::System.String starting_no)
        {
            form_no form_no = new form_no();
            form_no.record_id = record_id;
            form_no.starting_no = starting_no;
            return form_no;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 record_id
        {
            get
            {
                return _record_id;
            }
            set
            {
                if (_record_id != value)
                {
                    Onrecord_idChanging(value);
                    ReportPropertyChanging("record_id");
                    _record_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("record_id");
                    Onrecord_idChanged();
                }
            }
        }
        private global::System.Int32 _record_id;
        partial void Onrecord_idChanging(global::System.Int32 value);
        partial void Onrecord_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String starting_no
        {
            get
            {
                return _starting_no;
            }
            set
            {
                Onstarting_noChanging(value);
                ReportPropertyChanging("starting_no");
                _starting_no = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("starting_no");
                Onstarting_noChanged();
            }
        }
        private global::System.String _starting_no;
        partial void Onstarting_noChanging(global::System.String value);
        partial void Onstarting_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="fuel_lubricant_purchase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fuel_lubricant_purchase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fuel_lubricant_purchase object.
        /// </summary>
        /// <param name="fuel_order_id">Initial value of the fuel_order_id property.</param>
        public static fuel_lubricant_purchase Createfuel_lubricant_purchase(global::System.Int32 fuel_order_id)
        {
            fuel_lubricant_purchase fuel_lubricant_purchase = new fuel_lubricant_purchase();
            fuel_lubricant_purchase.fuel_order_id = fuel_order_id;
            return fuel_lubricant_purchase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fuel_order_id
        {
            get
            {
                return _fuel_order_id;
            }
            set
            {
                if (_fuel_order_id != value)
                {
                    Onfuel_order_idChanging(value);
                    ReportPropertyChanging("fuel_order_id");
                    _fuel_order_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fuel_order_id");
                    Onfuel_order_idChanged();
                }
            }
        }
        private global::System.Int32 _fuel_order_id;
        partial void Onfuel_order_idChanging(global::System.Int32 value);
        partial void Onfuel_order_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> vehicle_id
        {
            get
            {
                return _vehicle_id;
            }
            set
            {
                Onvehicle_idChanging(value);
                ReportPropertyChanging("vehicle_id");
                _vehicle_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vehicle_id");
                Onvehicle_idChanged();
            }
        }
        private Nullable<global::System.Int32> _vehicle_id;
        partial void Onvehicle_idChanging(Nullable<global::System.Int32> value);
        partial void Onvehicle_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fuel_guage_indicator
        {
            get
            {
                return _fuel_guage_indicator;
            }
            set
            {
                Onfuel_guage_indicatorChanging(value);
                ReportPropertyChanging("fuel_guage_indicator");
                _fuel_guage_indicator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fuel_guage_indicator");
                Onfuel_guage_indicatorChanged();
            }
        }
        private Nullable<global::System.Int32> _fuel_guage_indicator;
        partial void Onfuel_guage_indicatorChanging(Nullable<global::System.Int32> value);
        partial void Onfuel_guage_indicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> prev_km_reading
        {
            get
            {
                return _prev_km_reading;
            }
            set
            {
                Onprev_km_readingChanging(value);
                ReportPropertyChanging("prev_km_reading");
                _prev_km_reading = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prev_km_reading");
                Onprev_km_readingChanged();
            }
        }
        private Nullable<global::System.Decimal> _prev_km_reading;
        partial void Onprev_km_readingChanging(Nullable<global::System.Decimal> value);
        partial void Onprev_km_readingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> prev_fuel_purchase
        {
            get
            {
                return _prev_fuel_purchase;
            }
            set
            {
                Onprev_fuel_purchaseChanging(value);
                ReportPropertyChanging("prev_fuel_purchase");
                _prev_fuel_purchase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("prev_fuel_purchase");
                Onprev_fuel_purchaseChanged();
            }
        }
        private Nullable<global::System.Decimal> _prev_fuel_purchase;
        partial void Onprev_fuel_purchaseChanging(Nullable<global::System.Decimal> value);
        partial void Onprev_fuel_purchaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> current_km_reading
        {
            get
            {
                return _current_km_reading;
            }
            set
            {
                Oncurrent_km_readingChanging(value);
                ReportPropertyChanging("current_km_reading");
                _current_km_reading = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("current_km_reading");
                Oncurrent_km_readingChanged();
            }
        }
        private Nullable<global::System.Decimal> _current_km_reading;
        partial void Oncurrent_km_readingChanging(Nullable<global::System.Decimal> value);
        partial void Oncurrent_km_readingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                Onorder_idChanging(value);
                ReportPropertyChanging("order_id");
                _order_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_id");
                Onorder_idChanged();
            }
        }
        private Nullable<global::System.Int32> _order_id;
        partial void Onorder_idChanging(Nullable<global::System.Int32> value);
        partial void Onorder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fuel_station_id
        {
            get
            {
                return _fuel_station_id;
            }
            set
            {
                Onfuel_station_idChanging(value);
                ReportPropertyChanging("fuel_station_id");
                _fuel_station_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fuel_station_id");
                Onfuel_station_idChanged();
            }
        }
        private Nullable<global::System.Int32> _fuel_station_id;
        partial void Onfuel_station_idChanging(Nullable<global::System.Int32> value);
        partial void Onfuel_station_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _quantity;
        partial void OnquantityChanging(Nullable<global::System.Decimal> value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> purchase_date
        {
            get
            {
                return _purchase_date;
            }
            set
            {
                Onpurchase_dateChanging(value);
                ReportPropertyChanging("purchase_date");
                _purchase_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("purchase_date");
                Onpurchase_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _purchase_date;
        partial void Onpurchase_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onpurchase_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String form_no
        {
            get
            {
                return _form_no;
            }
            set
            {
                Onform_noChanging(value);
                ReportPropertyChanging("form_no");
                _form_no = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("form_no");
                Onform_noChanged();
            }
        }
        private global::System.String _form_no;
        partial void Onform_noChanging(global::System.String value);
        partial void Onform_noChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> difference_km
        {
            get
            {
                return _difference_km;
            }
            set
            {
                Ondifference_kmChanging(value);
                ReportPropertyChanging("difference_km");
                _difference_km = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("difference_km");
                Ondifference_kmChanged();
            }
        }
        private Nullable<global::System.Decimal> _difference_km;
        partial void Ondifference_kmChanging(Nullable<global::System.Decimal> value);
        partial void Ondifference_kmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> consumption
        {
            get
            {
                return _consumption;
            }
            set
            {
                OnconsumptionChanging(value);
                ReportPropertyChanging("consumption");
                _consumption = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("consumption");
                OnconsumptionChanged();
            }
        }
        private Nullable<global::System.Decimal> _consumption;
        partial void OnconsumptionChanging(Nullable<global::System.Decimal> value);
        partial void OnconsumptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPrevious
        {
            get
            {
                return _isPrevious;
            }
            set
            {
                OnisPreviousChanging(value);
                ReportPropertyChanging("isPrevious");
                _isPrevious = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPrevious");
                OnisPreviousChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPrevious;
        partial void OnisPreviousChanging(Nullable<global::System.Boolean> value);
        partial void OnisPreviousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> driver_id
        {
            get
            {
                return _driver_id;
            }
            set
            {
                Ondriver_idChanging(value);
                ReportPropertyChanging("driver_id");
                _driver_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("driver_id");
                Ondriver_idChanged();
            }
        }
        private Nullable<global::System.Int32> _driver_id;
        partial void Ondriver_idChanging(Nullable<global::System.Int32> value);
        partial void Ondriver_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> reqular_quantity
        {
            get
            {
                return _reqular_quantity;
            }
            set
            {
                Onreqular_quantityChanging(value);
                ReportPropertyChanging("reqular_quantity");
                _reqular_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reqular_quantity");
                Onreqular_quantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _reqular_quantity;
        partial void Onreqular_quantityChanging(Nullable<global::System.Decimal> value);
        partial void Onreqular_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> regular_amount
        {
            get
            {
                return _regular_amount;
            }
            set
            {
                Onregular_amountChanging(value);
                ReportPropertyChanging("regular_amount");
                _regular_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("regular_amount");
                Onregular_amountChanged();
            }
        }
        private Nullable<global::System.Decimal> _regular_amount;
        partial void Onregular_amountChanging(Nullable<global::System.Decimal> value);
        partial void Onregular_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> gas_oil_quantity
        {
            get
            {
                return _gas_oil_quantity;
            }
            set
            {
                Ongas_oil_quantityChanging(value);
                ReportPropertyChanging("gas_oil_quantity");
                _gas_oil_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gas_oil_quantity");
                Ongas_oil_quantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _gas_oil_quantity;
        partial void Ongas_oil_quantityChanging(Nullable<global::System.Decimal> value);
        partial void Ongas_oil_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> gas_oil_amount
        {
            get
            {
                return _gas_oil_amount;
            }
            set
            {
                Ongas_oil_amountChanging(value);
                ReportPropertyChanging("gas_oil_amount");
                _gas_oil_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gas_oil_amount");
                Ongas_oil_amountChanged();
            }
        }
        private Nullable<global::System.Decimal> _gas_oil_amount;
        partial void Ongas_oil_amountChanging(Nullable<global::System.Decimal> value);
        partial void Ongas_oil_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> engine_oil_quantity
        {
            get
            {
                return _engine_oil_quantity;
            }
            set
            {
                Onengine_oil_quantityChanging(value);
                ReportPropertyChanging("engine_oil_quantity");
                _engine_oil_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("engine_oil_quantity");
                Onengine_oil_quantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _engine_oil_quantity;
        partial void Onengine_oil_quantityChanging(Nullable<global::System.Decimal> value);
        partial void Onengine_oil_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> engine_oil_amount
        {
            get
            {
                return _engine_oil_amount;
            }
            set
            {
                Onengine_oil_amountChanging(value);
                ReportPropertyChanging("engine_oil_amount");
                _engine_oil_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("engine_oil_amount");
                Onengine_oil_amountChanged();
            }
        }
        private Nullable<global::System.Decimal> _engine_oil_amount;
        partial void Onengine_oil_amountChanging(Nullable<global::System.Decimal> value);
        partial void Onengine_oil_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> grease_quantity
        {
            get
            {
                return _grease_quantity;
            }
            set
            {
                Ongrease_quantityChanging(value);
                ReportPropertyChanging("grease_quantity");
                _grease_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("grease_quantity");
                Ongrease_quantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _grease_quantity;
        partial void Ongrease_quantityChanging(Nullable<global::System.Decimal> value);
        partial void Ongrease_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> grease_amount
        {
            get
            {
                return _grease_amount;
            }
            set
            {
                Ongrease_amountChanging(value);
                ReportPropertyChanging("grease_amount");
                _grease_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("grease_amount");
                Ongrease_amountChanged();
            }
        }
        private Nullable<global::System.Decimal> _grease_amount;
        partial void Ongrease_amountChanging(Nullable<global::System.Decimal> value);
        partial void Ongrease_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> washing_quantity
        {
            get
            {
                return _washing_quantity;
            }
            set
            {
                Onwashing_quantityChanging(value);
                ReportPropertyChanging("washing_quantity");
                _washing_quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("washing_quantity");
                Onwashing_quantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _washing_quantity;
        partial void Onwashing_quantityChanging(Nullable<global::System.Decimal> value);
        partial void Onwashing_quantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> washing_amount
        {
            get
            {
                return _washing_amount;
            }
            set
            {
                Onwashing_amountChanging(value);
                ReportPropertyChanging("washing_amount");
                _washing_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("washing_amount");
                Onwashing_amountChanged();
            }
        }
        private Nullable<global::System.Decimal> _washing_amount;
        partial void Onwashing_amountChanging(Nullable<global::System.Decimal> value);
        partial void Onwashing_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> order_status
        {
            get
            {
                return _order_status;
            }
            set
            {
                Onorder_statusChanging(value);
                ReportPropertyChanging("order_status");
                _order_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("order_status");
                Onorder_statusChanged();
            }
        }
        private Nullable<global::System.Int32> _order_status;
        partial void Onorder_statusChanging(Nullable<global::System.Int32> value);
        partial void Onorder_statusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_driver", "driver")]
        public driver driver
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<driver>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_driver", "driver").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<driver>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_driver", "driver").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<driver> driverReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<driver>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_driver", "driver");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<driver>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_driver", "driver", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_order", "order_type")]
        public order_type order_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<order_type>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_order", "order_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<order_type>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_order", "order_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<order_type> order_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<order_type>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_order", "order_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<order_type>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_order", "order_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_station", "fuel_station")]
        public fuel_station fuel_station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fuel_station>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_station", "fuel_station").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fuel_station>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_station", "fuel_station").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<fuel_station> fuel_stationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fuel_station>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_station", "fuel_station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<fuel_station>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_station", "fuel_station", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_vehicle", "vehicle")]
        public Vehicle vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_vehicle", "vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_vehicle", "vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> vehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_vehicle", "vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_vehicle", "vehicle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="fuel_station")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fuel_station : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fuel_station object.
        /// </summary>
        /// <param name="fuel_station_id">Initial value of the fuel_station_id property.</param>
        public static fuel_station Createfuel_station(global::System.Int32 fuel_station_id)
        {
            fuel_station fuel_station = new fuel_station();
            fuel_station.fuel_station_id = fuel_station_id;
            return fuel_station;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fuel_station_id
        {
            get
            {
                return _fuel_station_id;
            }
            set
            {
                if (_fuel_station_id != value)
                {
                    Onfuel_station_idChanging(value);
                    ReportPropertyChanging("fuel_station_id");
                    _fuel_station_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fuel_station_id");
                    Onfuel_station_idChanged();
                }
            }
        }
        private global::System.Int32 _fuel_station_id;
        partial void Onfuel_station_idChanging(global::System.Int32 value);
        partial void Onfuel_station_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String station_name
        {
            get
            {
                return _station_name;
            }
            set
            {
                Onstation_nameChanging(value);
                ReportPropertyChanging("station_name");
                _station_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("station_name");
                Onstation_nameChanged();
            }
        }
        private global::System.String _station_name;
        partial void Onstation_nameChanging(global::System.String value);
        partial void Onstation_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_station", "fuel_lubricant_purchase")]
        public EntityCollection<fuel_lubricant_purchase> fuel_lubricant_purchase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fuel_lubricant_purchase>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_station", "fuel_lubricant_purchase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fuel_lubricant_purchase>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_station", "fuel_lubricant_purchase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="FuelLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FuelLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FuelLog object.
        /// </summary>
        /// <param name="fuelLogId">Initial value of the FuelLogId property.</param>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static FuelLog CreateFuelLog(global::System.Int32 fuelLogId, global::System.Int32 vehicleId)
        {
            FuelLog fuelLog = new FuelLog();
            fuelLog.FuelLogId = fuelLogId;
            fuelLog.VehicleId = vehicleId;
            return fuelLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FuelLogId
        {
            get
            {
                return _FuelLogId;
            }
            set
            {
                if (_FuelLogId != value)
                {
                    OnFuelLogIdChanging(value);
                    ReportPropertyChanging("FuelLogId");
                    _FuelLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FuelLogId");
                    OnFuelLogIdChanged();
                }
            }
        }
        private global::System.Int32 _FuelLogId;
        partial void OnFuelLogIdChanging(global::System.Int32 value);
        partial void OnFuelLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FilledDate
        {
            get
            {
                return _FilledDate;
            }
            set
            {
                OnFilledDateChanging(value);
                ReportPropertyChanging("FilledDate");
                _FilledDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilledDate");
                OnFilledDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FilledDate;
        partial void OnFilledDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFilledDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastOdometer
        {
            get
            {
                return _LastOdometer;
            }
            set
            {
                OnLastOdometerChanging(value);
                ReportPropertyChanging("LastOdometer");
                _LastOdometer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastOdometer");
                OnLastOdometerChanged();
            }
        }
        private Nullable<global::System.Double> _LastOdometer;
        partial void OnLastOdometerChanging(Nullable<global::System.Double> value);
        partial void OnLastOdometerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CurrentOdometer
        {
            get
            {
                return _CurrentOdometer;
            }
            set
            {
                OnCurrentOdometerChanging(value);
                ReportPropertyChanging("CurrentOdometer");
                _CurrentOdometer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentOdometer");
                OnCurrentOdometerChanged();
            }
        }
        private Nullable<global::System.Double> _CurrentOdometer;
        partial void OnCurrentOdometerChanging(Nullable<global::System.Double> value);
        partial void OnCurrentOdometerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistanceCovered
        {
            get
            {
                return _DistanceCovered;
            }
            set
            {
                OnDistanceCoveredChanging(value);
                ReportPropertyChanging("DistanceCovered");
                _DistanceCovered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistanceCovered");
                OnDistanceCoveredChanged();
            }
        }
        private Nullable<global::System.Int32> _DistanceCovered;
        partial void OnDistanceCoveredChanging(Nullable<global::System.Int32> value);
        partial void OnDistanceCoveredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FuelAmount
        {
            get
            {
                return _FuelAmount;
            }
            set
            {
                OnFuelAmountChanging(value);
                ReportPropertyChanging("FuelAmount");
                _FuelAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelAmount");
                OnFuelAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _FuelAmount;
        partial void OnFuelAmountChanging(Nullable<global::System.Int32> value);
        partial void OnFuelAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DriverId
        {
            get
            {
                return _DriverId;
            }
            set
            {
                OnDriverIdChanging(value);
                ReportPropertyChanging("DriverId");
                _DriverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DriverId");
                OnDriverIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DriverId;
        partial void OnDriverIdChanging(Nullable<global::System.Int32> value);
        partial void OnDriverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNo
        {
            get
            {
                return _AccountNo;
            }
            set
            {
                OnAccountNoChanging(value);
                ReportPropertyChanging("AccountNo");
                _AccountNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNo");
                OnAccountNoChanged();
            }
        }
        private global::System.String _AccountNo;
        partial void OnAccountNoChanging(global::System.String value);
        partial void OnAccountNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalCost
        {
            get
            {
                return _TotalCost;
            }
            set
            {
                OnTotalCostChanging(value);
                ReportPropertyChanging("TotalCost");
                _TotalCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCost");
                OnTotalCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalCost;
        partial void OnTotalCostChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalCostChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="InsurancePolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsurancePolicy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsurancePolicy object.
        /// </summary>
        /// <param name="historyId">Initial value of the HistoryId property.</param>
        public static InsurancePolicy CreateInsurancePolicy(global::System.Int32 historyId)
        {
            InsurancePolicy insurancePolicy = new InsurancePolicy();
            insurancePolicy.HistoryId = historyId;
            return insurancePolicy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HistoryId
        {
            get
            {
                return _HistoryId;
            }
            set
            {
                if (_HistoryId != value)
                {
                    OnHistoryIdChanging(value);
                    ReportPropertyChanging("HistoryId");
                    _HistoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistoryId");
                    OnHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _HistoryId;
        partial void OnHistoryIdChanging(global::System.Int32 value);
        partial void OnHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleId;
        partial void OnVehicleIdChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNo
        {
            get
            {
                return _PolicyNo;
            }
            set
            {
                OnPolicyNoChanging(value);
                ReportPropertyChanging("PolicyNo");
                _PolicyNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PolicyNo");
                OnPolicyNoChanged();
            }
        }
        private global::System.String _PolicyNo;
        partial void OnPolicyNoChanging(global::System.String value);
        partial void OnPolicyNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CoverageLimit
        {
            get
            {
                return _CoverageLimit;
            }
            set
            {
                OnCoverageLimitChanging(value);
                ReportPropertyChanging("CoverageLimit");
                _CoverageLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoverageLimit");
                OnCoverageLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CoverageLimit;
        partial void OnCoverageLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnCoverageLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Premium
        {
            get
            {
                return _Premium;
            }
            set
            {
                OnPremiumChanging(value);
                ReportPropertyChanging("Premium");
                _Premium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Premium");
                OnPremiumChanged();
            }
        }
        private Nullable<global::System.Decimal> _Premium;
        partial void OnPremiumChanging(Nullable<global::System.Decimal> value);
        partial void OnPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInsured
        {
            get
            {
                return _DateInsured;
            }
            set
            {
                OnDateInsuredChanging(value);
                ReportPropertyChanging("DateInsured");
                _DateInsured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInsured");
                OnDateInsuredChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInsured;
        partial void OnDateInsuredChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentName
        {
            get
            {
                return _AgentName;
            }
            set
            {
                OnAgentNameChanging(value);
                ReportPropertyChanging("AgentName");
                _AgentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgentName");
                OnAgentNameChanged();
            }
        }
        private global::System.String _AgentName;
        partial void OnAgentNameChanging(global::System.String value);
        partial void OnAgentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentTelephone
        {
            get
            {
                return _AgentTelephone;
            }
            set
            {
                OnAgentTelephoneChanging(value);
                ReportPropertyChanging("AgentTelephone");
                _AgentTelephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgentTelephone");
                OnAgentTelephoneChanged();
            }
        }
        private global::System.String _AgentTelephone;
        partial void OnAgentTelephoneChanging(global::System.String value);
        partial void OnAgentTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentEmail
        {
            get
            {
                return _AgentEmail;
            }
            set
            {
                OnAgentEmailChanging(value);
                ReportPropertyChanging("AgentEmail");
                _AgentEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgentEmail");
                OnAgentEmailChanged();
            }
        }
        private global::System.String _AgentEmail;
        partial void OnAgentEmailChanging(global::System.String value);
        partial void OnAgentEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyType;
        partial void OnPolicyTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Lookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lookup object.
        /// </summary>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        public static Lookup CreateLookup(global::System.Int32 lookupId)
        {
            Lookup lookup = new Lookup();
            lookup.LookupId = lookupId;
            return lookup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                if (_LookupId != value)
                {
                    OnLookupIdChanging(value);
                    ReportPropertyChanging("LookupId");
                    _LookupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupId");
                    OnLookupIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupId;
        partial void OnLookupIdChanging(global::System.Int32 value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LookupName
        {
            get
            {
                return _LookupName;
            }
            set
            {
                OnLookupNameChanging(value);
                ReportPropertyChanging("LookupName");
                _LookupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LookupName");
                OnLookupNameChanged();
            }
        }
        private global::System.String _LookupName;
        partial void OnLookupNameChanging(global::System.String value);
        partial void OnLookupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_lookup_item_lookup", "lookup_item")]
        public EntityCollection<LookupItem> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LookupItem>("ClearOffice.Fleet.Business.FK_lookup_item_lookup", "lookup_item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LookupItem>("ClearOffice.Fleet.Business.FK_lookup_item_lookup", "lookup_item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="LookupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LookupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LookupItem object.
        /// </summary>
        /// <param name="lookupItemId">Initial value of the LookupItemId property.</param>
        public static LookupItem CreateLookupItem(global::System.Int32 lookupItemId)
        {
            LookupItem lookupItem = new LookupItem();
            lookupItem.LookupItemId = lookupItemId;
            return lookupItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupItemId
        {
            get
            {
                return _LookupItemId;
            }
            set
            {
                if (_LookupItemId != value)
                {
                    OnLookupItemIdChanging(value);
                    ReportPropertyChanging("LookupItemId");
                    _LookupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupItemId");
                    OnLookupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupItemId;
        partial void OnLookupItemIdChanging(global::System.Int32 value);
        partial void OnLookupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LookupId;
        partial void OnLookupIdChanging(Nullable<global::System.Int32> value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Maintanance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Maintanance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Maintanance object.
        /// </summary>
        /// <param name="maintenanceId">Initial value of the MaintenanceId property.</param>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static Maintanance CreateMaintanance(global::System.Int32 maintenanceId, global::System.Int32 vehicleId)
        {
            Maintanance maintanance = new Maintanance();
            maintanance.MaintenanceId = maintenanceId;
            maintanance.VehicleId = vehicleId;
            return maintanance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaintenanceId
        {
            get
            {
                return _MaintenanceId;
            }
            set
            {
                if (_MaintenanceId != value)
                {
                    OnMaintenanceIdChanging(value);
                    ReportPropertyChanging("MaintenanceId");
                    _MaintenanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaintenanceId");
                    OnMaintenanceIdChanged();
                }
            }
        }
        private global::System.Int32 _MaintenanceId;
        partial void OnMaintenanceIdChanging(global::System.Int32 value);
        partial void OnMaintenanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletionDate
        {
            get
            {
                return _CompletionDate;
            }
            set
            {
                OnCompletionDateChanging(value);
                ReportPropertyChanging("CompletionDate");
                _CompletionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletionDate");
                OnCompletionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletionDate;
        partial void OnCompletionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceRequestNo
        {
            get
            {
                return _ServiceRequestNo;
            }
            set
            {
                OnServiceRequestNoChanging(value);
                ReportPropertyChanging("ServiceRequestNo");
                _ServiceRequestNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServiceRequestNo");
                OnServiceRequestNoChanged();
            }
        }
        private global::System.String _ServiceRequestNo;
        partial void OnServiceRequestNoChanging(global::System.String value);
        partial void OnServiceRequestNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ServicedByTypeId
        {
            get
            {
                return _ServicedByTypeId;
            }
            set
            {
                OnServicedByTypeIdChanging(value);
                ReportPropertyChanging("ServicedByTypeId");
                _ServicedByTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServicedByTypeId");
                OnServicedByTypeIdChanged();
            }
        }
        private Nullable<global::System.Boolean> _ServicedByTypeId;
        partial void OnServicedByTypeIdChanging(Nullable<global::System.Boolean> value);
        partial void OnServicedByTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServicedBy
        {
            get
            {
                return _ServicedBy;
            }
            set
            {
                OnServicedByChanging(value);
                ReportPropertyChanging("ServicedBy");
                _ServicedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServicedBy");
                OnServicedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ServicedBy;
        partial void OnServicedByChanging(Nullable<global::System.Int32> value);
        partial void OnServicedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNo
        {
            get
            {
                return _AccountNo;
            }
            set
            {
                OnAccountNoChanging(value);
                ReportPropertyChanging("AccountNo");
                _AccountNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNo");
                OnAccountNoChanged();
            }
        }
        private global::System.String _AccountNo;
        partial void OnAccountNoChanging(global::System.String value);
        partial void OnAccountNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceTypeId
        {
            get
            {
                return _ServiceTypeId;
            }
            set
            {
                OnServiceTypeIdChanging(value);
                ReportPropertyChanging("ServiceTypeId");
                _ServiceTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceTypeId");
                OnServiceTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceTypeId;
        partial void OnServiceTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private Nullable<global::System.Int32> _status;
        partial void OnstatusChanging(Nullable<global::System.Int32> value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ClosedDate
        {
            get
            {
                return _ClosedDate;
            }
            set
            {
                OnClosedDateChanging(value);
                ReportPropertyChanging("ClosedDate");
                _ClosedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClosedDate");
                OnClosedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ClosedDate;
        partial void OnClosedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnClosedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClosedBy
        {
            get
            {
                return _ClosedBy;
            }
            set
            {
                OnClosedByChanging(value);
                ReportPropertyChanging("ClosedBy");
                _ClosedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClosedBy");
                OnClosedByChanged();
            }
        }
        private global::System.String _ClosedBy;
        partial void OnClosedByChanging(global::System.String value);
        partial void OnClosedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClosingRemark
        {
            get
            {
                return _ClosingRemark;
            }
            set
            {
                OnClosingRemarkChanging(value);
                ReportPropertyChanging("ClosingRemark");
                _ClosingRemark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClosingRemark");
                OnClosingRemarkChanged();
            }
        }
        private global::System.String _ClosingRemark;
        partial void OnClosingRemarkChanging(global::System.String value);
        partial void OnClosingRemarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_maintana_reference_vendor", "vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ClearOffice.Fleet.Business.fk_maintana_reference_vendor", "vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ClearOffice.Fleet.Business.fk_maintana_reference_vendor", "vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ClearOffice.Fleet.Business.fk_maintana_reference_vendor", "vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("ClearOffice.Fleet.Business.fk_maintana_reference_vendor", "vendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_maintanance_vehicle", "vehicle")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_maintanance_vehicle", "vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_maintanance_vehicle", "vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_maintanance_vehicle", "vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("ClearOffice.Fleet.Business.FK_maintanance_vehicle", "vehicle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_maintena_ref_28_maintana", "maintenance_part")]
        public EntityCollection<MaintenancePart> MaintenanceParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaintenancePart>("ClearOffice.Fleet.Business.fk_maintena_ref_28_maintana", "maintenance_part");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaintenancePart>("ClearOffice.Fleet.Business.fk_maintena_ref_28_maintana", "maintenance_part", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_maintena_reference_maintana", "maintenance_activity")]
        public EntityCollection<MaintenanceActivity> MaintenanceActivities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaintenanceActivity>("ClearOffice.Fleet.Business.fk_maintena_reference_maintana", "maintenance_activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaintenanceActivity>("ClearOffice.Fleet.Business.fk_maintena_reference_maintana", "maintenance_activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "maintenance_expense", "expense")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("ClearOffice.Fleet.Business.maintenance_expense", "expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("ClearOffice.Fleet.Business.maintenance_expense", "expense", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="MaintenanceActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaintenanceActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaintenanceActivity object.
        /// </summary>
        /// <param name="activityId">Initial value of the ActivityId property.</param>
        public static MaintenanceActivity CreateMaintenanceActivity(global::System.Int32 activityId)
        {
            MaintenanceActivity maintenanceActivity = new MaintenanceActivity();
            maintenanceActivity.ActivityId = activityId;
            return maintenanceActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityId
        {
            get
            {
                return _ActivityId;
            }
            set
            {
                if (_ActivityId != value)
                {
                    OnActivityIdChanging(value);
                    ReportPropertyChanging("ActivityId");
                    _ActivityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityId");
                    OnActivityIdChanged();
                }
            }
        }
        private global::System.Int32 _ActivityId;
        partial void OnActivityIdChanging(global::System.Int32 value);
        partial void OnActivityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaintenanceId
        {
            get
            {
                return _MaintenanceId;
            }
            set
            {
                OnMaintenanceIdChanging(value);
                ReportPropertyChanging("MaintenanceId");
                _MaintenanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaintenanceId");
                OnMaintenanceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MaintenanceId;
        partial void OnMaintenanceIdChanging(Nullable<global::System.Int32> value);
        partial void OnMaintenanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PerformedBy
        {
            get
            {
                return _PerformedBy;
            }
            set
            {
                OnPerformedByChanging(value);
                ReportPropertyChanging("PerformedBy");
                _PerformedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerformedBy");
                OnPerformedByChanged();
            }
        }
        private Nullable<global::System.Boolean> _PerformedBy;
        partial void OnPerformedByChanging(Nullable<global::System.Boolean> value);
        partial void OnPerformedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Performer
        {
            get
            {
                return _Performer;
            }
            set
            {
                OnPerformerChanging(value);
                ReportPropertyChanging("Performer");
                _Performer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Performer");
                OnPerformerChanged();
            }
        }
        private global::System.String _Performer;
        partial void OnPerformerChanging(global::System.String value);
        partial void OnPerformerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LaborUnits
        {
            get
            {
                return _LaborUnits;
            }
            set
            {
                OnLaborUnitsChanging(value);
                ReportPropertyChanging("LaborUnits");
                _LaborUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaborUnits");
                OnLaborUnitsChanged();
            }
        }
        private Nullable<global::System.Int32> _LaborUnits;
        partial void OnLaborUnitsChanging(Nullable<global::System.Int32> value);
        partial void OnLaborUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitCost
        {
            get
            {
                return _UnitCost;
            }
            set
            {
                OnUnitCostChanging(value);
                ReportPropertyChanging("UnitCost");
                _UnitCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitCost");
                OnUnitCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitCost;
        partial void OnUnitCostChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActivityTypeId
        {
            get
            {
                return _ActivityTypeId;
            }
            set
            {
                OnActivityTypeIdChanging(value);
                ReportPropertyChanging("ActivityTypeId");
                _ActivityTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTypeId");
                OnActivityTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ActivityTypeId;
        partial void OnActivityTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnActivityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_maintena_reference_maintana", "maintanance")]
        public Maintanance maintanance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_reference_maintana", "maintanance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_reference_maintana", "maintanance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Maintanance> maintananceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_reference_maintana", "maintanance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_reference_maintana", "maintanance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="MaintenanceInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaintenanceInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaintenanceInfo object.
        /// </summary>
        /// <param name="maintenanceId">Initial value of the MaintenanceId property.</param>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static MaintenanceInfo CreateMaintenanceInfo(global::System.Int32 maintenanceId, global::System.Int32 vehicleId)
        {
            MaintenanceInfo maintenanceInfo = new MaintenanceInfo();
            maintenanceInfo.MaintenanceId = maintenanceId;
            maintenanceInfo.VehicleId = vehicleId;
            return maintenanceInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaintenanceId
        {
            get
            {
                return _MaintenanceId;
            }
            set
            {
                if (_MaintenanceId != value)
                {
                    OnMaintenanceIdChanging(value);
                    ReportPropertyChanging("MaintenanceId");
                    _MaintenanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaintenanceId");
                    OnMaintenanceIdChanged();
                }
            }
        }
        private global::System.Int32 _MaintenanceId;
        partial void OnMaintenanceIdChanging(global::System.Int32 value);
        partial void OnMaintenanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                if (_VehicleId != value)
                {
                    OnVehicleIdChanging(value);
                    ReportPropertyChanging("VehicleId");
                    _VehicleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VehicleId");
                    OnVehicleIdChanged();
                }
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlateNumber
        {
            get
            {
                return _PlateNumber;
            }
            set
            {
                OnPlateNumberChanging(value);
                ReportPropertyChanging("PlateNumber");
                _PlateNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlateNumber");
                OnPlateNumberChanged();
            }
        }
        private global::System.String _PlateNumber;
        partial void OnPlateNumberChanging(global::System.String value);
        partial void OnPlateNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceRequestNo
        {
            get
            {
                return _ServiceRequestNo;
            }
            set
            {
                OnServiceRequestNoChanging(value);
                ReportPropertyChanging("ServiceRequestNo");
                _ServiceRequestNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServiceRequestNo");
                OnServiceRequestNoChanged();
            }
        }
        private global::System.String _ServiceRequestNo;
        partial void OnServiceRequestNoChanging(global::System.String value);
        partial void OnServiceRequestNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletionDate
        {
            get
            {
                return _CompletionDate;
            }
            set
            {
                OnCompletionDateChanging(value);
                ReportPropertyChanging("CompletionDate");
                _CompletionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletionDate");
                OnCompletionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletionDate;
        partial void OnCompletionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPartPrice
        {
            get
            {
                return _TotalPartPrice;
            }
            set
            {
                OnTotalPartPriceChanging(value);
                ReportPropertyChanging("TotalPartPrice");
                _TotalPartPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPartPrice");
                OnTotalPartPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPartPrice;
        partial void OnTotalPartPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPartPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalActivityPrice
        {
            get
            {
                return _TotalActivityPrice;
            }
            set
            {
                OnTotalActivityPriceChanging(value);
                ReportPropertyChanging("TotalActivityPrice");
                _TotalActivityPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalActivityPrice");
                OnTotalActivityPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalActivityPrice;
        partial void OnTotalActivityPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalActivityPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalExpenseAmount
        {
            get
            {
                return _TotalExpenseAmount;
            }
            set
            {
                OnTotalExpenseAmountChanging(value);
                ReportPropertyChanging("TotalExpenseAmount");
                _TotalExpenseAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalExpenseAmount");
                OnTotalExpenseAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalExpenseAmount;
        partial void OnTotalExpenseAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalExpenseAmountChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="MaintenancePart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaintenancePart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaintenancePart object.
        /// </summary>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        public static MaintenancePart CreateMaintenancePart(global::System.Int32 itemId)
        {
            MaintenancePart maintenancePart = new MaintenancePart();
            maintenancePart.ItemId = itemId;
            return maintenancePart;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                if (_ItemId != value)
                {
                    OnItemIdChanging(value);
                    ReportPropertyChanging("ItemId");
                    _ItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemId");
                    OnItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaintenanceId
        {
            get
            {
                return _MaintenanceId;
            }
            set
            {
                OnMaintenanceIdChanging(value);
                ReportPropertyChanging("MaintenanceId");
                _MaintenanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaintenanceId");
                OnMaintenanceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MaintenanceId;
        partial void OnMaintenanceIdChanging(Nullable<global::System.Int32> value);
        partial void OnMaintenanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartNo
        {
            get
            {
                return _PartNo;
            }
            set
            {
                OnPartNoChanging(value);
                ReportPropertyChanging("PartNo");
                _PartNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartNo");
                OnPartNoChanged();
            }
        }
        private global::System.String _PartNo;
        partial void OnPartNoChanging(global::System.String value);
        partial void OnPartNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReplacedDate
        {
            get
            {
                return _ReplacedDate;
            }
            set
            {
                OnReplacedDateChanging(value);
                ReportPropertyChanging("ReplacedDate");
                _ReplacedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplacedDate");
                OnReplacedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReplacedDate;
        partial void OnReplacedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReplacedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_maintena_ref_28_maintana", "maintanance")]
        public Maintanance maintanance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_ref_28_maintana", "maintanance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_ref_28_maintana", "maintanance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Maintanance> maintananceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_ref_28_maintana", "maintanance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Maintanance>("ClearOffice.Fleet.Business.fk_maintena_ref_28_maintana", "maintanance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="order_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class order_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new order_type object.
        /// </summary>
        /// <param name="order_id">Initial value of the order_id property.</param>
        public static order_type Createorder_type(global::System.Int32 order_id)
        {
            order_type order_type = new order_type();
            order_type.order_id = order_id;
            return order_type;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                if (_order_id != value)
                {
                    Onorder_idChanging(value);
                    ReportPropertyChanging("order_id");
                    _order_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("order_id");
                    Onorder_idChanged();
                }
            }
        }
        private global::System.Int32 _order_id;
        partial void Onorder_idChanging(global::System.Int32 value);
        partial void Onorder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String order_name
        {
            get
            {
                return _order_name;
            }
            set
            {
                Onorder_nameChanging(value);
                ReportPropertyChanging("order_name");
                _order_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("order_name");
                Onorder_nameChanged();
            }
        }
        private global::System.String _order_name;
        partial void Onorder_nameChanging(global::System.String value);
        partial void Onorder_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] data_version
        {
            get
            {
                return StructuralObject.GetValidValue(_data_version);
            }
            set
            {
                Ondata_versionChanging(value);
                ReportPropertyChanging("data_version");
                _data_version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("data_version");
                Ondata_versionChanged();
            }
        }
        private global::System.Byte[] _data_version;
        partial void Ondata_versionChanging(global::System.Byte[] value);
        partial void Ondata_versionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_lubricant_purchase_ref_order", "fuel_lubricant_purchase")]
        public EntityCollection<fuel_lubricant_purchase> fuel_lubricant_purchase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fuel_lubricant_purchase>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_order", "fuel_lubricant_purchase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fuel_lubricant_purchase>("ClearOffice.Fleet.Business.fk_fuel_lubricant_purchase_ref_order", "fuel_lubricant_purchase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Tire")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tire : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tire object.
        /// </summary>
        /// <param name="tireId">Initial value of the TireId property.</param>
        public static Tire CreateTire(global::System.Int32 tireId)
        {
            Tire tire = new Tire();
            tire.TireId = tireId;
            return tire;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TireId
        {
            get
            {
                return _TireId;
            }
            set
            {
                if (_TireId != value)
                {
                    OnTireIdChanging(value);
                    ReportPropertyChanging("TireId");
                    _TireId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TireId");
                    OnTireIdChanged();
                }
            }
        }
        private global::System.Int32 _TireId;
        partial void OnTireIdChanging(global::System.Int32 value);
        partial void OnTireIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private Nullable<global::System.Int32> _Brand;
        partial void OnBrandChanging(Nullable<global::System.Int32> value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Size;
        partial void OnSizeChanging(Nullable<global::System.Int32> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TireType
        {
            get
            {
                return _TireType;
            }
            set
            {
                OnTireTypeChanging(value);
                ReportPropertyChanging("TireType");
                _TireType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TireType");
                OnTireTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _TireType;
        partial void OnTireTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTireTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchasedDate
        {
            get
            {
                return _PurchasedDate;
            }
            set
            {
                OnPurchasedDateChanging(value);
                ReportPropertyChanging("PurchasedDate");
                _PurchasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasedDate");
                OnPurchasedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchasedDate;
        partial void OnPurchasedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Vendor
        {
            get
            {
                return _Vendor;
            }
            set
            {
                OnVendorChanging(value);
                ReportPropertyChanging("Vendor");
                _Vendor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vendor");
                OnVendorChanged();
            }
        }
        private Nullable<global::System.Int32> _Vendor;
        partial void OnVendorChanging(Nullable<global::System.Int32> value);
        partial void OnVendorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_tire_vendor", "vendor")]
        public Vendor VendorDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ClearOffice.Fleet.Business.FK_tire_vendor", "vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ClearOffice.Fleet.Business.FK_tire_vendor", "vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ClearOffice.Fleet.Business.FK_tire_vendor", "vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("ClearOffice.Fleet.Business.FK_tire_vendor", "vendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_vehicle_tire_tire", "vehicle_tire")]
        public EntityCollection<VehicleTire> UsageHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VehicleTire>("ClearOffice.Fleet.Business.fk_vehicle_tire_tire", "vehicle_tire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VehicleTire>("ClearOffice.Fleet.Business.fk_vehicle_tire_tire", "vehicle_tire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="TireBrandInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TireBrandInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TireBrandInfo object.
        /// </summary>
        /// <param name="lookupItemId">Initial value of the LookupItemId property.</param>
        public static TireBrandInfo CreateTireBrandInfo(global::System.Int32 lookupItemId)
        {
            TireBrandInfo tireBrandInfo = new TireBrandInfo();
            tireBrandInfo.LookupItemId = lookupItemId;
            return tireBrandInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupItemId
        {
            get
            {
                return _LookupItemId;
            }
            set
            {
                if (_LookupItemId != value)
                {
                    OnLookupItemIdChanging(value);
                    ReportPropertyChanging("LookupItemId");
                    _LookupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupItemId");
                    OnLookupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupItemId;
        partial void OnLookupItemIdChanging(global::System.Int32 value);
        partial void OnLookupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LookupId;
        partial void OnLookupIdChanging(Nullable<global::System.Int32> value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="TireInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TireInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TireInfo object.
        /// </summary>
        /// <param name="tireId">Initial value of the TireId property.</param>
        public static TireInfo CreateTireInfo(global::System.Int32 tireId)
        {
            TireInfo tireInfo = new TireInfo();
            tireInfo.TireId = tireId;
            return tireInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TireId
        {
            get
            {
                return _TireId;
            }
            set
            {
                if (_TireId != value)
                {
                    OnTireIdChanging(value);
                    ReportPropertyChanging("TireId");
                    _TireId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TireId");
                    OnTireIdChanged();
                }
            }
        }
        private global::System.Int32 _TireId;
        partial void OnTireIdChanging(global::System.Int32 value);
        partial void OnTireIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private Nullable<global::System.Int32> _Brand;
        partial void OnBrandChanging(Nullable<global::System.Int32> value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Size;
        partial void OnSizeChanging(Nullable<global::System.Int32> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TireType
        {
            get
            {
                return _TireType;
            }
            set
            {
                OnTireTypeChanging(value);
                ReportPropertyChanging("TireType");
                _TireType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TireType");
                OnTireTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _TireType;
        partial void OnTireTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTireTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchasedDate
        {
            get
            {
                return _PurchasedDate;
            }
            set
            {
                OnPurchasedDateChanging(value);
                ReportPropertyChanging("PurchasedDate");
                _PurchasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasedDate");
                OnPurchasedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchasedDate;
        partial void OnPurchasedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Vendor
        {
            get
            {
                return _Vendor;
            }
            set
            {
                OnVendorChanging(value);
                ReportPropertyChanging("Vendor");
                _Vendor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vendor");
                OnVendorChanged();
            }
        }
        private Nullable<global::System.Int32> _Vendor;
        partial void OnVendorChanging(Nullable<global::System.Int32> value);
        partial void OnVendorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SizeName
        {
            get
            {
                return _SizeName;
            }
            set
            {
                OnSizeNameChanging(value);
                ReportPropertyChanging("SizeName");
                _SizeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SizeName");
                OnSizeNameChanged();
            }
        }
        private global::System.String _SizeName;
        partial void OnSizeNameChanging(global::System.String value);
        partial void OnSizeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorName
        {
            get
            {
                return _VendorName;
            }
            set
            {
                OnVendorNameChanging(value);
                ReportPropertyChanging("VendorName");
                _VendorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VendorName");
                OnVendorNameChanged();
            }
        }
        private global::System.String _VendorName;
        partial void OnVendorNameChanging(global::System.String value);
        partial void OnVendorNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="TireSizeInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TireSizeInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TireSizeInfo object.
        /// </summary>
        /// <param name="lookupItemId">Initial value of the LookupItemId property.</param>
        public static TireSizeInfo CreateTireSizeInfo(global::System.Int32 lookupItemId)
        {
            TireSizeInfo tireSizeInfo = new TireSizeInfo();
            tireSizeInfo.LookupItemId = lookupItemId;
            return tireSizeInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupItemId
        {
            get
            {
                return _LookupItemId;
            }
            set
            {
                if (_LookupItemId != value)
                {
                    OnLookupItemIdChanging(value);
                    ReportPropertyChanging("LookupItemId");
                    _LookupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupItemId");
                    OnLookupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupItemId;
        partial void OnLookupItemIdChanging(global::System.Int32 value);
        partial void OnLookupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LookupId;
        partial void OnLookupIdChanging(Nullable<global::System.Int32> value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="TireStatusInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TireStatusInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TireStatusInfo object.
        /// </summary>
        /// <param name="lookupItemId">Initial value of the LookupItemId property.</param>
        public static TireStatusInfo CreateTireStatusInfo(global::System.Int32 lookupItemId)
        {
            TireStatusInfo tireStatusInfo = new TireStatusInfo();
            tireStatusInfo.LookupItemId = lookupItemId;
            return tireStatusInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupItemId
        {
            get
            {
                return _LookupItemId;
            }
            set
            {
                if (_LookupItemId != value)
                {
                    OnLookupItemIdChanging(value);
                    ReportPropertyChanging("LookupItemId");
                    _LookupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupItemId");
                    OnLookupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupItemId;
        partial void OnLookupItemIdChanging(global::System.Int32 value);
        partial void OnLookupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LookupId;
        partial void OnLookupIdChanging(Nullable<global::System.Int32> value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="TireTypeInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TireTypeInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TireTypeInfo object.
        /// </summary>
        /// <param name="lookupItemId">Initial value of the LookupItemId property.</param>
        public static TireTypeInfo CreateTireTypeInfo(global::System.Int32 lookupItemId)
        {
            TireTypeInfo tireTypeInfo = new TireTypeInfo();
            tireTypeInfo.LookupItemId = lookupItemId;
            return tireTypeInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupItemId
        {
            get
            {
                return _LookupItemId;
            }
            set
            {
                if (_LookupItemId != value)
                {
                    OnLookupItemIdChanging(value);
                    ReportPropertyChanging("LookupItemId");
                    _LookupItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupItemId");
                    OnLookupItemIdChanged();
                }
            }
        }
        private global::System.Int32 _LookupItemId;
        partial void OnLookupItemIdChanging(global::System.Int32 value);
        partial void OnLookupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                OnLookupIdChanging(value);
                ReportPropertyChanging("LookupId");
                _LookupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LookupId");
                OnLookupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LookupId;
        partial void OnLookupIdChanging(Nullable<global::System.Int32> value);
        partial void OnLookupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 vehicleId)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.VehicleId = vehicleId;
            return vehicle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                if (_VehicleId != value)
                {
                    OnVehicleIdChanging(value);
                    ReportPropertyChanging("VehicleId");
                    _VehicleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VehicleId");
                    OnVehicleIdChanged();
                }
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlateNumber
        {
            get
            {
                return _PlateNumber;
            }
            set
            {
                OnPlateNumberChanging(value);
                ReportPropertyChanging("PlateNumber");
                _PlateNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlateNumber");
                OnPlateNumberChanged();
            }
        }
        private global::System.String _PlateNumber;
        partial void OnPlateNumberChanging(global::System.String value);
        partial void OnPlateNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MakeId
        {
            get
            {
                return _MakeId;
            }
            set
            {
                OnMakeIdChanging(value);
                ReportPropertyChanging("MakeId");
                _MakeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MakeId");
                OnMakeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MakeId;
        partial void OnMakeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMakeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleType
        {
            get
            {
                return _VehicleType;
            }
            set
            {
                OnVehicleTypeChanging(value);
                ReportPropertyChanging("VehicleType");
                _VehicleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleType");
                OnVehicleTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleType;
        partial void OnVehicleTypeChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelId
        {
            get
            {
                return _ModelId;
            }
            set
            {
                OnModelIdChanging(value);
                ReportPropertyChanging("ModelId");
                _ModelId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelId");
                OnModelIdChanged();
            }
        }
        private global::System.String _ModelId;
        partial void OnModelIdChanging(global::System.String value);
        partial void OnModelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VendorId;
        partial void OnVendorIdChanging(Nullable<global::System.Int32> value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.String _StatusId;
        partial void OnStatusIdChanging(global::System.String value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnershipId
        {
            get
            {
                return _OwnershipId;
            }
            set
            {
                OnOwnershipIdChanging(value);
                ReportPropertyChanging("OwnershipId");
                _OwnershipId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnershipId");
                OnOwnershipIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnershipId;
        partial void OnOwnershipIdChanging(Nullable<global::System.Int32> value);
        partial void OnOwnershipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionYear
        {
            get
            {
                return _ProductionYear;
            }
            set
            {
                OnProductionYearChanging(value);
                ReportPropertyChanging("ProductionYear");
                _ProductionYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductionYear");
                OnProductionYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionYear;
        partial void OnProductionYearChanging(Nullable<global::System.Int32> value);
        partial void OnProductionYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchasedFrom
        {
            get
            {
                return _PurchasedFrom;
            }
            set
            {
                OnPurchasedFromChanging(value);
                ReportPropertyChanging("PurchasedFrom");
                _PurchasedFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PurchasedFrom");
                OnPurchasedFromChanged();
            }
        }
        private global::System.String _PurchasedFrom;
        partial void OnPurchasedFromChanging(global::System.String value);
        partial void OnPurchasedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseDate;
        partial void OnPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurchasePrice;
        partial void OnPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PurchaseOdometer
        {
            get
            {
                return _PurchaseOdometer;
            }
            set
            {
                OnPurchaseOdometerChanging(value);
                ReportPropertyChanging("PurchaseOdometer");
                _PurchaseOdometer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseOdometer");
                OnPurchaseOdometerChanged();
            }
        }
        private Nullable<global::System.Double> _PurchaseOdometer;
        partial void OnPurchaseOdometerChanging(Nullable<global::System.Double> value);
        partial void OnPurchaseOdometerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EngineSerial
        {
            get
            {
                return _EngineSerial;
            }
            set
            {
                OnEngineSerialChanging(value);
                ReportPropertyChanging("EngineSerial");
                _EngineSerial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EngineSerial");
                OnEngineSerialChanged();
            }
        }
        private global::System.String _EngineSerial;
        partial void OnEngineSerialChanging(global::System.String value);
        partial void OnEngineSerialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChasisNo
        {
            get
            {
                return _ChasisNo;
            }
            set
            {
                OnChasisNoChanging(value);
                ReportPropertyChanging("ChasisNo");
                _ChasisNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChasisNo");
                OnChasisNoChanged();
            }
        }
        private global::System.String _ChasisNo;
        partial void OnChasisNoChanging(global::System.String value);
        partial void OnChasisNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cylinders
        {
            get
            {
                return _Cylinders;
            }
            set
            {
                OnCylindersChanging(value);
                ReportPropertyChanging("Cylinders");
                _Cylinders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cylinders");
                OnCylindersChanged();
            }
        }
        private Nullable<global::System.Int32> _Cylinders;
        partial void OnCylindersChanging(Nullable<global::System.Int32> value);
        partial void OnCylindersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Power
        {
            get
            {
                return _Power;
            }
            set
            {
                OnPowerChanging(value);
                ReportPropertyChanging("Power");
                _Power = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Power");
                OnPowerChanged();
            }
        }
        private Nullable<global::System.Int32> _Power;
        partial void OnPowerChanging(Nullable<global::System.Int32> value);
        partial void OnPowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FuelTypeId
        {
            get
            {
                return _FuelTypeId;
            }
            set
            {
                OnFuelTypeIdChanging(value);
                ReportPropertyChanging("FuelTypeId");
                _FuelTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelTypeId");
                OnFuelTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FuelTypeId;
        partial void OnFuelTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFuelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ColorId
        {
            get
            {
                return _ColorId;
            }
            set
            {
                OnColorIdChanging(value);
                ReportPropertyChanging("ColorId");
                _ColorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColorId");
                OnColorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ColorId;
        partial void OnColorIdChanging(Nullable<global::System.Int32> value);
        partial void OnColorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfTires
        {
            get
            {
                return _NoOfTires;
            }
            set
            {
                OnNoOfTiresChanging(value);
                ReportPropertyChanging("NoOfTires");
                _NoOfTires = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfTires");
                OnNoOfTiresChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfTires;
        partial void OnNoOfTiresChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfTiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TyreConfig
        {
            get
            {
                return _TyreConfig;
            }
            set
            {
                OnTyreConfigChanging(value);
                ReportPropertyChanging("TyreConfig");
                _TyreConfig = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TyreConfig");
                OnTyreConfigChanged();
            }
        }
        private Nullable<global::System.Int32> _TyreConfig;
        partial void OnTyreConfigChanging(Nullable<global::System.Int32> value);
        partial void OnTyreConfigChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LibreNo
        {
            get
            {
                return _LibreNo;
            }
            set
            {
                OnLibreNoChanging(value);
                ReportPropertyChanging("LibreNo");
                _LibreNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LibreNo");
                OnLibreNoChanged();
            }
        }
        private global::System.String _LibreNo;
        partial void OnLibreNoChanging(global::System.String value);
        partial void OnLibreNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FueltankCapacity
        {
            get
            {
                return _FueltankCapacity;
            }
            set
            {
                OnFueltankCapacityChanging(value);
                ReportPropertyChanging("FueltankCapacity");
                _FueltankCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FueltankCapacity");
                OnFueltankCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _FueltankCapacity;
        partial void OnFueltankCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnFueltankCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_expense_reference_vehicle", "expense")]
        public EntityCollection<Expense> Expenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expense>("ClearOffice.Fleet.Business.fk_expense_reference_vehicle", "expense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expense>("ClearOffice.Fleet.Business.fk_expense_reference_vehicle", "expense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_fuel_log_reference_vehicle", "fuel_log")]
        public EntityCollection<FuelLog> FuelLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FuelLog>("ClearOffice.Fleet.Business.fk_fuel_log_reference_vehicle", "fuel_log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FuelLog>("ClearOffice.Fleet.Business.fk_fuel_log_reference_vehicle", "fuel_log", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_insuranc_reference_vehicle", "insurance_history")]
        public EntityCollection<InsurancePolicy> InsuranceHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsurancePolicy>("ClearOffice.Fleet.Business.fk_insuranc_reference_vehicle", "insurance_history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsurancePolicy>("ClearOffice.Fleet.Business.fk_insuranc_reference_vehicle", "insurance_history", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_maintanance_vehicle", "maintanance")]
        public EntityCollection<Maintanance> Maintanances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Maintanance>("ClearOffice.Fleet.Business.FK_maintanance_vehicle", "maintanance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Maintanance>("ClearOffice.Fleet.Business.FK_maintanance_vehicle", "maintanance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "FK_coupon_transaction_vehicle", "coupon_transaction")]
        public EntityCollection<CouponTransaction> coupon_transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CouponTransaction>("ClearOffice.Fleet.Business.FK_coupon_transaction_vehicle", "coupon_transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CouponTransaction>("ClearOffice.Fleet.Business.FK_coupon_transaction_vehicle", "coupon_transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_tire_reference_vehicle", "vehicle_tire")]
        public EntityCollection<VehicleTire> TireUsage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VehicleTire>("ClearOffice.Fleet.Business.fk_tire_reference_vehicle", "vehicle_tire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VehicleTire>("ClearOffice.Fleet.Business.fk_tire_reference_vehicle", "vehicle_tire", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="VehicleInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VehicleInfo object.
        /// </summary>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static VehicleInfo CreateVehicleInfo(global::System.Int32 vehicleId)
        {
            VehicleInfo vehicleInfo = new VehicleInfo();
            vehicleInfo.VehicleId = vehicleId;
            return vehicleInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                if (_VehicleId != value)
                {
                    OnVehicleIdChanging(value);
                    ReportPropertyChanging("VehicleId");
                    _VehicleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VehicleId");
                    OnVehicleIdChanged();
                }
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlateNumber
        {
            get
            {
                return _PlateNumber;
            }
            set
            {
                OnPlateNumberChanging(value);
                ReportPropertyChanging("PlateNumber");
                _PlateNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlateNumber");
                OnPlateNumberChanged();
            }
        }
        private global::System.String _PlateNumber;
        partial void OnPlateNumberChanging(global::System.String value);
        partial void OnPlateNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MakeId
        {
            get
            {
                return _MakeId;
            }
            set
            {
                OnMakeIdChanging(value);
                ReportPropertyChanging("MakeId");
                _MakeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MakeId");
                OnMakeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MakeId;
        partial void OnMakeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMakeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleType
        {
            get
            {
                return _VehicleType;
            }
            set
            {
                OnVehicleTypeChanging(value);
                ReportPropertyChanging("VehicleType");
                _VehicleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleType");
                OnVehicleTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleType;
        partial void OnVehicleTypeChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ownership
        {
            get
            {
                return _Ownership;
            }
            set
            {
                OnOwnershipChanging(value);
                ReportPropertyChanging("Ownership");
                _Ownership = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ownership");
                OnOwnershipChanged();
            }
        }
        private Nullable<global::System.Int32> _Ownership;
        partial void OnOwnershipChanging(Nullable<global::System.Int32> value);
        partial void OnOwnershipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductionYear
        {
            get
            {
                return _ProductionYear;
            }
            set
            {
                OnProductionYearChanging(value);
                ReportPropertyChanging("ProductionYear");
                _ProductionYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductionYear");
                OnProductionYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductionYear;
        partial void OnProductionYearChanging(Nullable<global::System.Int32> value);
        partial void OnProductionYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChasisNo
        {
            get
            {
                return _ChasisNo;
            }
            set
            {
                OnChasisNoChanging(value);
                ReportPropertyChanging("ChasisNo");
                _ChasisNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChasisNo");
                OnChasisNoChanged();
            }
        }
        private global::System.String _ChasisNo;
        partial void OnChasisNoChanging(global::System.String value);
        partial void OnChasisNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EngineSerial
        {
            get
            {
                return _EngineSerial;
            }
            set
            {
                OnEngineSerialChanging(value);
                ReportPropertyChanging("EngineSerial");
                _EngineSerial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EngineSerial");
                OnEngineSerialChanged();
            }
        }
        private global::System.String _EngineSerial;
        partial void OnEngineSerialChanging(global::System.String value);
        partial void OnEngineSerialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LibreNo
        {
            get
            {
                return _LibreNo;
            }
            set
            {
                OnLibreNoChanging(value);
                ReportPropertyChanging("LibreNo");
                _LibreNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LibreNo");
                OnLibreNoChanged();
            }
        }
        private global::System.String _LibreNo;
        partial void OnLibreNoChanging(global::System.String value);
        partial void OnLibreNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleMakeName
        {
            get
            {
                return _VehicleMakeName;
            }
            set
            {
                OnVehicleMakeNameChanging(value);
                ReportPropertyChanging("VehicleMakeName");
                _VehicleMakeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleMakeName");
                OnVehicleMakeNameChanged();
            }
        }
        private global::System.String _VehicleMakeName;
        partial void OnVehicleMakeNameChanging(global::System.String value);
        partial void OnVehicleMakeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleOwnershipName
        {
            get
            {
                return _VehicleOwnershipName;
            }
            set
            {
                OnVehicleOwnershipNameChanging(value);
                ReportPropertyChanging("VehicleOwnershipName");
                _VehicleOwnershipName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleOwnershipName");
                OnVehicleOwnershipNameChanged();
            }
        }
        private global::System.String _VehicleOwnershipName;
        partial void OnVehicleOwnershipNameChanging(global::System.String value);
        partial void OnVehicleOwnershipNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleTypeName
        {
            get
            {
                return _VehicleTypeName;
            }
            set
            {
                OnVehicleTypeNameChanging(value);
                ReportPropertyChanging("VehicleTypeName");
                _VehicleTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleTypeName");
                OnVehicleTypeNameChanged();
            }
        }
        private global::System.String _VehicleTypeName;
        partial void OnVehicleTypeNameChanging(global::System.String value);
        partial void OnVehicleTypeNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="VehicleTire")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleTire : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VehicleTire object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="tireId">Initial value of the TireId property.</param>
        /// <param name="vehicleId">Initial value of the VehicleId property.</param>
        public static VehicleTire CreateVehicleTire(global::System.Int32 transactionId, global::System.Int32 tireId, global::System.Int32 vehicleId)
        {
            VehicleTire vehicleTire = new VehicleTire();
            vehicleTire.TransactionId = transactionId;
            vehicleTire.TireId = tireId;
            vehicleTire.VehicleId = vehicleId;
            return vehicleTire;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int32 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TireId
        {
            get
            {
                return _TireId;
            }
            set
            {
                OnTireIdChanging(value);
                ReportPropertyChanging("TireId");
                _TireId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TireId");
                OnTireIdChanged();
            }
        }
        private global::System.Int32 _TireId;
        partial void OnTireIdChanging(global::System.Int32 value);
        partial void OnTireIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleId
        {
            get
            {
                return _VehicleId;
            }
            set
            {
                OnVehicleIdChanging(value);
                ReportPropertyChanging("VehicleId");
                _VehicleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleId");
                OnVehicleIdChanged();
            }
        }
        private global::System.Int32 _VehicleId;
        partial void OnVehicleIdChanging(global::System.Int32 value);
        partial void OnVehicleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MountedDate
        {
            get
            {
                return _MountedDate;
            }
            set
            {
                OnMountedDateChanging(value);
                ReportPropertyChanging("MountedDate");
                _MountedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MountedDate");
                OnMountedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MountedDate;
        partial void OnMountedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMountedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MountedMilage
        {
            get
            {
                return _MountedMilage;
            }
            set
            {
                OnMountedMilageChanging(value);
                ReportPropertyChanging("MountedMilage");
                _MountedMilage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MountedMilage");
                OnMountedMilageChanged();
            }
        }
        private Nullable<global::System.Double> _MountedMilage;
        partial void OnMountedMilageChanging(Nullable<global::System.Double> value);
        partial void OnMountedMilageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UnmountedDate
        {
            get
            {
                return _UnmountedDate;
            }
            set
            {
                OnUnmountedDateChanging(value);
                ReportPropertyChanging("UnmountedDate");
                _UnmountedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnmountedDate");
                OnUnmountedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UnmountedDate;
        partial void OnUnmountedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUnmountedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UnmountMilage
        {
            get
            {
                return _UnmountMilage;
            }
            set
            {
                OnUnmountMilageChanging(value);
                ReportPropertyChanging("UnmountMilage");
                _UnmountMilage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnmountMilage");
                OnUnmountMilageChanged();
            }
        }
        private Nullable<global::System.Double> _UnmountMilage;
        partial void OnUnmountMilageChanging(Nullable<global::System.Double> value);
        partial void OnUnmountMilageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_vehicle_tire_tire", "Tire")]
        public Tire TireDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tire>("ClearOffice.Fleet.Business.fk_vehicle_tire_tire", "Tire").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tire>("ClearOffice.Fleet.Business.fk_vehicle_tire_tire", "Tire").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tire> TireDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tire>("ClearOffice.Fleet.Business.fk_vehicle_tire_tire", "Tire");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tire>("ClearOffice.Fleet.Business.fk_vehicle_tire_tire", "Tire", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClearOffice.Fleet.Business", "fk_tire_reference_vehicle", "Vehicle")]
        public Vehicle VehicleDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_tire_reference_vehicle", "Vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_tire_reference_vehicle", "Vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_tire_reference_vehicle", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("ClearOffice.Fleet.Business.fk_tire_reference_vehicle", "Vehicle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClearOffice.Fleet.Business", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Vendor CreateVendor(global::System.Int32 vendorId, global::System.String name)
        {
            Vendor vendor = new Vendor();
            vendor.VendorId = vendorId;
            vendor.Name = name;
            return vendor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                if (_VendorId != value)
                {
                    OnVendorIdChanging(value);
                    ReportPropertyChanging("VendorId");
                    _VendorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VendorId");
                    OnVendorIdChanged();
                }
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Service
        {
            get
            {
                return _Service;
            }
            set
            {
                OnServiceChanging(value);
                ReportPropertyChanging("Service");
                _Service = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Service");
                OnServiceChanged();
            }
        }
        private Nullable<global::System.Boolean> _Service;
        partial void OnServiceChanging(Nullable<global::System.Boolean> value);
        partial void OnServiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Dealer
        {
            get
            {
                return _Dealer;
            }
            set
            {
                OnDealerChanging(value);
                ReportPropertyChanging("Dealer");
                _Dealer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dealer");
                OnDealerChanged();
            }
        }
        private Nullable<global::System.Boolean> _Dealer;
        partial void OnDealerChanging(Nullable<global::System.Boolean> value);
        partial void OnDealerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Parts
        {
            get
            {
                return _Parts;
            }
            set
            {
                OnPartsChanging(value);
                ReportPropertyChanging("Parts");
                _Parts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parts");
                OnPartsChanged();
            }
        }
        private Nullable<global::System.Boolean> _Parts;
        partial void OnPartsChanging(Nullable<global::System.Boolean> value);
        partial void OnPartsChanged();

        #endregion

    
    }

    #endregion

    
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
//  <auto-generated>
//     This code was generated by NetSqlAzMan CodeDom.
//     NetSqlAzMan - Andrea Ferendeles - http://netsqlazman.codeplex.com
//     NetSqlAzMan Version: 3.6.0.15
//     CLR Version: v4.0.30319
//     <NetSqlAzMan-info>
//        Store: ClearOffice
//        Application: Inventory
//        Last update: 1/29/2013 10:39:09 AM
//     </NetSqlAzMan-info>
//  </auto-generated>
// ------------------------------------------------------------------------------
// 
// 
// TODO: Add NetSqlAzMan.dll Assembly reference.
// 
// 
namespace ClearOffice.Security
{
    using System;
    using System.Security.Principal;
    using System.Collections.Generic;
    using System.Text;
    using NetSqlAzMan;
    using NetSqlAzMan.Interfaces;

    /// <summary>
    /// NetSqlAzMan Check Access Helper Class for NetSqlAzMan 'Inventory' Application 
    /// </summary>
    public partial class InventoryPermissionHelper
    {
        /// <summary>
        /// Retrieve Item name from a Role Enum.
        /// </summary>
        /// <param name="role">The role.</param>
        /// <returns>The Role Name.</returns>
        public virtual string ItemName(Role role)
        {
            if ((role == Role.StockManager))
            {
                return "StockManager";
            }
            if ((role == Role.StoreKeeper))
            {
                return "StoreKeeper";
            }
            throw new System.ArgumentException("Unknown Role name", "role");
        }
        /// <summary>
        /// Retrieve Item name from a Task Enum.
        /// </summary>
        /// <param name="task">The task.</param>
        /// <returns>The Task Name.</returns>
        public virtual string ItemName(Task task)
        {
            if ((task == Task.LoadModule))
            {
                return "LoadModule";
            }
            throw new System.ArgumentException("Unknown Task name", "task");
        }
        /// <summary>
        /// Retrieve Item name from a Operation Enum.
        /// </summary>
        /// <param name="operation">The operation.</param>
        /// <returns>The Operation Name.</returns>
        public virtual string ItemName(Operation operation)
        {
            if ((operation == Operation.AddItem))
            {
                return "AddItem";
            }
            if ((operation == Operation.AddItemAdjustment))
            {
                return "AddItemAdjustment";
            }
            if ((operation == Operation.AddItemIssue))
            {
                return "AddItemIssue";
            }
            if ((operation == Operation.AddItemReceiving))
            {
                return "AddItemReceiving";
            }
            if ((operation == Operation.AddItemReturn))
            {
                return "AddItemReturn";
            }
            if ((operation == Operation.AddItemTransfer))
            {
                return "AddItemTransfer";
            }
            if ((operation == Operation.AddMeasurement))
            {
                return "AddMeasurement";
            }
            if ((operation == Operation.AddSupplier))
            {
                return "AddSupplier";
            }
            if ((operation == Operation.AddWarehouse))
            {
                return "AddWarehouse";
            }
            if ((operation == Operation.DeleteAdjustment))
            {
                return "DeleteAdjustment";
            }
            if ((operation == Operation.DeleteItemIssue))
            {
                return "DeleteItemIssue";
            }
            if ((operation == Operation.DeleteItemRecieving))
            {
                return "DeleteItemRecieving";
            }
            if ((operation == Operation.DeleteItemReturn))
            {
                return "DeleteItemReturn";
            }
            if ((operation == Operation.DeleteItemTransfer))
            {
                return "DeleteItemTransfer";
            }
            if ((operation == Operation.ItemName))
            {
                return "ItemName";
            }
            if ((operation == Operation.PostItemAdjustment))
            {
                return "PostItemAdjustment";
            }
            if ((operation == Operation.PostItemIssue))
            {
                return "PostItemIssue";
            }
            if ((operation == Operation.PostItemReceiving))
            {
                return "PostItemReceiving";
            }
            if ((operation == Operation.PostItemReturn))
            {
                return "PostItemReturn";
            }
            if ((operation == Operation.PostItemTransfer))
            {
                return "PostItemTransfer";
            }
            if ((operation == Operation.UpdateAdjustment))
            {
                return "UpdateAdjustment";
            }
            if ((operation == Operation.UpdateItemIssue))
            {
                return "UpdateItemIssue";
            }
            if ((operation == Operation.UpdateItemReceiving))
            {
                return "UpdateItemReceiving";
            }
            if ((operation == Operation.UpdateItemReturn))
            {
                return "UpdateItemReturn";
            }
            if ((operation == Operation.UpdateItemTransfer))
            {
                return "UpdateItemTransfer";
            }
            throw new System.ArgumentException("Unknown Operation name", "operation");
        }
        
        #region Enums
        /// <summary>
        /// Roles Enumeration
        /// </summary>
        public enum Role
        {
            /// <summary>
            /// Role StockManager
            /// </summary>
            StockManager,
            /// <summary>
            /// Role StoreKeeper
            /// </summary>
            StoreKeeper,
        }
        /// <summary>
        /// Tasks Enumeration
        /// </summary>
        public enum Task
        {
            /// <summary>
            /// Task LoadModule
            /// </summary>
            LoadModule,
        }
        /// <summary>
        /// Operations Enumeration
        /// </summary>
        public enum Operation
        {
            /// <summary>
            /// Operation AddItem
            /// </summary>
            AddItem,
            /// <summary>
            /// Operation AddItemAdjustment
            /// </summary>
            AddItemAdjustment,
            /// <summary>
            /// Operation AddItemIssue
            /// </summary>
            AddItemIssue,
            /// <summary>
            /// Operation AddItemReceiving
            /// </summary>
            AddItemReceiving,
            /// <summary>
            /// Operation AddItemReturn
            /// </summary>
            AddItemReturn,
            /// <summary>
            /// Operation AddItemTransfer
            /// </summary>
            AddItemTransfer,
            /// <summary>
            /// Operation AddMeasurement
            /// </summary>
            AddMeasurement,
            /// <summary>
            /// Operation AddSupplier
            /// </summary>
            AddSupplier,
            /// <summary>
            /// Operation AddWarehouse
            /// </summary>
            AddWarehouse,
            /// <summary>
            /// Operation DeleteAdjustment
            /// </summary>
            DeleteAdjustment,
            /// <summary>
            /// Operation DeleteItemIssue
            /// </summary>
            DeleteItemIssue,
            /// <summary>
            /// Operation DeleteItemRecieving
            /// </summary>
            DeleteItemRecieving,
            /// <summary>
            /// Operation DeleteItemReturn
            /// </summary>
            DeleteItemReturn,
            /// <summary>
            /// Operation DeleteItemTransfer
            /// </summary>
            DeleteItemTransfer,
            /// <summary>
            /// Operation ItemName
            /// </summary>
            ItemName,
            /// <summary>
            /// Operation PostItemAdjustment
            /// </summary>
            PostItemAdjustment,
            /// <summary>
            /// Operation PostItemIssue
            /// </summary>
            PostItemIssue,
            /// <summary>
            /// Operation PostItemReceiving
            /// </summary>
            PostItemReceiving,
            /// <summary>
            /// Operation PostItemReturn
            /// </summary>
            PostItemReturn,
            /// <summary>
            /// Operation PostItemTransfer
            /// </summary>
            PostItemTransfer,
            /// <summary>
            /// Operation UpdateAdjustment
            /// </summary>
            UpdateAdjustment,
            /// <summary>
            /// Operation UpdateItemIssue
            /// </summary>
            UpdateItemIssue,
            /// <summary>
            /// Operation UpdateItemReceiving
            /// </summary>
            UpdateItemReceiving,
            /// <summary>
            /// Operation UpdateItemReturn
            /// </summary>
            UpdateItemReturn,
            /// <summary>
            /// Operation UpdateItemTransfer
            /// </summary>
            UpdateItemTransfer,
        }
        #endregion
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
//  <auto-generated>
//     This code was generated by NetSqlAzMan CodeDom.
//     NetSqlAzMan - Andrea Ferendeles - http://netsqlazman.codeplex.com
//     NetSqlAzMan Version: 3.6.0.15
//     CLR Version: v4.0.30319
//     <NetSqlAzMan-info>
//        Store: ClearOffice
//        Application: Inventory
//        Last update: 1/29/2013 10:39:09 AM
//     </NetSqlAzMan-info>
//  </auto-generated>
// ------------------------------------------------------------------------------
// 
namespace ClearOffice.Security
{
    using System;

    /// <summary>
    /// NetSqlAzMan ROLE Helper Class for NetSqlAzMan 'Inventory' Application 
    /// </summary>
    public partial class ROLE
    {
        /// <summary>
        /// ROLE 'StockManager'
        /// </summary>
        public const string STOCKMANAGER = "StockManager";
        /// <summary>
        /// ROLE 'StoreKeeper'
        /// </summary>
        public const string STOREKEEPER = "StoreKeeper";
    }
    /// <summary>
    /// NetSqlAzMan TASK Helper Class for NetSqlAzMan 'Inventory' Application 
    /// </summary>
    public partial class TASK
    {
        /// <summary>
        /// TASK 'LoadModule'
        /// </summary>
        public const string LOADMODULE = "LoadModule";
    }
    /// <summary>
    /// NetSqlAzMan OPERATION Helper Class for NetSqlAzMan 'Inventory' Application 
    /// </summary>
    public partial class OPERATION
    {
        /// <summary>
        /// OPERATION 'AddItem'
        /// </summary>
        public const string ADDITEM = "AddItem";
        /// <summary>
        /// OPERATION 'AddItemAdjustment'
        /// </summary>
        public const string ADDITEMADJUSTMENT = "AddItemAdjustment";
        /// <summary>
        /// OPERATION 'AddItemIssue'
        /// </summary>
        public const string ADDITEMISSUE = "AddItemIssue";
        /// <summary>
        /// OPERATION 'AddItemReceiving'
        /// </summary>
        public const string ADDITEMRECEIVING = "AddItemReceiving";
        /// <summary>
        /// OPERATION 'AddItemReturn'
        /// </summary>
        public const string ADDITEMRETURN = "AddItemReturn";
        /// <summary>
        /// OPERATION 'AddItemTransfer'
        /// </summary>
        public const string ADDITEMTRANSFER = "AddItemTransfer";
        /// <summary>
        /// OPERATION 'AddMeasurement'
        /// </summary>
        public const string ADDMEASUREMENT = "AddMeasurement";
        /// <summary>
        /// OPERATION 'AddSupplier'
        /// </summary>
        public const string ADDSUPPLIER = "AddSupplier";
        /// <summary>
        /// OPERATION 'AddWarehouse'
        /// </summary>
        public const string ADDWAREHOUSE = "AddWarehouse";
        /// <summary>
        /// OPERATION 'DeleteAdjustment'
        /// </summary>
        public const string DELETEADJUSTMENT = "DeleteAdjustment";
        /// <summary>
        /// OPERATION 'DeleteItemIssue'
        /// </summary>
        public const string DELETEITEMISSUE = "DeleteItemIssue";
        /// <summary>
        /// OPERATION 'DeleteItemRecieving'
        /// </summary>
        public const string DELETEITEMRECIEVING = "DeleteItemRecieving";
        /// <summary>
        /// OPERATION 'DeleteItemReturn'
        /// </summary>
        public const string DELETEITEMRETURN = "DeleteItemReturn";
        /// <summary>
        /// OPERATION 'DeleteItemTransfer'
        /// </summary>
        public const string DELETEITEMTRANSFER = "DeleteItemTransfer";
        /// <summary>
        /// OPERATION 'ItemName'
        /// </summary>
        public const string ITEMNAME = "ItemName";
        /// <summary>
        /// OPERATION 'PostItemAdjustment'
        /// </summary>
        public const string POSTITEMADJUSTMENT = "PostItemAdjustment";
        /// <summary>
        /// OPERATION 'PostItemIssue'
        /// </summary>
        public const string POSTITEMISSUE = "PostItemIssue";
        /// <summary>
        /// OPERATION 'PostItemReceiving'
        /// </summary>
        public const string POSTITEMRECEIVING = "PostItemReceiving";
        /// <summary>
        /// OPERATION 'PostItemReturn'
        /// </summary>
        public const string POSTITEMRETURN = "PostItemReturn";
        /// <summary>
        /// OPERATION 'PostItemTransfer'
        /// </summary>
        public const string POSTITEMTRANSFER = "PostItemTransfer";
        /// <summary>
        /// OPERATION 'UpdateAdjustment'
        /// </summary>
        public const string UPDATEADJUSTMENT = "UpdateAdjustment";
        /// <summary>
        /// OPERATION 'UpdateItemIssue'
        /// </summary>
        public const string UPDATEITEMISSUE = "UpdateItemIssue";
        /// <summary>
        /// OPERATION 'UpdateItemReceiving'
        /// </summary>
        public const string UPDATEITEMRECEIVING = "UpdateItemReceiving";
        /// <summary>
        /// OPERATION 'UpdateItemReturn'
        /// </summary>
        public const string UPDATEITEMRETURN = "UpdateItemReturn";
        /// <summary>
        /// OPERATION 'UpdateItemTransfer'
        /// </summary>
        public const string UPDATEITEMTRANSFER = "UpdateItemTransfer";
    }
}
